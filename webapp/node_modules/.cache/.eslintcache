[{"D:\\travel guide\\react-native\\adminportal\\src\\index.js":"1","D:\\travel guide\\react-native\\adminportal\\src\\reportWebVitals.js":"2","D:\\travel guide\\react-native\\adminportal\\src\\App.js":"3","D:\\travel guide\\react-native\\adminportal\\src\\screens\\login.js":"4","D:\\travel guide\\react-native\\adminportal\\src\\screens\\landingPage.js":"5","D:\\travel guide\\react-native\\adminportal\\src\\screens\\dashboard.js":"6","D:\\travel guide\\react-native\\adminportal\\src\\components\\navbar.js":"7","D:\\travel guide\\react-native\\adminportal\\src\\components\\sidebar.js":"8","D:\\travel guide\\react-native\\adminportal\\src\\screens\\Register.js":"9","D:\\travel guide\\react-native\\adminportal\\src\\screens\\adminList.js":"10","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\index.js":"11","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\reportWebVitals.js":"12","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\App.js":"13","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\landingPage.js":"14","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Adminroutes.js":"15","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\index.js":"16","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\dashboard.js":"17","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\viewProvince.js":"18","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Provinces.js":"19","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Register.js":"20","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Editquestions.js":"21","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Viewuserlist.js":"22","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Generatereports.js":"23","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Travelplanlist.js":"24","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\login.js":"25","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\ViewUser.js":"26","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\shredPlans.js":"27","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\ViewAdmin.js":"28","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\adminList.js":"29","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\publicPlans.js":"30","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\testPage.js":"31","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\ViewPOI.js":"32","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\context\\AdminContext.js":"33","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\Footer.js":"34","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\Footer2.js":"35","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\navbar.js":"36","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\AdminComponents\\TravelPlanView.js":"37","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\navbar.js":"38","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\TravelPlan.js":"39","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\context\\TravelContext.js":"40","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\Home.js":"41","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\userPreferences.js":"42","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\ViewMyTravelPlan.js":"43","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\addMorePlaces.js":"44","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\nearbyhotels.js":"45","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\editPlan.js":"46","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\contact.js":"47","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\about.js":"48","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\TopRatedPlans.js":"49","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\signUp.js":"50","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\myAccount.js":"51","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\PlanReview.js":"52","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\customPlan.js":"53","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\provinces.js":"54","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\signIn.js":"55","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\switchPois.js":"56","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\province.js":"57","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\Myplans.js":"58","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\description.js":"59","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\Widget.js":"60","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\galary.js":"61","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\AdminComponents\\planCard.js":"62","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\nearbyplace.js":"63","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\poicard.js":"64","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\services\\ViewPOIServices.js":"65","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\AdminComponents\\placeCard.js":"66","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\reducer\\AdminReducer.js":"67","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\reducer\\TravelReducer.js":"68","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\services\\TravelPlanService.js":"69","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\services\\EditPlanServices.js":"70","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\planCard,.js":"71","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\placeCard.js":"72","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\review.js":"73","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\carousal.js":"74"},{"size":500,"mtime":1629034423284,"results":"75","hashOfConfig":"76"},{"size":362,"mtime":1629034423284,"results":"77","hashOfConfig":"76"},{"size":971,"mtime":1629113603504,"results":"78","hashOfConfig":"76"},{"size":2558,"mtime":1629116312641,"results":"79","hashOfConfig":"76"},{"size":4216,"mtime":1629105492755,"results":"80","hashOfConfig":"76"},{"size":225,"mtime":1629107556049,"results":"81","hashOfConfig":"76"},{"size":749,"mtime":1629117599892,"results":"82","hashOfConfig":"76"},{"size":1793,"mtime":1629116494412,"results":"83","hashOfConfig":"76"},{"size":4186,"mtime":1629115919215,"results":"84","hashOfConfig":"76"},{"size":1619,"mtime":1629202154562,"results":"85","hashOfConfig":"76"},{"size":515,"mtime":1633966477475,"results":"86","hashOfConfig":"87"},{"size":362,"mtime":1629034423284,"results":"88","hashOfConfig":"87"},{"size":861,"mtime":1633972427279,"results":"89","hashOfConfig":"87"},{"size":5689,"mtime":1633973578701,"results":"90","hashOfConfig":"87"},{"size":3397,"mtime":1634200166725,"results":"91","hashOfConfig":"87"},{"size":4005,"mtime":1633966464034,"results":"92","hashOfConfig":"87"},{"size":3047,"mtime":1633972587517,"results":"93","hashOfConfig":"87"},{"size":1068,"mtime":1633972611447,"results":"94","hashOfConfig":"87"},{"size":1824,"mtime":1633972727596,"results":"95","hashOfConfig":"87"},{"size":11764,"mtime":1633972670234,"results":"96","hashOfConfig":"87"},{"size":4788,"mtime":1633972736368,"results":"97","hashOfConfig":"87"},{"size":7032,"mtime":1633972752265,"results":"98","hashOfConfig":"87"},{"size":155,"mtime":1633966477476,"results":"99","hashOfConfig":"87"},{"size":2506,"mtime":1633972791114,"results":"100","hashOfConfig":"87"},{"size":3236,"mtime":1634019713750,"results":"101","hashOfConfig":"87"},{"size":3243,"mtime":1633972761044,"results":"102","hashOfConfig":"87"},{"size":7204,"mtime":1633972906583,"results":"103","hashOfConfig":"87"},{"size":3341,"mtime":1633972774990,"results":"104","hashOfConfig":"87"},{"size":3440,"mtime":1633972715189,"results":"105","hashOfConfig":"87"},{"size":2426,"mtime":1633972979019,"results":"106","hashOfConfig":"87"},{"size":1490,"mtime":1633966464041,"results":"107","hashOfConfig":"87"},{"size":2786,"mtime":1632317631737,"results":"108","hashOfConfig":"87"},{"size":433,"mtime":1633966464026,"results":"109","hashOfConfig":"87"},{"size":1671,"mtime":1632569993565,"results":"110","hashOfConfig":"87"},{"size":329,"mtime":1632558638486,"results":"111","hashOfConfig":"87"},{"size":6622,"mtime":1634201914761,"results":"112","hashOfConfig":"87"},{"size":7112,"mtime":1634206146134,"results":"113","hashOfConfig":"87"},{"size":3759,"mtime":1634295069429,"results":"114","hashOfConfig":"87"},{"size":12323,"mtime":1634224163532,"results":"115","hashOfConfig":"87"},{"size":440,"mtime":1632146151679,"results":"116","hashOfConfig":"87"},{"size":4543,"mtime":1634300257025,"results":"117","hashOfConfig":"87"},{"size":11781,"mtime":1634212262623,"results":"118","hashOfConfig":"87"},{"size":699,"mtime":1632751390692,"results":"119","hashOfConfig":"87"},{"size":2066,"mtime":1633966464032,"results":"120","hashOfConfig":"87"},{"size":1214,"mtime":1632295885889,"results":"121","hashOfConfig":"87"},{"size":8718,"mtime":1634212575186,"results":"122","hashOfConfig":"87"},{"size":94,"mtime":1632569279006,"results":"123","hashOfConfig":"87"},{"size":92,"mtime":1632569258395,"results":"124","hashOfConfig":"87"},{"size":90,"mtime":1632562749719,"results":"125","hashOfConfig":"87"},{"size":6784,"mtime":1633966464036,"results":"126","hashOfConfig":"87"},{"size":96,"mtime":1632551883135,"results":"127","hashOfConfig":"87"},{"size":7158,"mtime":1634296033326,"results":"128","hashOfConfig":"87"},{"size":5301,"mtime":1634227783808,"results":"129","hashOfConfig":"87"},{"size":2294,"mtime":1633966464035,"results":"130","hashOfConfig":"87"},{"size":4363,"mtime":1633966464036,"results":"131","hashOfConfig":"87"},{"size":2127,"mtime":1633966464037,"results":"132","hashOfConfig":"87"},{"size":1745,"mtime":1633966464035,"results":"133","hashOfConfig":"87"},{"size":3846,"mtime":1633966464031,"results":"134","hashOfConfig":"87"},{"size":2381,"mtime":1633966464024,"results":"135","hashOfConfig":"87"},{"size":932,"mtime":1633966477473,"results":"136","hashOfConfig":"87"},{"size":4140,"mtime":1631811842081,"results":"137","hashOfConfig":"87"},{"size":1951,"mtime":1633966464022,"results":"138","hashOfConfig":"87"},{"size":2565,"mtime":1634206160152,"results":"139","hashOfConfig":"87"},{"size":1770,"mtime":1634206313096,"results":"140","hashOfConfig":"87"},{"size":1317,"mtime":1633966464043,"results":"141","hashOfConfig":"87"},{"size":2675,"mtime":1634206123736,"results":"142","hashOfConfig":"87"},{"size":576,"mtime":1633966464027,"results":"143","hashOfConfig":"87"},{"size":1523,"mtime":1633966464028,"results":"144","hashOfConfig":"87"},{"size":7285,"mtime":1634204469377,"results":"145","hashOfConfig":"87"},{"size":12803,"mtime":1634223137479,"results":"146","hashOfConfig":"87"},{"size":1961,"mtime":1632731399731,"results":"147","hashOfConfig":"87"},{"size":2682,"mtime":1634224086853,"results":"148","hashOfConfig":"87"},{"size":1656,"mtime":1632507816609,"results":"149","hashOfConfig":"87"},{"size":968,"mtime":1634206468810,"results":"150","hashOfConfig":"87"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"1y6ipmb",{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"153"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"153"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"153"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"169","usedDeprecatedRules":"153"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"153"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"153"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"13tlt57",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"180"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"180"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"180"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"180"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"199","usedDeprecatedRules":"180"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"180"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"180"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"180"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"180"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"180"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"180"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"180"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"225","usedDeprecatedRules":"180"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"180"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"180"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"234","usedDeprecatedRules":"180"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"180"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"180"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"180"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"254","usedDeprecatedRules":"180"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"180"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"180"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"180"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"272","usedDeprecatedRules":"180"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"180"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"180"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"289","usedDeprecatedRules":"180"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"180"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"180"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"180"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"180"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"304","usedDeprecatedRules":"180"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"307","usedDeprecatedRules":"180"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"180"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"180"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"180"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"180"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"180"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"180"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"180"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"180"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"180"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"180"},"D:\\travel guide\\react-native\\adminportal\\src\\index.js",[],["350","351"],"D:\\travel guide\\react-native\\adminportal\\src\\reportWebVitals.js",[],"D:\\travel guide\\react-native\\adminportal\\src\\App.js",["352","353"],"import logo from './logo.svg';\nimport './App.css';\nimport SignIn from './screens/login';\nimport TravelApp from './screens/landingPage';\nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom'\nimport Dashboard from './screens/dashboard';\nimport SignUp from './screens/Register';\nimport AdminList from './screens/adminList';\n\nfunction App() {\n  const history = useHistory()\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <TravelApp/>\n          </Route>\n\n          <Route path=\"/admin/signin\">\n              <SignIn/>\n          </Route>\n\n          <Route path=\"/admin/dashboard\">\n              <Dashboard/>\n          </Route>\n\n          <Route path=\"/admin/addAdmin\">\n              <SignUp/>\n          </Route>\n\n          <Route path=\"/admin/viewAdmins\">\n            <AdminList/>\n          </Route>\n\n        </Switch>\n      </BrowserRouter>\n    </div>\n    \n  );\n}\n\nexport default App;\n","D:\\travel guide\\react-native\\adminportal\\src\\screens\\login.js",["354","355","356","357"],"import React,{useState,useContext,} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\n// import {UserContext} from '../../App'\r\nimport M from 'materialize-css'\r\nconst SignIn  = ()=>{\r\n    // const {state,dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password,setPasword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/admin/signin\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n            //    localStorage.setItem(\"jwt\",data.token)\r\n            //    localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n            //    dispatch({type:\"USER\",payload:data.user})\r\n               M.toast({html:\"signedin success\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/admin/dashboard')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Travel Guide Admins</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e)=>setPasword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n                Login\r\n            </button>\r\n            <h5>\r\n                {/* <Link to=\"/signup\">Dont have an account ?</Link> */}\r\n            </h5>\r\n            <h6>\r\n                {/* <Link to=\"/reset\">Forgot password ?</Link> */}\r\n            </h6>\r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default SignIn","D:\\travel guide\\react-native\\adminportal\\src\\screens\\landingPage.js",["358","359","360","361","362","363","364","365"],"import React,{useState,useContext,} from 'react'\r\nimport M from 'materialize-css'\r\n\r\nconst TravelApp=()=>{    \r\n    document.addEventListener('DOMContentLoaded', function() {\r\n        var elems = document.querySelectorAll('.carousel');\r\n        var instances = M.Carousel.init(elems,{\r\n            fullWidth:true,\r\n            \r\n        });\r\n      });\r\n      \r\n\r\n    return(\r\n       \r\n<div>\r\n\r\n    <div id=\"index-banner\" className=\"container\">\r\n        <div className=\"section no-pad-bot\">\r\n        <div className=\"container\">\r\n            \r\n            <h1 className=\"header center teal-text text-lighten-2\">Smart Travel Guide</h1>\r\n            <div className=\"row center\">\r\n            <h5 className=\"header col s12 light\">A modern responsive front-end framework based on Material Design</h5>\r\n            </div>\r\n            <div className=\"row center\">\r\n            <a href=\"#\" id=\"download-button\" className=\"btn-large waves-effect waves-light teal lighten-1\">Download App from Here</a>\r\n            </div>\r\n        \r\n\r\n        </div>\r\n        </div>\r\n        <div className=\"\">\r\n        <img src=\"https://images.unsplash.com/photo-1580794749460-76f97b7180d8?ixid=MnwxMjA3fDB8MHxzZWFyY2h8ODF8fHNyaSUyMGxhbmthfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"Unsplashed background img 2\"/>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div className=\"container\" style={{marginTop:\"100px\"}}>\r\n    <div className=\"carousel carousel-slider\">\r\n        <a className=\"carousel-item\" href=\"#two!\"><img src=\"https://lorempixel.com/800/400/food/2\"/></a>\r\n        <a className=\"carousel-item\" href=\"#three!\"><img src=\"https://lorempixel.com/800/400/food/3\"/></a>\r\n        <a className=\"carousel-item\" href=\"#four!\"><img src=\"https://lorempixel.com/800/400/food/4\"/></a>\r\n  </div>\r\n    </div>\r\n      \r\n\r\n    \r\n  <div className=\"container\">\r\n    <div className=\"section\">\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m4\">\r\n          <div className=\"icon-block\">\r\n            <h2 className=\"center brown-text\"><i className=\"material-icons\">flash_on</i></h2>\r\n            <h5 className=\"center\">Speeds up development</h5>\r\n\r\n            <p className=\"light\">We did most of the heavy lifting for you to provide a default stylings that incorporate our custom components. Additionally, we refined animations and transitions to provide a smoother experience for developers.</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col s12 m4\">\r\n          <div className=\"icon-block\">\r\n            <h2 className=\"center brown-text\"><i className=\"material-icons\">group</i></h2>\r\n            <h5 className=\"center\">User Experience Focused</h5>\r\n\r\n            <p className=\"light\">By utilizing elements and principles of Material Design, we were able to create a framework that incorporates components and animations that provide more feedback to users. Additionally, a single underlying responsive system across all platforms allow for a more unified user experience.</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col s12 m4\">\r\n          <div className=\"icon-block\">\r\n            <h2 className=\"center brown-text\"><i className=\"material-icons\">settings</i></h2>\r\n            <h5 className=\"center\">Easy to work with</h5>\r\n\r\n            <p className=\"light\">We have provided detailed documentation as well as specific code examples to help new users get started. We are also always open to feedback and can answer any questions a user may have about Materialize.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div className=\"container valign-wrapper\">\r\n    <div className=\"section no-pad-bot\">\r\n      <div className=\"container\">\r\n        <div className=\"row center\">\r\n          <h5 className=\"header col s12 light\">A modern responsive front-end framework based on Material Design</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"\">\r\n        \r\n        <img src=\"https://images.unsplash.com/photo-1582103518581-46fe9a449915?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTI4fHxzcmklMjBsYW5rYXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"/>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default TravelApp;","D:\\travel guide\\react-native\\adminportal\\src\\screens\\dashboard.js",[],"D:\\travel guide\\react-native\\adminportal\\src\\components\\navbar.js",["366","367","368","369","370"],"import { useHistory } from \"react-router-dom\"\r\n\r\nconst NavBar=()=>{\r\n    const history=useHistory()\r\n\r\n    const logout=()=>{\r\n        console.log(\"sdsw\")\r\n        fetch(\"/logout\").\r\n        then(\r\n            history.push(\"/admin/signin\")\r\n        )\r\n    }\r\n    return(\r\n        <nav>\r\n            <div class=\"nav-wrapper\">\r\n\r\n            <a href=\"#\" class=\"brand-logo\">Travel Guide Admin</a>\r\n            <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n                <li><a href=\"\">Sass</a></li>\r\n                <li><a href=\"\">Components</a></li>\r\n                <li><a href=\"#\" onClick={()=>{logout()}}>logout</a></li>\r\n            </ul>\r\n            </div>\r\n            \r\n        </nav>\r\n        \r\n    )\r\n}\r\n\r\nexport default NavBar;","D:\\travel guide\\react-native\\adminportal\\src\\components\\sidebar.js",["371","372","373","374","375"],"import M from \"materialize-css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Sidebar=()=>{\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n        var elems = document.querySelectorAll('.sidenav');\r\n        var instances = M.Sidenav.init(elems);\r\n      });\r\n    return(\r\n\r\n        <>\r\n            {/* <nav> </nav> */}\r\n\r\n                <ul id=\"slide-out\" class=\"sidenav\">\r\n                <li><div class=\"user-view\">\r\n                    <div class=\"background\">\r\n                    <img src=\"https://images.unsplash.com/photo-1569154941061-e231b4725ef1?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\"/>\r\n                    </div>\r\n                    <a href=\"#user\"><img class=\"circle\" src=\"https://images.unsplash.com/photo-1528763380143-65b3ac89a3ff?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=335&q=80\"/></a>\r\n                    <a href=\"#name\"><span class=\"white-text name\">John Doe</span></a>\r\n                    <a href=\"#email\"><span class=\"white-text email\">jdandturk@gmail.com</span></a>\r\n                </div></li>\r\n                <li><a href=\"#!\"><i class=\"material-icons\">cloud</i>First Link With Icon</a></li>\r\n                <li><a href=\"#!\">Second Link</a></li>\r\n                <li><div class=\"divider\"></div></li>\r\n                <li><a class=\"subheader\">Subheader</a></li>\r\n                <li><Link to=\"/admin/addAdmin\">Add admin</Link></li>\r\n                </ul>\r\n                <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger btn-floating btn-large waves-effect waves-light red\" style={{position:\"absolute\", right:\"10px\", bottom:\"10px\"}}><i class=\"material-icons\">menu</i></a>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\nexport default Sidebar;","D:\\travel guide\\react-native\\adminportal\\src\\screens\\Register.js",["376","377","378","379"],"import React,{useState,useEffect} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nconst SignUp  = ()=>{\r\n    const history = useHistory()\r\n    const [firstName,setFirstName] = useState(\"\")\r\n    const [lastName,setLastName] = useState(\"\")\r\n    const [dob, setDob]=useState(\"\")\r\n    const [username,setUsername]=useState(\"\")\r\n    const [password,setPasword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    \r\n\r\n    // useEffect(()=>{\r\n    //     if(url){\r\n    //         uploadFields()\r\n    //     }\r\n    // },[url])\r\n    // const uploadPic = ()=>{\r\n    //     const data = new FormData()\r\n    //     data.append(\"file\",image)\r\n    //     data.append(\"upload_preset\",\"new-insta\")\r\n    //     data.append(\"cloud_name\",\"cnq\")\r\n    //     fetch(\"https://api.cloudinary.com/v1_1/cnq/image/upload\",{\r\n    //         method:\"post\",\r\n    //         body:data\r\n    //     })\r\n    //     .then(res=>res.json())\r\n    //     .then(data=>{\r\n    //        setUrl(data.url)\r\n    //     })\r\n    //     .catch(err=>{\r\n    //         console.log(err)\r\n    //     })\r\n    // }\r\n    const postData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/admin/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                firstname:firstName,\r\n                lastname:lastName,\r\n                dob,\r\n                username,\r\n                password,\r\n                email,\r\n            \r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/admin/viewAdmins')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Travel Guide App</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"first name\"\r\n            value={firstName}\r\n            onChange={(e)=>setFirstName(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"last name\"\r\n            value={lastName}\r\n            onChange={(e)=>setLastName(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"date\"\r\n            placeholder=\"DOB\"\r\n            value={dob}\r\n            onChange={(e)=>setDob(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            value={username}\r\n            onChange={(e)=>setUsername(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e)=>setPasword(e.target.value)}\r\n            />\r\n            {/* <div className=\"file-field input-field\">\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Upload pic</span>\r\n                <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div> */}\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>postData()}>\r\n                Add\r\n            </button>\r\n           \r\n             \r\n               \r\n         \r\n            \r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default SignUp","D:\\travel guide\\react-native\\adminportal\\src\\screens\\adminList.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\index.js",[],["380","381"],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\reportWebVitals.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\App.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\landingPage.js",["382"],"import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  Box,\r\n  Flex,\r\n  useColorModeValue,\r\n  Image,\r\n  HStack,\r\n  Stack,\r\n  Center,\r\n  Button\r\n} from \"@chakra-ui/react\";\r\nimport { Heading } from \"@chakra-ui/layout\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Footer } from \"../components/TravelPlanApp/Footer\";\r\nimport { Footer2 } from \"../components/TravelPlanApp/Footer2\";\r\n\r\n\r\nconst TravelApp=()=>{    \r\n  const arrowStyles = {\r\n    cursor: \"pointer\",\r\n    pos: \"absolute\",\r\n    top: \"50%\",\r\n    w: \"auto\",\r\n    mt: \"-22px\",\r\n    p: \"16px\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"18px\",\r\n    transition: \"0.6s ease\",\r\n    borderRadius: \"0 3px 3px 0\",\r\n    userSelect: \"none\",\r\n    _hover: {\r\n      opacity: 0.8,\r\n      bg: \"black\",\r\n    },\r\n  };\r\n\r\n  const slides = [\r\n    {\r\n      img:\r\n        \"https://images.unsplash.com/photo-1606326128683-60ff4212127e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\r\n      label: \"First Slide\",\r\n      description: \"Nulla vitae elit libero, a pharetra augue mollis interdum.\",\r\n    },\r\n    {\r\n      img:\r\n        \"https://images.unsplash.com/photo-1536560328749-3dd331d32a05?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\r\n      label: \"Second Slide\",\r\n      description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\r\n    },\r\n    {\r\n      img:\r\n        \"https://images.unsplash.com/photo-1622061750348-18a9a34d329f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=889&q=80\",\r\n      label: \"Third Slide\",\r\n      description:\r\n        \"Praesent commodo cursus magna, vel scelerisque nisl consectetur.\",\r\n    },\r\n    {\r\n      img:\r\n        \"https://images.unsplash.com/photo-1607672996533-98ec2fb71625?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1347&q=80\",\r\n      label: \"Fourth Slide\",\r\n      description: \"Nulla vitae elit libero, a pharetra augue mollis interdum.\",\r\n    },\r\n    {\r\n      img:\r\n        \"https://images.unsplash.com/photo-1621271407944-fed854709efc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=746&q=80\",\r\n      label: \"Fifth Slide\",\r\n      description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\r\n    },\r\n  ];\r\n\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  const slidesCount = slides.length;\r\n\r\n  const prevSlide = () => {\r\n    setCurrentSlide((s) => (s === 0 ? slidesCount - 1 : s - 1));\r\n  };\r\n  const nextSlide = () => {\r\n    setCurrentSlide((s) => (s === slidesCount - 1 ? 0 : s + 1));\r\n  };\r\n  const setSlide = (slide) => {\r\n    setCurrentSlide(slide);\r\n  };\r\n  const carouselStyle = {\r\n    transition: \"all .5s\",\r\n    ml: `-${currentSlide * 100}%`,\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Center bg=\"tomato\" h=\"100px\" color=\"white\" fontSize=\"50px\">\r\n      <Heading>\r\n      Smart Travel Guide\r\n      </Heading>\r\n    </Center>\r\n    <Flex\r\n      w=\"full\"\r\n      bg={useColorModeValue(\"gray.200\", \"gray.600\")}\r\n      p={3}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Flex w=\"full\" pos=\"relative\" overflow=\"hidden\">\r\n        <Flex h=\"650px\" w=\"full\" {...carouselStyle}>\r\n          {slides.map((slide, sid) => (\r\n            <Box key={`slide-${sid}`} boxSize=\"full\" shadow=\"md\" flex=\"none\">\r\n              <Text\r\n                color=\"white\"\r\n                fontSize=\"xs\"\r\n                p=\"8px 12px\"\r\n                pos=\"absolute\"\r\n                top=\"0\"\r\n              >\r\n                {sid + 1} / {slidesCount}\r\n              </Text>\r\n              <Image src={slide.img} boxSize=\"full\" backgroundSize=\"cover\" objectFit=\"cover\" />\r\n              <Stack\r\n                p=\"8px 12px\"\r\n                pos=\"absolute\"\r\n                bottom=\"24px\"\r\n                textAlign=\"center\"\r\n                w=\"full\"\r\n                mb=\"8\"\r\n                color=\"white\"\r\n              >\r\n                <Text fontSize=\"2xl\">{slide.label}</Text>\r\n                <Text fontSize=\"lg\">{slide.description}</Text>\r\n              </Stack>\r\n            </Box>\r\n          ))}\r\n        </Flex>\r\n        <Text {...arrowStyles} left=\"0\" onClick={prevSlide}>\r\n          &#10094;\r\n        </Text>\r\n        <Text {...arrowStyles} right=\"0\" onClick={nextSlide}>\r\n          &#10095;\r\n        </Text>\r\n        <HStack justify=\"center\" pos=\"absolute\" bottom=\"8px\" w=\"full\">\r\n          {Array.from({ length: slidesCount }).map((_, slide) => (\r\n            <Box\r\n              key={`dots-${slide}`}\r\n              cursor=\"pointer\"\r\n              boxSize={[\"7px\", , \"15px\"]}\r\n              m=\"0 2px\"\r\n              bg={currentSlide === slide ? \"blackAlpha.800\" : \"blackAlpha.500\"}\r\n              rounded=\"50%\"\r\n              display=\"inline-block\"\r\n              transition=\"background-color 0.6s ease\"\r\n              _hover={{ bg: \"blackAlpha.800\" }}\r\n              onClick={() => setSlide(slide)}\r\n            ></Box>\r\n          ))}\r\n        </HStack>\r\n      </Flex>\r\n    </Flex>\r\n    \r\n    \r\n    <Box flexDirection=\"column\" display=\"flex\" p={10} mt=\"-350px\" alignItems=\"center\">\r\n    <Button rightIcon={<ArrowForwardIcon />} mx=\"auto\" colorScheme=\"teal\" variant=\"solid\" size=\"lg\" mb={5}>\r\n       Download App form Here\r\n    </Button>\r\n    <Link to=\"/travelPlan\" >\r\n      <Button rightIcon={<ArrowForwardIcon />} mx=\"auto\" colorScheme=\"teal\" variant=\"solid\" size=\"lg\">\r\n        Vist our Web site\r\n      </Button>\r\n    </Link>\r\n    </Box>\r\n\r\n    <Footer/>\r\n    <Footer2/>\r\n    \r\n    </>\r\n  );\r\n            \r\n          }\r\n\r\nexport default TravelApp;","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Adminroutes.js",["383","384"],"import SignIn from './login';\r\nimport {Route,Switch,} from 'react-router-dom'\r\nimport { useHistory } from 'react-router';\r\nimport Dashboard from './dashboard';\r\nimport SignUp from './Register';\r\nimport AdminList from './adminList';\r\nimport {TestPage} from \"./testPage\";\r\nimport { Provinces } from './/Provinces';\r\nimport { ViewProvince } from './viewProvince';\r\nimport Editquestions from './Editquestions';\r\nimport Viewuserlist from './Viewuserlist';\r\nimport ViewAdmin from './ViewAdmin';\r\nimport Travelplanlist from './Travelplanlist';\r\nimport NavBar from '../../components/navbar';\r\nimport { AdminContext, AdminProvider } from '../../context/AdminContext';\r\nimport ViewUser from './ViewUser';\r\nimport Generatereports from './Generatereports';\r\nimport { SharedPlan } from './shredPlans';\r\nimport { TravelPlan } from '../../components/AdminComponents/TravelPlanView';\r\nimport { ViewPois } from '../TravelPlanApp/ViewPOI';\r\nimport { PublicPlans } from './publicPlans';\r\nimport { useContext,useEffect } from 'react';\r\n\r\nexport const AdminPortal=()=>{\r\n  const history=useHistory()\r\n  const {state, dispatch}=useContext(AdminContext)\r\n  useEffect(()=>{  \r\n    const admin = JSON.parse(localStorage.getItem(\"Admin\"))\r\n    if(admin){\r\n      dispatch({type:\"Admin\",payload:admin})\r\n    }else{\r\n           history.push('/admin/signin')\r\n    }\r\n  },[])\r\n    return(\r\n        <>\r\n        \r\n        \r\n        \r\n        <Switch >\r\n          \r\n          <Route path=\"/admin/signin\">\r\n              <SignIn/>\r\n          </Route>         \r\n          <NavBar>\r\n          <Route path=\"/admin/dashboard\">\r\n              <Dashboard/>\r\n          </Route>\r\n\r\n          <Route path=\"/admin/addAdmin\">\r\n              <SignUp/>\r\n          </Route>\r\n          <Route path=\"/admin/ViewTravelplanlist\">\r\n              <Travelplanlist/>\r\n          </Route>\r\n\r\n          <Route path=\"/admin/viewAdmins\">\r\n            <AdminList/>\r\n          </Route>\r\n          <Route path=\"/admin/genarate\">\r\n            <Generatereports/>\r\n          </Route>\r\n          <Route path=\"/admin/user/viewSingleuser\">\r\n            <ViewAdmin/>\r\n          </Route>\r\n          <Route path=\"/admin/editquestions\">\r\n            <Editquestions/>\r\n          </Route>\r\n          <Route path=\"/admin/viewAdmin/:pid\">\r\n            <ViewAdmin/>\r\n          </Route>\r\n          <Route path=\"/admin/viewUser/:pid\">\r\n            <ViewUser/>\r\n          </Route>\r\n\r\n          <Route path=\"/admin/provinces\">\r\n            <Provinces/>\r\n          </Route>\r\n          <Route path=\"/admin/Viewuserlist\">\r\n            <Viewuserlist/>\r\n          </Route>\r\n\r\n          <Route path=\"/admin/viewProvinces/:pid\">\r\n            <ViewProvince/>\r\n          </Route>\r\n\r\n          <Route path=\"/admin/sharedPlans\">\r\n            <SharedPlan />\r\n         </Route>\r\n         \r\n         <Route path=\"/admin/viewMyTravelPlan\">\r\n            <TravelPlan />\r\n         </Route>\r\n\r\n         <Route path=\"/admin/viewpoi/:place_id\">\r\n            <ViewPois />\r\n         </Route>\r\n\r\n         <Route path=\"/admin/publicPlans\">\r\n            <PublicPlans />\r\n         </Route>\r\n\r\n         <Route path=\"/test\">\r\n            <TestPage/>\r\n          </Route>\r\n\r\n         </NavBar>\r\n\r\n        </Switch>\r\n          \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport const Adminroutes=()=>{\r\n    return(\r\n      <>\r\n       <AdminProvider>\r\n          <AdminPortal />\r\n      </AdminProvider>\r\n      </>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\index.js",["385","386"],"import { Route, Switch,useHistory } from \"react-router\"\r\nimport NavBar from \"../../components/TravelPlanApp/navbar\"\r\nimport { Home } from \"./Home\"\r\nimport { TravelPlan } from \"./TravelPlan\"\r\nimport { UserPreferences } from \"./userPreferences\"\r\nimport { TravelProvider } from \"../../context/TravelContext\"\r\nimport { ViewPois } from \"./ViewPOI\"\r\nimport { NearByHotels } from \"./nearbyhotels\"\r\nimport { EditPlan } from \"./editPlan\"\r\nimport { AddMorePlaces } from \"./addMorePlaces\"\r\nimport { MyPlans } from \"./Myplans\"\r\nimport { ViewMyTravelPlan } from \"./ViewMyTravelPlan\"\r\nimport { PlanReview } from \"./PlanReview\"\r\nimport { MyAccount } from \"./myAccount\"\r\nimport { Footer2 } from \"../../components/TravelPlanApp/Footer2\"\r\nimport { Box } from \"@chakra-ui/layout\"\r\nimport { TopRatedPlans } from \"./TopRatedPlans\"\r\nimport { SignIn } from \"./signIn\"\r\nimport { SignUp } from \"./signUp\"\r\nimport { About } from \"./about\"\r\nimport { Contact } from \"./contact\"\r\nimport { Provinces } from \"./provinces\"\r\nimport { Province } from \"./province\"\r\nimport { CustomPlan } from \"./customPlan\"\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport {useContext,useEffect} from \"react\"\r\nimport { SwitchPois } from \"./switchPois\"\r\n\r\n\r\n\r\nconst TravelPlanApp=()=>{\r\n  const history=useHistory()\r\n  const {state, dispatch}=useContext(TravelContext)\r\n  useEffect(()=>{  \r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    if(user){\r\n      dispatch({type:\"USER\",payload:user})\r\n    }else{\r\n           history.push('/travelPlan/signin')\r\n    }\r\n  },[])\r\n\r\n    return(\r\n        <>\r\n      \r\n        <NavBar/>\r\n        <Box minHeight=\"100vh\" >\r\n        <Switch >\r\n            <Route path=\"/travelPlan/switchpois/:index/:index1\">\r\n                <SwitchPois />\r\n            </Route>\r\n            <Route path=\"/travelPlan/customPlan\">\r\n                <CustomPlan/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/province/:pid\">\r\n                <Province/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/provinces\">\r\n                <Provinces />\r\n            </Route>\r\n            <Route path=\"/travelPlan/about\">\r\n                <About/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/contact\">\r\n                <Contact/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/signin\">\r\n                <SignIn/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/signUp\">\r\n                <SignUp/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/toprated\">\r\n                <TopRatedPlans/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/myAccount\">\r\n                <MyAccount/>\r\n            </Route>\r\n            <Route path=\"/travelplan/review\">\r\n                <PlanReview/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/viewMyTravelPlan\">\r\n                <ViewMyTravelPlan/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/myplans\" >\r\n                <MyPlans/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/addMorePlaces/:day\">\r\n                <AddMorePlaces/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/editPlan\" >\r\n                <EditPlan/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/nearbyhotels\" >\r\n                <NearByHotels/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/viewpoi/:place_id\" >\r\n                <ViewPois/>\r\n            </Route>\r\n             <Route path=\"/travelPlan/userPreferences\">\r\n                <UserPreferences/>\r\n            </Route>\r\n            <Route path=\"/travelPlan/travelPlan\">\r\n                <TravelPlan/>\r\n            </Route>\r\n            <Route path=\"/travelPlan\">\r\n                <Home />\r\n            </Route>\r\n        </Switch>\r\n        </Box>\r\n        <Footer2/>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport const TravelPlanRoutes=()=>{\r\n    return(\r\n        <>\r\n             <TravelProvider>\r\n               <TravelPlanApp/>\r\n            </TravelProvider>\r\n        </>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\dashboard.js",["387","388","389","390"],"import NavBar from \"../../components/navbar\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { CCard } from \"@coreui/react\";\r\nimport { Fade } from 'react-slideshow-image';\r\nimport 'react-slideshow-image/dist/styles.css'\r\nimport { Slide } from 'react-slideshow-image';\r\nimport Widgets from \"../../components/Widget\";\r\n\r\n//import image from '../../public/images/\r\nimport {\r\n    Stat,\r\n    StatLabel,\r\n    StatNumber,\r\n    StatHelpText,\r\n    StatArrow,\r\n    StatGroup,\r\n  } from \"@chakra-ui/react\"\r\nimport { CProgress } from \"@coreui/react\";\r\nimport { CProgressBar } from \"@coreui/react\";\r\nconst Dashboard=()=>{\r\n    return(\r\n        <>\r\n        \r\n        <Slideshow/>\r\n       \r\n        <StatGroup bg=\"white\" p=\"5\" boxShadow=\"dark-lg\">\r\n        <Stat>\r\n            <StatLabel>Number of Admin online</StatLabel>\r\n            <StatNumber>30</StatNumber>\r\n            <StatHelpText>\r\n            <StatArrow type=\"increase\" />\r\n            25%\r\n            <CProgress className=\"mb-3\">\r\n    <CProgressBar value={25}/>\r\n  </CProgress>\r\n            </StatHelpText>\r\n        </Stat>\r\n\r\n        <Stat >\r\n            <StatLabel>Number of Admin Offline</StatLabel>\r\n            <StatNumber>120</StatNumber>\r\n            <StatHelpText>\r\n            <StatArrow type=\"decrease\" />\r\n           75 %\r\n           <CProgress className=\"mb-3\">\r\n    <CProgressBar value={75}/>\r\n  </CProgress>\r\n            </StatHelpText>\r\n        </Stat>\r\n        </StatGroup>\r\n        <StatGroup bg=\"white\" p=\"5\" boxShadow=\"dark-lg\">\r\n        <Stat>\r\n            <StatLabel>Number of Downloads</StatLabel>\r\n            <StatNumber>1000000</StatNumber>\r\n            <StatHelpText>\r\n            <StatArrow type=\"increase\" />\r\n            \r\n            \r\n            </StatHelpText>\r\n        </Stat>\r\n\r\n        <Stat >\r\n            <StatLabel>Number of Users</StatLabel>\r\n            <StatNumber>100000</StatNumber>\r\n            <StatHelpText>\r\n            <StatArrow type=\"decrease\" />\r\n          \r\n            </StatHelpText>\r\n        </Stat>\r\n        </StatGroup>\r\n       \r\n       \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst slideImages = [\r\n    {\r\n      url: '/background1.jpg',\r\n      caption: 'Welcome'\r\n    },\r\n    {\r\n      url: '/background1.jpg',\r\n      caption: 'Take features'\r\n    },\r\n    {\r\n      url: '/background1.jpg',\r\n      caption: 'Have A Nice Day'\r\n    },\r\n    {\r\n      url: '/background1.jpg',\r\n      caption: 'Bye'\r\n    },\r\n    {\r\n      url: '/background1.jpg',\r\n      caption: 'Welcome Back'\r\n    },\r\n    \r\n  ];\r\n  \r\n  const Slideshow = () => {\r\n      return (\r\n        <div className=\"slide-container\" style={{height:\"500px\"}}>\r\n          <Slide>\r\n           {slideImages.map((slideImage, index)=> (\r\n              <div className=\"each-slide\" key={index}>\r\n                <div style={{'backgroundImage': `url(${slideImage.url})`,height:\"500px\",objectFit:\"cover\"}}>\r\n                  <span>{slideImage.caption}</span>\r\n                </div>\r\n              </div>\r\n            ))} \r\n          </Slide>\r\n        </div>\r\n      )\r\n  }\r\n  \r\nexport default Dashboard;","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\viewProvince.js",["391","392"],"import React, { useState, useEffect } from 'react'\r\nimport { Heading,Center, Flex,   } from '@chakra-ui/layout'\r\nimport { useParams } from 'react-router'\r\nimport { Description } from '../../components/description'\r\nimport { Galary } from '../../components/galary'\r\n\r\n\r\nexport const ViewProvince = (props) => {\r\n  const {pid}=useParams()\r\n  const [ima,setIma]=useState([])\r\n  const [name, setName]=useState(\"\")\r\n  const [description, setDescription]=useState(\"\")\r\n  useEffect(()=>{\r\n    \r\n     fetch(\"/admin/getProvinceData/\"+pid).\r\n     then(res=>res.json())\r\n     .then(data=>{\r\n        console.log(data)\r\n        setIma(data.images)\r\n        setName(data.name)\r\n        setDescription(data.description)\r\n       \r\n     }).catch(err=>{\r\n         console.log(err)\r\n     })\r\n  \r\n  },[])\r\n          \r\n  return (\r\n   <>\r\n     <Flex flexDirection=\"column\" boxShadow=\"2xl\" bg=\"white\" p={10}>\r\n     <Center><Heading mb={4}>{name}</Heading></Center>\r\n     <Galary imarr={ima} pid={pid} />\r\n     <Description des={description} pid={pid} />\r\n     </Flex>\r\n   </>\r\n  )\r\n}\r\n\r\n\r\n\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Provinces.js",["393"],"import {\r\n    Table,\r\n    Thead,\r\n    Tbody,\r\n    Tfoot,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableCaption,\r\n    Flex,\r\n    Heading,\r\n    Button\r\n  } from \"@chakra-ui/react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { ViewIcon } from \"@chakra-ui/icons\"\r\nexport const Provinces=()=>{\r\n    return(\r\n        <>\r\n        <>\r\n                <Flex p={6} backgroundColor=\"white\" boxShadow=\"xl\" flexDirection=\"column\" alignItems=\"center\">\r\n                <Heading fontStyle=\"oblique\" mb={4}>Sri Lanka's Provonces</Heading>\r\n\r\n                <Table variant=\"simple\" p={[10,null,10,null]}>\r\n  <TableCaption>Imperial to metric conversion factors</TableCaption>\r\n  <Thead>\r\n    <Tr>\r\n      <Th></Th>\r\n      <Th>Name</Th>\r\n      <Th isNumeric>View</Th>\r\n    </Tr>\r\n  </Thead>\r\n  <Tbody>\r\n        <TableRow index=\"1\" name=\"Northern Province\" province_id=\"p1\"/>\r\n        <TableRow index=\"2\" name=\"North Western Province\" province_id=\"p2\"/>\r\n        <TableRow index=\"3\" name=\"Western Province\" province_id=\"p3\"/>\r\n        <TableRow index=\"4\" name=\"North Central Province\" province_id=\"p4\"/>\r\n        <TableRow index=\"5\" name=\"Central Province\" province_id=\"p5\"/>\r\n        <TableRow index=\"6\" name=\"Sabaragamuwa Province\" province_id=\"p6\"/>\r\n        <TableRow index=\"7\" name=\"Eastern Province\" province_id=\"p7\"/>\r\n        <TableRow index=\"8\" name=\"Uva Province\" province_id=\"p8\"/>\r\n        <TableRow index=\"9\" name=\"Southern Province\" province_id=\"p9\"/>\r\n\r\n  </Tbody>\r\n  \r\n</Table>\r\n                </Flex>\r\n        </>\r\n        </>\r\n    )\r\n}\r\n\r\nconst TableRow=({index, name, province_id})=>{\r\n    return(\r\n        <Tr>\r\n        <Td>{index}</Td>\r\n        <Td>{name}</Td>\r\n        <Td isNumeric><Button colorScheme=\"teal\" size=\"xs\"><Link to={`/admin/viewProvinces/${province_id}`}><ViewIcon /></Link></Button></Td>\r\n      </Tr>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Register.js",["394","395","396","397"],"import React,{useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {\r\n    Box,\r\n    useColorModeValue,\r\n    SimpleGrid,\r\n    GridItem,\r\n    Stack,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    Heading,\r\n    \r\n  } from \"@chakra-ui/react\";\r\nconst SignUp  = ()=>{\r\n    const history = useHistory()\r\n    const [firstName,setFirstName] = useState(\"\")\r\n    const [lastName,setLastName] = useState(\"\")\r\n    const [dob, setDob]=useState(\"\")\r\n    const [password,setPasword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    \r\n\r\n    // useEffect(()=>{\r\n    //     if(url){\r\n    //         uploadFields()\r\n    //     }\r\n    // },[url])\r\n    // const uploadPic = ()=>{\r\n    //     const data = new FormData()\r\n    //     data.append(\"file\",image)\r\n    //     data.append(\"upload_preset\",\"new-insta\")\r\n    //     data.append(\"cloud_name\",\"cnq\")\r\n    //     fetch(\"https://api.cloudinary.com/v1_1/cnq/image/upload\",{\r\n    //         method:\"post\",\r\n    //         body:data\r\n    //     })\r\n    //     .then(res=>res.json())\r\n    //     .then(data=>{\r\n    //        setUrl(data.url)\r\n    //     })\r\n    //     .catch(err=>{\r\n    //         console.log(err)\r\n    //     })\r\n    // }\r\n    const postData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/admin/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                firstname:firstName,\r\n                lastname:lastName,\r\n                dob,\r\n                password,\r\n                email,\r\n            \r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/admin/viewAdmins')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n\r\n   return (\r\n      <>\r\n      \r\n      <>\r\n                    <Box bg={useColorModeValue(\"gray.50\", \"inherit\")} p={10}>\r\n                    \r\n                    <Box visibility={{ base: \"hidden\", sm: \"visible\" }} aria-hidden=\"true\">\r\n                        <Box py={5}>\r\n                        <Box\r\n                            borderTop=\"solid 1px\"\r\n                            borderTopColor={useColorModeValue(\"gray.200\", \"whiteAlpha.200\")}\r\n                        ></Box>\r\n                        <Heading>Fill the form</Heading>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box mt={[10, 0]}>\r\n                        \r\n                        <SimpleGrid\r\n                        display={{ base: \"initial\", md: \"grid\" }}\r\n                        columns={{ md: 3 }}\r\n                        spacing={{ md: 6 }}\r\n                        >\r\n                        \r\n                        <GridItem mt={[5, null, 0]} colSpan={{ md: 2 }}>\r\n                            \r\n                            <Stack\r\n                                px={4}\r\n                                py={5}\r\n                                p={[null, 6]}\r\n                                bg={useColorModeValue(\"white\", \"gray.700\")}\r\n                                spacing={6}\r\n                            >\r\n                                <SimpleGrid columns={6} spacing={6}>\r\n                                <FormControl as={GridItem} colSpan={[6, 3]}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"first_name\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    First name\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"text\"\r\n                                    name=\"first_name\"\r\n                                    id=\"first_name\"\r\n                                    autoComplete=\"given-name\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    value={firstName}\r\n                                    onChange={(e)=>setFirstName(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl as={GridItem} colSpan={[6, 3]}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"last_name\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Last name\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"text\"\r\n                                    name=\"last_name\"\r\n                                    id=\"last_name\"\r\n                                    autoComplete=\"family-name\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    value={lastName}\r\n                                    onChange={(e)=>setLastName(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl as={GridItem} colSpan={[6, 3]}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"email_address\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Email address\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"text\"\r\n                                    name=\"email_address\"\r\n                                    id=\"email_address\"\r\n                                    autoComplete=\"email\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    value={email}\r\n                                    onChange={(e)=>setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl as={GridItem} colSpan={6,3}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"password\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Password\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"email\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    value={password}\r\n                                    onChange={(e)=>setPasword(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                \r\n\r\n                                <FormControl as={GridItem} colSpan={6,3}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"dob\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Birthday\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"date\"\r\n                                    name=\"Date of Birth\"\r\n                                    id=\"dob\"\r\n                                    autoComplete=\"dob\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    value={dob}\r\n                                    onChange={(e)=>setDob(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                \r\n                                </SimpleGrid>\r\n                            </Stack>\r\n                            <Box\r\n                                px={{ base: 4, sm: 6 }}\r\n                                py={3}\r\n                                bg={useColorModeValue(\"gray.50\", \"gray.900\")}\r\n                                textAlign=\"right\"\r\n                            >\r\n                                <Button\r\n                            \r\n                                colorScheme=\"blue\"\r\n                                _focus={{ shadow: \"\" }}\r\n                                fontWeight=\"md\"\r\n                                onClick={()=>postData()}\r\n                                >\r\n                                Save\r\n                                </Button>\r\n                            </Box>\r\n                           \r\n                        </GridItem>\r\n                        </SimpleGrid>\r\n                    </Box>\r\n\r\n                    <Box visibility={{ base: \"hidden\", sm: \"visible\" }} aria-hidden=\"true\">\r\n                        <Box py={5}>\r\n                        <Box\r\n                            borderTop=\"solid 1px\"\r\n                            borderTopColor={useColorModeValue(\"gray.200\", \"whiteAlpha.200\")}\r\n                        ></Box>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    \r\n                    </Box>\r\n      </>\r\n      \r\n      \r\n      </>\r\n   )\r\n}\r\n\r\n\r\nexport default SignUp\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Editquestions.js",["398","399","400","401","402","403","404","405"],"import React, { useState } from 'react'\r\nimport { Box } from '@chakra-ui/layout';\r\nimport { CloseIcon } from '@chakra-ui/icons';\r\nimport { CContainer } from '@coreui/react';\r\nimport { Flex } from '@chakra-ui/layout';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { Input } from '@chakra-ui/input';\r\nexport default function Editquestions() {\r\n\r\n        const[Questionset,setQuestion]=useState(list1)  \r\n    return (\r\n        <div>\r\n            <>\r\n            {list1.map((item1)=>(\r\n               <Question item={item1}/>\r\n            ))}\r\n            </>\r\n        </div>\r\n    )\r\n}\r\nconst list1=[{\r\n    'sentences':\"Climate Condition Would you Expect While travelling\",\r\n    'Options':['Dry','Intermediate','wet']\r\n},{\r\n    'sentences':\"Select at most 3 Provinces you like to visit in srilanka\",\r\n    'Options':['Northern','North Western','Western','North Central','Central','Sabaragamuwa','Eastern','Uva','Southern']\r\n},{\r\n    'sentences':\"NUmber of days,you Hope to travel\",\r\n    'Options':['1','2','3']\r\n},{\r\n    'sentences':\"Any religion you would like to see in your travel\",\r\n    'Options':['Buddhism','Hindu','catholic','Muslem']\r\n},{\r\n    'sentences':\"Select at most 3 places you like to visit in srilanka\",\r\n    'Options':['Naturel','Animals','Botenical gardens','parks','beaches','ancient',\"Reliogous\"]\r\n},{\r\n    'sentences':\"Select at most 3 places you like to visit in srilanka\",\r\n    'Options':['Hiking','Surfings','Camping','parks','Swimming','Riding boats',]\r\n}]\r\n\r\nconst Question=(item)=>{\r\n    const[isediting,setediting]=useState(false);\r\n    const[item2,setitem]=useState(item.item)\r\n    const[Sentence,setsentence]=useState(item.item.sentences)\r\n    const[Options,setOptions]=useState(item.item.Options)\r\n    const[newOption,setnewOPtion]=useState(\"\")\r\n    const[newSentence,setnewSentence]=useState(\"\")\r\n    const deleteoption=()=>{}\r\n    const addoption=()=>(setOptions((Options =>{\r\n        if(newOption!=\"\"){\r\n            return [...Options, newOption]\r\n        }\r\n        return Options\r\n    } )))\r\n    const Editsentence=()=>setediting(true)\r\n    \r\n    const deleteitem=(id)=>{\r\n        const temp=[...Options]\r\n        temp.splice(id, 1)\r\n        \r\n       return (temp)\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <Flex flexDirection=\"column\" boxShadow=\"2xl\" bg=\"lightgrey\" p={10} style={{borderColor:\"black\",borderWidth:\"5px\"}} >\r\n                    <Box  style={{height:\"100px\",borderRadius:\"10px\",borderBlockColor:\"crimson\",backgroundColor:\"darkgray\",paddingLeft:\"10px\",paddingTop:\"10px\",minHeight:\"150px\"}}>\r\n                        { !isediting ? \r\n                        <div>\r\n                        <div>{Sentence}\r\n                        </div>\r\n                        <div style={{display:\"flex\",justifyContent:\"space-evenly\",bottom:\"30px\"}}>\r\n                        <Button style={{width:\"100px\"}} onClick={Editsentence}>Edit</Button>\r\n                    \r\n                        </div> </div> : <div >\r\n                            <input onChange={(e)=>setnewSentence(e.target.value)} defaultValue={Sentence}  style={{paddingLeft:\"10px\",height:\"50px\",width:\"500px\"}}></input>\r\n                            <div style={{display:\"flex\" ,flexDirection:\"row\",justifyContent:\"space-evenly\",paddingTop:\"20px\"}}>\r\n                            <Button onClick={()=>(setsentence(newSentence),setediting(false))}>Okay</Button>\r\n                            <Button onClick={()=>setediting(false)}><CloseIcon/>Close</Button>\r\n                            </div>\r\n                            </div>\r\n                        }\r\n                        </Box>\r\n                    <div style={{display:\"flex\",flexDirection:\"column\" ,padding:\"20px\",textAlign:\"center\"}}>\r\n                        {Options.map((option,i)=>{\r\n                            \r\n                            const id=i\r\n                            \r\n                            return(<div style={{display:\"flex\",textAlign:\"center\",justifyContent:\"center\"}}><div style={{padding:\"10px\"}}>{option}</div><Button onClick={()=>setOptions(deleteitem(id))} ><CloseIcon /></Button></div>)})}\r\n                    </div>\r\n                    <div style={{display:\"flex\",flexDirection:\"column\"}}>\r\n                    <div style={{display:\"flex\",justifyContent:\"space-evenly\"}}><Input onChange={e=>setnewOPtion(e.target.value)} style={{width:\"300px\"}} placeholder=\"Enteroptions\"></Input ><Button style={{width:\"100px\"}} onClick={addoption} >AddOptions</Button>\r\n                    \r\n                    </div>\r\n                    <div style={{textAlign:\"center\",padding:\"30px\"}}>\r\n                    <Button >Submit</Button>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                    \r\n                </Flex>\r\n        </div>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Viewuserlist.js",["406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446"],"import {React,useState,useEffect} from 'react';\r\nimport { useMemo } from 'react';\r\nimport {useTable,useGlobalFilter,useFilters} from 'react-table';\r\nimport ReactTable from 'react-table';\r\nimport { ViewIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from '@chakra-ui/avatar';\r\nimport { Input } from '@chakra-ui/input';\r\nimport { Button, ButtonGroup,Box,Image } from \"@chakra-ui/react\";\r\nimport { Radio, RadioGroup } from \"@chakra-ui/react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,Select\r\n  } from \"@chakra-ui/react\";\r\n  import {\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n  } from \"@chakra-ui/react\";\r\nimport {\r\n    Table,\r\n    Thead,\r\n    Tbody,\r\n    Tfoot,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableCaption,\r\n  } from \"@chakra-ui/react\"\r\nimport { Link } from 'react-router-dom';\r\nexport default function Viewuserlist() {\r\n    const[fetchdata,setfetchdata]=useState([])\r\n    const[filterfirstname,setfilterfirstname]=useState(\"\")\r\n    const [userlist, setuserlist] = useState([]);\r\n    const[filterlastname,setfilterlastname]=useState(\"\")\r\n    const[filtercountry,setfiltercountry]=useState(\"\")\r\n    const[filterreligion,setfilterreligion]=useState(\"\")\r\n    const [Currentuser,setcurrentuser]=useState([])\r\n    const [isloading,setloading]=useState(true)\r\n    const filterbyfirstname=(filterfirstname)=>{\r\n        if(filterfirstname===\"\"){\r\n            return userlist\r\n        }\r\n        else{\r\n            return []\r\n        }\r\n    }\r\n    const filteredbyfirstname =(filterfirstname)=>{ \r\n        if(!filterfirstname.length)\r\n        return fetchdata \r\n        else{\r\n            console.log(filterfirstname)\r\n            console.log(userlist.map(person => (person.firstname) == filterfirstname))\r\n            return userlist.filter(person => (person.firstname.toLowerCase()).includes(filterfirstname.toLowerCase()))}\r\n\r\n    }\r\n    const filteredbycountry =(filtercountry)=>{ \r\n        if(!filtercountry.length)\r\n        return fetchdata \r\n        else{\r\n            console.log(filterfirstname)\r\n            console.log(userlist.map(person => (person.country) == filtercountry))\r\n            return userlist.filter(person => (person.country.toLowerCase()).includes(filtercountry.toLowerCase()))}\r\n\r\n    }\r\n    const filteredbylastname =(filterlastname)=>{ \r\n        if(!filterlastname.length)\r\n        return fetchdata \r\n        else{\r\n            console.log(filterlastname)\r\n            console.log(userlist.map(person => (person.lastname) == filterlastname))\r\n            return fetchdata.filter(person => (person.lastname.toLowerCase()).includes(filterlastname.toLowerCase()))}\r\n\r\n    }\r\n    \r\n    const filteredbyreligion =(filterreligion)=>{ \r\n        if(!filterreligion.length)\r\n        return fetchdata \r\n        else{\r\n            console.log(filterlastname)\r\n            console.log(userlist.map(person => (person.religion) == filterreligion))\r\n            return fetchdata.filter(person => (person.religion.toLowerCase()).includes(filterreligion.toLowerCase()))}\r\n\r\n    }\r\n        \r\n    useEffect(()=>{\r\n        fetch(\"/admin/viewUsers\")\r\n        .then(res=>res.json())\r\n        .then(result=>{\r\n            \r\n           if(result.error){\r\n            //   M.toast({html: result.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n                //console.log(result)\r\n                //let dat=result.users\r\n                setuserlist(result.users)\r\n                setfetchdata(result.users)\r\n                console.log(userlist)\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n       },[])\r\n    \r\n    \r\n    return (\r\n        <div>\r\n        \r\n          \r\n                \r\n        <table style={{minWidth:\"300px\",maxWidth:\"500px\"}}>\r\n                <thead>\r\n\r\n                <tr >\r\n                    <th> Id</th>\r\n                    <th style={{padding:\"10px\"}}>Profile</th>\r\n                    <th style={{padding:\"10px\"}}>First Name <input placeholder=\"firstname\"  onChange={(e)=>setuserlist(filteredbyfirstname(e.target.value))}></input></th>\r\n                    <th style={{padding:\"10px\"}}>Last Nmae<input placeholder=\"lastname\" onChange={(e)=>setuserlist(filteredbylastname(e.target.value))}></input></th>\r\n                    <th style={{padding:\"10px\"}}>Religion<input placeholder=\"Religion\" onChange={(e)=>setuserlist(filteredbyreligion(e.target.value))}>\r\n                    \r\n                \r\n              </input>\r\n                    </th>\r\n                    <th style={{padding:\"10px\"}}>Country<input placeholder=\"country\" onChange={(e)=>setuserlist(filteredbycountry(e.target.value))}></input></th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    \r\n                        {\r\n                            userlist.map((item,index)=>{\r\n                                return(\r\n                                    <tr key={index}>\r\n                                        <td >{index+1}</td>\r\n                                        <td style={{padding:\"10px\"}}><Profile value={item.pic} firstname1={item.firstname}/></td>\r\n                                        <td style={{padding:\"10px\"}}>{item.firstname}</td>\r\n                                        <td style={{padding:\"10px\"}}>{item.lastname}</td>\r\n                                        <td style={{padding:\"10px\"}}>{item.religion}</td>\r\n                                        <td style={{padding:\"10px\"}}>{item.country}</td>\r\n                                        <td style={{padding:\"10px\"}}>\r\n                                                \r\n                                        <Button ><Link to={`/admin/viewUser/${index}`}>Show</Link></Button>\r\n                                        </td>\r\n                                        <td style={{padding:\"10px\"}}>\r\n                                                \r\n                                        <Button ><Link to={`/admin/viewUser/${index}`}>delete</Link></Button>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                </tbody>\r\n            </table>\r\n             \r\n          </div>\r\n        \r\n    )\r\n\r\n}\r\nconst Profile=(props)=>(<Popover  >\r\n    <PopoverTrigger>\r\n        <Avatar src={props.value}/>\r\n    </PopoverTrigger>\r\n    <PopoverContent>\r\n        <PopoverArrow />\r\n        <PopoverCloseButton />\r\n        <PopoverHeader style={{backgroundColor:\"grey\"}}>{props.firstname1}</PopoverHeader>\r\n        <PopoverBody style={{backgroundColor:\"grey\"}}>\r\n            \r\n        <div><Image src={props.value} alt=\"Segun Adebayo\"  style={{objectFit:\"contain\"}}/></div>\r\n            \r\n        \r\n            </PopoverBody>\r\n    </PopoverContent>\r\n    </Popover>)\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Generatereports.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\Travelplanlist.js",["447","448","449","450","451","452","453","454","455"],"import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport { Button, ButtonGroup,Box,Image } from \"@chakra-ui/react\";\r\nexport default function Travelplanlist() {\r\n    const [data,setData]=useState([])\r\n    const[travelplanconut,setcount]=useState(\"gdfgdghdgh\")\r\n    const[rate,setrate]=useState(\"fsvsvfs\")\r\n    const[review,setreview]=useState(\"fdfgddgdg\")\r\n\r\n   useEffect(()=>{\r\n    fetch(\"/admin/viewTravelplan\")\r\n    .then(res=>res.json())\r\n    .then(result=>{\r\n        console.log(result)\r\n       if(result.error){\r\n        //   M.toast({html: result.error,classes:\"#c62828 red darken-3\"})\r\n       }\r\n       else{\r\n            console.log(result.travelplan.length)\r\n\r\n             setData(result.travelplan)\r\n       }\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n   },[])\r\n    return (\r\n        <div>\r\n            <>\r\n            <table>\r\n                <thead>\r\n                <tr >\r\n                    <th> Index</th>\r\n                    <th style={{padding:\"30px\"}}>Id</th>\r\n                    <th style={{padding:\"30px\"}}>rate</th>\r\n                    <th style={{padding:\"30px\"}}>review</th>\r\n                    <th style={{padding:\"30px\"}}>Status</th>\r\n                    <th style={{padding:\"30px\"}}>View</th>\r\n                    <th style={{padding:\"30px\"}}>Delete</th>\r\n\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    \r\n                        {\r\n                            data.map((item,index)=>{\r\n                                return(\r\n                                    <tr key={index}>\r\n                                        <td >{index+1}</td>\r\n                                        <td>{item._id}</td>\r\n                                        <td style={{padding:\"30px\"}}>{item.rate}</td>\r\n                                        <td style={{padding:\"30px\"}}>{item.review}</td>\r\n                                        <td style={{padding:\"30px\"}}>{item.public ? \"Published\" :\"NotPublished\"}</td>\r\n                \r\n                                        <td style={{padding:\"30px\"}}><Button>view</Button></td>\r\n                                        <td style={{padding:\"30px\"}}><Button>delete</Button></td>       \r\n                                        \r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                </tbody>\r\n            </table>\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\login.js",["456","457","458"],"import React,{useState,useContext,useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n// import {UserContext} from '../../App'\r\nimport M from 'materialize-css'\r\nimport {\r\n    Flex,\r\n    Heading,\r\n    Text,\r\n    Input,\r\n    Button,\r\n    Link as Link1,\r\n    FormControl,\r\n    FormLabel,\r\n  \r\n  } from '@chakra-ui/react';\r\nimport { AdminContext } from '../../context/AdminContext';\r\n\r\nconst SignIn  = ()=>{\r\n\r\n     const {state,dispatch} = useContext(AdminContext)\r\n    const history = useHistory()\r\n    const [password,setPasword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n\r\n\r\n    useEffect(()=>{\r\n        if(state && state._id){\r\n            \r\n            history.push('/admin/dashboard')\r\n        }else{\r\n               history.push('/admin/signin')\r\n        }\r\n      },[state])\r\n    \r\n    const PostData = ()=>{\r\n        \r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/admin/signin\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               \r\n               localStorage.setItem(\"Admin\",JSON.stringify(data.data))\r\n               dispatch({type:\"Admin\",payload:data.data})\r\n               M.toast({html:\"signedin success\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/admin/dashboard')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   return (\r\n   \r\n\r\n\r\n    <Flex minH=\"100vh\" justify=\"center\" align=\"center\" backgroundImage=\"url('https://images.unsplash.com/photo-1559038267-bfa6d8d3a160?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80')\" backgroundPosition=\"center\" backgroundSize=\"cover\" backgroundRepeat=\"no-repeat\">\r\n    <Flex  flexDirection=\"column\" bg=\"#FFFFFF\" p={10} borderRadius=\"10px\" boxShadow=\"dark-lg\">\r\n    <Heading fontSize={'4xl'}>Sign in to your account</Heading>\r\n    <Text fontSize={'lg'} color={'gray.600'} p={4}>\r\n       to enjoy all of our cool <Link1 color={'blue.400'}>features</Link1> ✌️\r\n    </Text>\r\n\r\n    <FormControl id=\"Email\" isRequired>\r\n    <FormLabel>Email</FormLabel>\r\n    <Input placeholder=\"Email\" value={email} type=\"text\"  onChange={(e)=>setEmail(e.target.value) }/>\r\n    </FormControl>\r\n\r\n\r\n    <FormControl id=\"Password\" isRequired>\r\n    <FormLabel>Password</FormLabel>\r\n    <Input placeholder=\"Password\" value={password} type=\"password\" onChange={(e)=>setPasword(e.target.value)} />\r\n    </FormControl>\r\n\r\n\r\n\r\n    <Button colorScheme=\"teal\" size=\"md\" mt={5} onClick={()=>PostData()} >\r\n        SignIn\r\n   </Button>\r\n\r\n    </Flex>\r\n\r\n\r\n    </Flex>\r\n   )\r\n}\r\n\r\n\r\nexport default SignIn","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\ViewUser.js",["459","460","461"],"import React, { useState,useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { CCard,CCardImage,CCardBody,CCardText } from '@coreui/react'\r\nimport { Text } from '@chakra-ui/layout'\r\nimport { Avatar } from '@chakra-ui/avatar'\r\nimport { Button } from '@chakra-ui/button'\r\n//import { Admincontext } from '../context/AdminContext'\r\nexport default function ViewUser() {\r\n  //const{state,dispatch}=useContext(Admincontext)\r\n    const {pid}=useParams()\r\n\r\n    const[Firstname,setfirstname]=useState(\"\")\r\n    const[Lastname,setlastname]=useState(\"\")\r\n    const[Country,setCountry]=useState(\"\")\r\n    const[Religion,setReligion]=useState(\"\")\r\n    const[Picture,setPicture]=useState(\"\")\r\n    useEffect(()=>{\r\n        fetch(\"/admin/viewUsers\")\r\n        .then(res=>res.json())\r\n        .then(result=>{\r\n            \r\n           if(result.error){\r\n            //   M.toast({html: result.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n                console.log(result.users[pid])\r\n                //let dat=result.users\r\n                setfirstname((result.users)[pid].firstname)\r\n                setlastname((result.users)[pid].lastname)\r\n                setCountry((result.users)[pid].country)\r\n                setReligion((result.users)[pid].religion)\r\n                setPicture((result.users)[pid].pic)\r\n                \r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n       },[])\r\n    return (\r\n            <div>\r\n            <CCard style={{minWidth:\"30rem\" ,maxWidth: '60rem',display:\"flex\",flexDirection:\"column\",alignItems:\"center\",backgroundColor:\"darkgray\" }}>\r\n            <CCardImage orientation=\"top\" src=\"/background1.jpg\"  style={{marginBottom:\"-50px\"}}/>\r\n            <Avatar src={Picture} size=\"2xl\" style={{textAlign:\"center\"}}/>\r\n            <CCardBody >\r\n              <CCardText>\r\n                  <Text style={{fontSize:\"40px\",padding:\"20px\"}}>Username :- {Firstname}</Text>\r\n                  <Text style={{fontSize:\"40px\",padding:\"20px\"}}>Lastname :-{Lastname}</Text>\r\n                  <Text style={{fontSize:\"40px\",padding:\"20px\"}}>Country :-{Country}</Text>\r\n                  <Text style={{fontSize:\"40px\",padding:\"20px\"}}>Religion :-{Religion}</Text>\r\n                  <div style={{padding:\"20px\"}}><Button>delete</Button></div>\r\n                \r\n              </CCardText>\r\n            </CCardBody>\r\n          </CCard>\r\n            </div>\r\n        \r\n    )\r\n}\r\nconst list1=[{'index':1,'username':\"Varatharajan\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/sage-adebayo\"},\r\n    {'index':2,'username':\"kamal\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/dan-abramov\"},\r\n    {'index':1,'username':\"Varatharajan\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/sage-adebayo\"},\r\n    {'index':2,'username':\"kamal\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/dan-abramov\"},\r\n    {'index':1,'username':\"Varatharajan\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/sage-adebayo\"},\r\n    {'index':2,'username':\"kamal\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/dan-abramov\"},\r\n    \r\n\r\n];","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\shredPlans.js",["462","463","464","465","466"],"import { Select } from \"@chakra-ui/select\"\r\nimport { InputGroup } from \"@chakra-ui/input\"\r\nimport { Flex, HStack, Text } from \"@chakra-ui/layout\"\r\nimport { useEffect, useState,useRef } from \"react\"\r\nimport { BiSearch } from \"react-icons/bi\"\r\nimport { PlanCard } from \"../../components/AdminComponents/planCard\"\r\nimport { AiOutlineDelete } from \"react-icons/ai\"\r\nimport { MdPublic } from \"react-icons/md\"\r\nimport { Button, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay,} from \"@chakra-ui/react\"\r\nimport { useHistory } from \"react-router\"\r\n\r\n\r\nexport const SharedPlan=()=>{\r\n    const history=useHistory()\r\n\r\n    const [rate,setRate]=useState(\"5\")\r\n    const [plans,setPlans]=useState([])\r\n    const [pid,setPID]=useState(\"\")\r\n\r\n    // useEffect(()=>{\r\n    //     getSharedPlans()\r\n    // },[])\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const cancelRef = useRef()\r\n\r\n    const [isOpen1, setIsOpen1] = useState(false)\r\n    const onClose1 = () => setIsOpen1(false)\r\n    const cancelRef1 = useRef()\r\n\r\n\r\n    const getSharedPlans=()=>{\r\n        fetch('/admin/getsharedPlans',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify(\r\n                {\r\n                    rate:rate,\r\n\r\n                }\r\n            )\r\n        }).then(res=>res.json()).\r\n        then(data=>{\r\n            setPlans(data.myPlans)\r\n            console.log(data)\r\n        }).catch(e=>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    const deleteAleart=(planId)=>{\r\n        console.log(planId)\r\n        setIsOpen(true)\r\n        setPID(planId)\r\n    }\r\n    const publicAleart=(planId)=>{\r\n        console.log(planId)\r\n        setIsOpen1(true)\r\n        setPID(planId)\r\n    }\r\n\r\n    const deletePlan=()=>{\r\n        fetch('/admin/deleteTravelPlan',{\r\n            method:\"delete\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                planId:pid})\r\n            }).then(res=>res.json()).\r\n            then(result=>{\r\n                if(result.data){\r\n                    setIsOpen(false)\r\n                    const newPlans=plans.filter(plan=>{\r\n                        return plan._id !=result.data._id                            \r\n                    })\r\n                    setPlans(newPlans)\r\n                }\r\n                \r\n                console.log(result)\r\n            })\r\n            .catch((e)=>{\r\n                console.log(e)\r\n            })\r\n        \r\n    }\r\n    const publicPlan=()=>{\r\n        fetch('/admin/setPublicPlan',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                planId:pid})\r\n            }).then(res=>res.json()).\r\n            then(result=>{\r\n                if(result.data){\r\n                    setIsOpen1(false)\r\n                    history.push(\"/admin/publicPlans\")     \r\n                }\r\n                \r\n                console.log(result)\r\n            })\r\n            .catch((e)=>{\r\n                console.log(e)\r\n            })\r\n        \r\n    }\r\n\r\n    return(\r\n        <>\r\n\r\n        <AlertDialog\r\n                isOpen={isOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n            >\r\n                <AlertDialogOverlay>\r\n                <AlertDialogContent>\r\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                    Delete Travel Plan\r\n                    </AlertDialogHeader>\r\n\r\n                    <AlertDialogBody>\r\n                    Are you sure? You can't undo this action afterwards.\r\n                    </AlertDialogBody>\r\n\r\n                    <AlertDialogFooter>\r\n                    <Button ref={cancelRef} onClick={onClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button colorScheme=\"red\" onClick={()=>{\r\n                        deletePlan();\r\n                    }} ml={3}>\r\n                        Delete\r\n                    </Button>\r\n                    </AlertDialogFooter>\r\n                </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n        </AlertDialog>\r\n\r\n\r\n        <AlertDialog\r\n                isOpen={isOpen1}\r\n                leastDestructiveRef={cancelRef1}\r\n                onClose={onClose1}\r\n            >\r\n                <AlertDialogOverlay>\r\n                <AlertDialogContent>\r\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                    public Travel Plan\r\n                    </AlertDialogHeader>\r\n\r\n                    <AlertDialogBody>\r\n                    Are you sure? You can't undo this action afterwards.\r\n                    </AlertDialogBody>\r\n\r\n                    <AlertDialogFooter>\r\n                    <Button ref={cancelRef1} onClick={onClose1}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button colorScheme=\"blue\" onClick={()=>{\r\n                        publicPlan();\r\n                    }} ml={3}>\r\n                        Public\r\n                    </Button>\r\n                    </AlertDialogFooter>\r\n                </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n        </AlertDialog>\r\n        \r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n        <HStack width=\"full\">\r\n        <InputGroup>\r\n            <Text>select rate</Text>\r\n            <Select  onChange={(e)=>setRate(e.target.value)} value={rate}>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"4\">4</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"1\">1</option>\r\n            </Select>\r\n            </InputGroup>\r\n            <Button colorScheme=\"teal\" size=\"xs\" leftIcon={<BiSearch/>} p={4} onClick={()=>getSharedPlans()}>\r\n                search\r\n            </Button>\r\n        </HStack>\r\n        </Flex>\r\n\r\n\r\n\r\n        <>\r\n        {plans && plans.map((plan,index)=>{\r\n                    return(\r\n                        <>\r\n                         <Flex flexDirection=\"column\" alignItems=\"center\" p={3}>\r\n                            <HStack>\r\n\r\n                            <Button colorScheme=\"red\" onClick={()=>{\r\n                                         deleteAleart(plan._id)\r\n                            }}><AiOutlineDelete /></Button>\r\n\r\n\r\n\r\n                            <Button colorScheme=\"blue\" onClick={()=>{\r\n                                        publicAleart(plan._id)\r\n                            }}><MdPublic /></Button>\r\n                        \r\n                            <PlanCard _id={plan._id} name={plan.name ? plan.name : `My plan ${index+1}`} days={plan.travelPlan[0].length} createdDate={plan.createdAt} travelPlan={plan.travelPlan} />\r\n\r\n                            </HStack>\r\n                         </Flex>\r\n                        </>\r\n                    )\r\n        })}\r\n\r\n        </>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        \r\n        </>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\ViewAdmin.js",["467","468","469"],"import React, { useState,useContext,useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { CCard,CCardImage,CCardBody,CCardText } from '@coreui/react'\r\nimport { Text } from '@chakra-ui/layout'\r\nimport { Avatar } from '@chakra-ui/avatar'\r\nimport { Button } from '@chakra-ui/button'\r\n//import { Admincontext } from '../context/AdminContext'\r\nexport default function ViewAdmin() {\r\n  const pid=useParams()\r\n  //const{state,dispatch}=useContext(Admincontext)\r\n    const [data,setdata]=useState([])\r\n    const[Firstname,setfirstname]=useState(\"gdfgdghdgh\")\r\n    const[Lastname,setlastname]=useState(\"fsvsvfs\")\r\n    const[Dob,setdob]=useState(\"fdfgddgdg\")\r\n    const[Email,setemail]=useState(\"afdsgdgghfu\")\r\n    useEffect(()=>{\r\n      fetch(\"/admin/viewAdmins\")\r\n      .then(res=>res.json())\r\n      .then(result=>{\r\n          console.log(result)\r\n         if(result.error){\r\n          //   M.toast({html: result.error,classes:\"#c62828 red darken-3\"})\r\n         }\r\n         else{\r\n              //console.log(result)\r\n               setdata(result.admins)\r\n               setfirstname((result.admins)[pid.pid].firstname)\r\n               setlastname((result.admins)[pid.pid].lastname)\r\n               setdob((result.admins)[pid.pid].dob)\r\n               setemail((result.admins)[pid.pid].email)\r\n              //dispatch({type:\"Adminlist\" , payload:{Adminlist:result.admins}})\r\n              //console.log(state.Adminlist[0].firstname)\r\n         }\r\n      }).catch(err=>{\r\n          console.log(err)\r\n      })\r\n     },[])\r\n    \r\n    return (\r\n            <div>\r\n            <CCard style={{minWidth:\"30rem\" ,maxWidth: '60rem',display:\"flex\",flexDirection:\"column\",alignItems:\"center\",backgroundColor:\"darkgray\" }}>\r\n            <CCardImage orientation=\"top\" src=\"/background1.jpg\"  style={{marginBottom:\"-50px\"}}/>\r\n            <Avatar src=\"https://bit.ly/sage-adebayo\" size=\"2xl\" style={{textAlign:\"center\"}}/>\r\n            <CCardBody >\r\n              <CCardText>\r\n                  <Text style={{fontSize:\"40px\",padding:\"20px\"}}>Firstname :- {Firstname}</Text>\r\n                  <Text style={{fontSize:\"40px\",padding:\"20px\"}}>Lastname :-{Lastname}</Text>\r\n                  <Text style={{fontSize:\"40px\",padding:\"20px\"}}>Dob :-{Dob}</Text>\r\n                  <Text style={{fontSize:\"40px\",padding:\"20px\"}}>Email :-{Email}</Text>\r\n                  <div style={{padding:\"20px\"}}><Button onClick={()=>console.log(data[pid.pid].dob) }>Edit</Button></div>\r\n                \r\n              </CCardText>\r\n            </CCardBody>\r\n          </CCard>\r\n            </div>\r\n        \r\n    )\r\n}\r\nconst list1=[{'index':1,'username':\"Varatharajan\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/sage-adebayo\"},\r\n    {'index':2,'username':\"kamal\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/dan-abramov\"},\r\n    {'index':1,'username':\"Varatharajan\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/sage-adebayo\"},\r\n    {'index':2,'username':\"kamal\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/dan-abramov\"},\r\n    {'index':1,'username':\"Varatharajan\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/sage-adebayo\"},\r\n    {'index':2,'username':\"kamal\",'country':\"Srilanka\",'religion':\"Hindu\",'picture':\"https://bit.ly/dan-abramov\"},\r\n    \r\n\r\n];","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\adminList.js",["470","471","472","473"],"import { useEffect, useState,useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import M from \"materialize-css\";\r\n\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n  } from \"@chakra-ui/react\"\r\nconst AdminList=()=>{\r\n    \r\n   const [data,setData]=useState([])\r\n   useEffect(()=>{\r\n    fetch(\"/admin/viewAdmins\")\r\n    .then(res=>res.json())\r\n    .then(result=>{\r\n        console.log(result)\r\n       if(result.error){\r\n        //   M.toast({html: result.error,classes:\"#c62828 red darken-3\"})\r\n       }\r\n       else{\r\n            //console.log(result.admins)\r\n             setData(result.admins)\r\n            //dispatch({type:\"Adminlist\" , payload:{Adminlist:result.admins}})\r\n            //console.log(state.Adminlist[0].firstname)\r\n       }\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n   },[])\r\n   //const setAdminprofile=(i)=>dispatch({type:\"SelectAdmin\" , payload:{SelectAdmin:state.Adminlist[i]}})\r\n   const viewitem=()=>{\r\n\r\n   }\r\n    return(\r\n       \r\n             <div className=\"container\"> \r\n            <table>\r\n                <thead>\r\n                <tr >\r\n                    <th> Id</th>\r\n                    <th style={{padding:\"30px\"}}>Profile</th>\r\n                    <th style={{padding:\"30px\"}}>First Name</th>\r\n                    <th style={{padding:\"30px\"}}>Last Nmae</th>\r\n                    <th style={{padding:\"30px\"}}>View</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    \r\n                        {\r\n                            data.map((item,index)=>{\r\n                                return(\r\n                                    <tr key={index}>\r\n                                        <td >{index+1}</td>\r\n                                        <td style={{padding:\"30px\"}}><Profile value={item.pic} firstname1={item.firstname}/></td>\r\n                                        <td style={{padding:\"30px\"}}>{item.firstname}</td>\r\n                                        <td style={{padding:\"30px\"}}>{item.lastname}</td>\r\n                                        <td style={{padding:\"30px\"}}>\r\n                                                \r\n                                        <Button ><Link to={`/admin/viewAdmin/${index}`}>Show</Link></Button></td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                </tbody>\r\n            </table>\r\n             </div>\r\n             \r\n\r\n       \r\n          \r\n          \r\n      \r\n      \r\n    )\r\n}\r\n\r\n\r\nconst Profile=(props)=>(<Popover  >\r\n    <PopoverTrigger>\r\n        <Avatar src={props.value}/>\r\n    </PopoverTrigger>\r\n    <PopoverContent>\r\n        <PopoverArrow />\r\n        <PopoverCloseButton />\r\n        <PopoverHeader style={{backgroundColor:\"grey\"}}>{props.firstname1}</PopoverHeader>\r\n        <PopoverBody style={{backgroundColor:\"grey\"}}>\r\n            \r\n        <div><Image src={props.value} alt=\"Segun Adebayo\"  style={{objectFit:\"contain\"}}/></div>\r\n            \r\n        \r\n            </PopoverBody>\r\n    </PopoverContent>\r\n    </Popover>)\r\n\r\nexport default AdminList;\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\publicPlans.js",["474","475","476","477","478","479"],"import { Flex, HStack, Text } from \"@chakra-ui/layout\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { Button } from \"@chakra-ui/button\"\r\nimport { PlanCard } from \"../../components/AdminComponents/planCard\"\r\nimport { IoRemoveCircleOutline } from \"react-icons/io5\"\r\n\r\n\r\nexport const PublicPlans=()=>{\r\n    const [rate,setRate]=useState(\"\")\r\n    const [plans,setPlans]=useState([])\r\n\r\n    useEffect(()=>{\r\n        getPublicPlans()\r\n    },[])\r\n\r\n\r\n    const getPublicPlans=()=>{\r\n        fetch('/admin/getPublicPlans',{\r\n            method:\"get\"\r\n        }).then(res=>res.json()).\r\n        then(data=>{\r\n            setPlans(data.myPlans)\r\n            console.log(data)\r\n        }).catch(e=>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    const removePublic=(pid)=>{\r\n        fetch('/admin/removePublic',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                planId:pid})\r\n            }).then(res=>res.json()).\r\n            then(result=>{\r\n                if(result.data){\r\n                    const newPlans=plans.filter(plan=>{\r\n                        return plan._id !=result.data._id                            \r\n                    })\r\n                    setPlans(newPlans)\r\n                }\r\n                \r\n                console.log(result)\r\n            })\r\n            .catch((e)=>{\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    return(\r\n        <>\r\n        \r\n   \r\n       \r\n        <>\r\n        {plans && plans.map((plan,index)=>{\r\n                    return(\r\n                        <>\r\n                         <Flex flexDirection=\"column\" alignItems=\"center\" p={3}>\r\n                            <HStack>\r\n\r\n                           \r\n\r\n                            <Button colorScheme=\"blue\" onClick={()=>{\r\n                                removePublic(plan._id)\r\n                            }}><IoRemoveCircleOutline /></Button>\r\n                        \r\n                            <PlanCard _id={plan._id} name={plan.name ? plan.name : `My plan ${index+1}`} days={plan.travelPlan[0].length} createdDate={plan.createdAt} travelPlan={plan.travelPlan} />\r\n\r\n                            </HStack>\r\n                         </Flex>\r\n                        </>\r\n                    )\r\n        })}\r\n\r\n        </>\r\n\r\n\r\n\r\n\r\n        \r\n        \r\n        </>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\AdminPortal\\testPage.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\ViewPOI.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\context\\AdminContext.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\Footer.js",["480","481","482"],"import { Flex, HStack, VStack,Text ,Heading,Divider} from \"@chakra-ui/layout\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const Footer=()=>{\r\n    return(\r\n        <>\r\n        <Flex width=\"full\" bg=\"black\"  mt=\"165px\" color=\"white\" justifyContent=\"space-around\" p={10}  >\r\n             <VStack>\r\n                <HStack spacing={10}>\r\n                <VStack alignItems=\"start\" spacing={8}>\r\n\r\n                     \r\n                     \r\n                     <Heading as=\"h3\" size=\"lg\">\r\n                        About Us\r\n                    </Heading>\r\n                 \r\n                    \r\n\r\n                    <Heading as=\"h3\" size=\"lg\">\r\n                        Contact Us\r\n                    </Heading>\r\n                  \r\n                </VStack>\r\n\r\n                <Divider orientation=\"vertical\"   variant=\"solid\" p={3}  />\r\n\r\n                <VStack>\r\n                     \r\n                     <>\r\n\r\n                     <iframe src=\"https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2FWonderDiscoveryTravelSriLanka%2F&tabs=messages&width=340&height=500&small_header=false&adapt_container_width=true&hide_cover=false&show_facepile=true&appId\" width=\"340\" height=\"500\" style={{border:\"none\",overflow:\"hidden\"}} scrolling=\"no\" frameborder=\"0\" allowfullscreen=\"true\" allow=\"autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share\"></iframe>                     </>\r\n                </VStack>\r\n                </HStack>\r\n                       <Divider  orientation=\"horizontal\"   variant=\"solid\" p={3}  />\r\n                </VStack>\r\n               \r\n        </Flex>\r\n       \r\n\r\n\r\n        </>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\Footer2.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\navbar.js",["483","484","485","486","487","488","489"],"import { useHistory } from \"react-router-dom\"\r\nimport React ,{useContext} from 'react';\r\nimport {\r\n  IconButton,\r\n  Avatar,\r\n  Box,\r\n  CloseButton,\r\n  Flex,\r\n  HStack,\r\n  VStack,\r\n  Icon,\r\n  useColorModeValue,\r\n  Link ,\r\n  Drawer,\r\n  DrawerContent,\r\n  Text,\r\n  useDisclosure,\r\n  BoxProps,\r\n  FlexProps,\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n  Image\r\n} from '@chakra-ui/react';\r\nimport { HamburgerIcon,ChevronDownIcon,BellIcon,SmallAddIcon, AttachmentIcon } from '@chakra-ui/icons';\r\nimport { AdminContext } from \"../context/AdminContext\";\r\nconst LinkItems = [\r\n    { name: 'Add a admin', icon: AttachmentIcon, linkto:\"/admin/addAdmin\" },\r\n    { name: 'Adminlist', icon: AttachmentIcon, linkto:\"/admin/viewAdmins\" },\r\n    { name: 'Provinces data', icon: AttachmentIcon,  linkto:\"/admin/provinces\"},\r\n    { name: 'View user list', icon: AttachmentIcon,  linkto:\"/admin/Viewuserlist\"},\r\n    { name: 'Editquestions', icon: AttachmentIcon,  linkto:\"/admin/editquestions\"},\r\n    { name: 'Genaratereport', icon: AttachmentIcon,  linkto:\"/admin/genarate\"},\r\n    { name: 'TravelplanList', icon: AttachmentIcon,  linkto:\"/admin/ViewTravelplanlist\"},\r\n    { name: 'sharedPlans', icon: AttachmentIcon,  linkto:\"/admin/publicPlans\"},\r\n    { name: 'publicPlans', icon: AttachmentIcon,  linkto:\"/admin/sharedPlans\"}\r\n  \r\n  ];\r\n\r\nconst logout=()=>{\r\n    \r\n    console.log(\"sdsw\")\r\n    fetch(\"/logout\")\r\n}\r\n\r\nconst NavBar=({\r\n  children,\r\n})=> {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const history=useHistory()\r\n\r\n    \r\n    \r\n \r\n  return (\r\n    <Box minH=\"100vh\" bg={useColorModeValue('gray.100', 'gray.900')}>\r\n      <SidebarContent\r\n        onClose={() => onClose}\r\n        display={{ base: 'none', md: 'block' }}\r\n      />\r\n      <Drawer\r\n        autoFocus={false}\r\n        isOpen={isOpen}\r\n        placement=\"left\"\r\n        onClose={onClose}\r\n        returnFocusOnClose={false}\r\n        onOverlayClick={onClose}\r\n        size=\"full\">\r\n        <DrawerContent>\r\n          <SidebarContent onClose={onClose} />\r\n        </DrawerContent>\r\n      </Drawer>\r\n      {/* mobilenav */}\r\n      <MobileNav onOpen={onOpen} />\r\n      <Box ml={{ base: 0, md: 60 }} p=\"4\">\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst SidebarContent = ({ onClose, ...rest }) => {\r\n  return (\r\n    <Box\r\n      transition=\"3s ease\"\r\n      bg={useColorModeValue('white', 'gray.900')}\r\n      borderRight=\"1px\"\r\n      borderRightColor={useColorModeValue('gray.200', 'gray.700')}\r\n      w={{ base: 'full', md: 60 }}\r\n      pos=\"fixed\"\r\n      h=\"full\"\r\n      {...rest}>\r\n      <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\r\n\r\n      <Link href=\"/admin/dashboard\">\r\n        <Text fontSize=\"2xl\" fontFamily=\"monospace\" fontWeight=\"bold\">\r\n          Travel App\r\n        </Text>\r\n      </Link>\r\n        \r\n        <CloseButton display={{ base: 'flex', md: 'none' }} onClick={onClose} />\r\n      </Flex>\r\n      {LinkItems.map((link) => (\r\n        <NavItem key={link.name} icon={link.icon} link={link.linkto}>\r\n          {link.name}\r\n        </NavItem>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\nconst NavItem = ({ icon, children, link, ...rest }) => {\r\n  return (\r\n    <Link  href=\"#\" style={{ textDecoration: 'none' }} href={link}>\r\n      <Flex\r\n        align=\"center\"\r\n        p=\"4\"\r\n        mx=\"4\"\r\n        borderRadius=\"lg\"\r\n        role=\"group\"\r\n        cursor=\"pointer\"\r\n        _hover={{\r\n          bg: 'cyan.400',\r\n          color: 'white',\r\n        }}\r\n        {...rest}>\r\n        {icon && (\r\n          <Icon\r\n            mr=\"4\"\r\n            fontSize=\"16\"\r\n            _groupHover={{\r\n              color: 'white',\r\n            }}\r\n            as={icon}\r\n          />\r\n        )}\r\n        {children}\r\n      </Flex>\r\n    </Link>\r\n  );\r\n};\r\n\r\n\r\nconst MobileNav = ({ onOpen, ...rest }) => {\r\n  const {state,dispatch}=useContext(AdminContext)\r\n  const history=useHistory()\r\n  return (\r\n    <Flex\r\n      ml={{ base: 0, md: 60 }}\r\n      px={{ base: 4, md: 4 }}\r\n      height=\"20\"\r\n      alignItems=\"center\"\r\n      bg={useColorModeValue('white', 'gray.900')}\r\n      borderBottomWidth=\"1px\"\r\n      borderBottomColor={useColorModeValue('gray.200', 'gray.700')}\r\n      justifyContent={{ base: 'space-between', md: 'flex-end' }}\r\n      {...rest}>\r\n      <IconButton\r\n        display={{ base: 'flex', md: 'none' }}\r\n        onClick={onOpen}\r\n        variant=\"outline\"\r\n        aria-label=\"open menu\"\r\n        icon={<HamburgerIcon />}\r\n      />\r\n\r\n      <Text\r\n        display={{ base: 'flex', md: 'none' }}\r\n        fontSize=\"2xl\"\r\n        fontFamily=\"monospace\"\r\n        fontWeight=\"bold\">\r\n        Logo\r\n      </Text>\r\n\r\n      <HStack spacing={{ base: '0', md: '6' }}>\r\n        {/* <IconButton\r\n          size=\"lg\"\r\n          variant=\"ghost\"\r\n          aria-label=\"open menu\"\r\n          icon={<BellIcon />}\r\n        /> */}\r\n        <Flex alignItems={'center'}>\r\n          <Menu>\r\n            <MenuButton\r\n              py={2}\r\n              transition=\"all 0.3s\"\r\n              _focus={{ boxShadow: 'none' }}>\r\n              <HStack>\r\n                <Avatar\r\n                  size={'sm'}\r\n                  src={\r\n                    'https://images.unsplash.com/photo-1619946794135-5bc917a27793?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9'\r\n                  }\r\n                />\r\n                <VStack\r\n                  display={{ base: 'none', md: 'flex' }}\r\n                  alignItems=\"flex-start\"\r\n                  spacing=\"1px\"\r\n                  ml=\"2\">\r\n                  <Text fontSize=\"sm\">{state ? state.firstname +\" \"+ state.lastname : \"\"}</Text>\r\n                  <Text fontSize=\"xs\" color=\"gray.600\">\r\n                    Admin\r\n                  </Text>\r\n                </VStack>\r\n                <Box display={{ base: 'none', md: 'flex' }}>\r\n                  <ChevronDownIcon />\r\n                </Box>\r\n              </HStack>\r\n            </MenuButton>\r\n            <MenuList\r\n              bg={useColorModeValue('white', 'gray.900')}\r\n              borderColor={useColorModeValue('gray.200', 'gray.700')}>\r\n              <MenuItem >Profile</MenuItem>\r\n              <MenuItem>Settings</MenuItem>\r\n              <MenuDivider />\r\n              <MenuItem  onClick={()=>{\r\n                   logout()\r\n                   localStorage.clear()\r\n                   dispatch({type:\"CLEAR\"})\r\n                   history.push('/admin/signin')\r\n              }}>Sign out</MenuItem>\r\n             \r\n            </MenuList>\r\n          </Menu>\r\n        </Flex>\r\n      </HStack>\r\n    </Flex>\r\n  );\r\n};\r\nexport default NavBar;","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\AdminComponents\\TravelPlanView.js",["490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507"],"import React , {useContext,useEffect,useState, useRef}from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { Box, Flex ,HStack,Stack, VStack} from \"@chakra-ui/layout\"\r\nimport { Image,Heading,Button,Text,Badge, Avatar , Skeleton ,Divider,AlertDialog, AlertDialogBody, AlertDialogFooter,AlertDialogHeader,AlertDialogContent,AlertDialogOverlay,Tabs, TabList, TabPanels, Tab, TabPanel,useToast} from \"@chakra-ui/react\"\r\nimport {IoLocationSharp} from \"react-icons/io5\"\r\nimport {MdDriveEta} from \"react-icons/md\"\r\nimport { PlaceCard } from \"../../components/AdminComponents/placeCard\"\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker,Polyline } from \"react-google-maps\"\r\nimport { AdminContext } from \"../../context/AdminContext\"\r\nimport NavBar from \"../navbar\"\r\n\r\n\r\n\r\nexport const TravelPlan=()=>{\r\n    const history=useHistory()\r\n    const {state, dispatch}=useContext(AdminContext)\r\n    const [plan,setPlan]=useState([[], []])\r\n    useEffect( ()=>{ \r\n\r\n            setPlan(state.travelPlan)\r\n            \r\n      \r\n } ,[state] )\r\n    var i=0;\r\n    var accomodation=\"\"\r\n\r\n\r\n   \r\n\r\n    return(\r\n        <>\r\n              \r\n     \r\n         <Tabs variant=\"soft-rounded\" colorScheme=\"teal\">\r\n         <Flex alignItems=\"center\" flexDirection=\"column\" boxShadow=\"lg\">\r\n             <Image src=\"https://www.thexpressng.com/wp-content/uploads/2019/03/SriLanka_Slider.jpg\" alt=\"Segun Adebayo\"  height=\"400px\" width=\"100%\" objectFit=\"cover\"/>\r\n             <Heading  marginTop=\"-350px\" boxShadow=\"dark-lg\" borderRadius=\"5px\" padding=\"10px\" marginBottom=\"300px\">{plan[0].length} Day Trip in </Heading>\r\n             <Stack direction=\"row\" spacing={4} align=\"center\">                    \r\n                    <TabList m=\"5px\">\r\n                        <Tab>Travel Plan</Tab>\r\n                        <Tab>Travel Route</Tab>\r\n                    </TabList>\r\n             </Stack>\r\n        </Flex>\r\n\r\n        <TabPanels>\r\n        <TabPanel>\r\n\r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n        \r\n\r\n            <HStack> \r\n                   <IoLocationSharp/> <Badge size=\"15\">9.00 a.m</Badge> <Text fontSize=\"3xl\">Start from colombo</Text>                  \r\n            </HStack>\r\n         \r\n\r\n            <>\r\n                    { (plan[0]) &&\r\n                    plan[0].map((Item=[], index)=>{\r\n                        \r\n                        return (\r\n                        <>\r\n                           <Box color=\"white\" backgroundColor=\"black\" padding={3} >Day {index+1}</Box>\r\n                        {\r\n                            Item.map( (subItem, index,)=>{\r\n                                i=i+1\r\n                                accomodation=subItem.geometry.location\r\n                                return(\r\n                                <> \r\n\r\n                                <Card name={subItem.name} photo={subItem.photos[0].photo_reference} address={subItem.formatted_address} rating={subItem.rating} index={i} distance={plan[1][i-1].distance.text} duration={plan[1][i-1].duration.text}  place_id={subItem.place_id}/>\r\n                                </>\r\n                                )\r\n                            })\r\n                        }\r\n                           {/* <Button colorScheme=\"teal\" variant=\"solid\" m={15} width=\"50%\" onClick={()=>{\r\n                                            dispatch({type:\"accomodation_location\", payload:{\r\n                                                accomodation_location:accomodation\r\n                                            }})\r\n                                            history.push('/travelPlan/nearbyhotels')\r\n                                        }}>\r\n                                Find Accomodations\r\n                           </Button> */}\r\n                           <Divider orientation=\"horizontal\" mb={2} />\r\n                        </>\r\n                        \r\n                        \r\n                    )\r\n                    })}             \r\n             </>\r\n                 \r\n\r\n\r\n            <HStack> \r\n                   <IoLocationSharp/> <Badge size=\"15\">6.00 p.m</Badge> <Text fontSize=\"3xl\">End - colombo</Text>                  \r\n            </HStack>\r\n\r\n\r\n            \r\n\r\n\r\n\r\n        </Flex>\r\n\r\n        </TabPanel>\r\n\r\n\r\n\r\n        <TabPanel>\r\n\r\n           <Route />\r\n        </TabPanel>\r\n\r\n\r\n       \r\n\r\n\r\n        </TabPanels>\r\n        </Tabs>\r\n\r\n   \r\n        </>\r\n    )\r\n}\r\n\r\nconst Card=({distance,duration,photo,index,name,address, types=[], rating, place_id})=>{\r\n\r\n    return(\r\n        <Flex flexDirection=\"column\" alignItems=\"center\" padding=\"10px\">\r\n                        <HStack  h=\"100px\" p={4}>\r\n                            <Divider orientation=\"vertical\"   variant=\"dashed\" />\r\n                            <VStack>\r\n                                <HStack>< MdDriveEta /> <Text fontSize=\"2xl\">{distance} </Text> </HStack>\r\n                                <Badge size=\"15\">{duration}</Badge>\r\n                            </VStack>\r\n\r\n                        </HStack>\r\n                        <PlaceCard  photo={photo} index={index} name={name} address={address} types={types} rating={rating} place_id={place_id}/>\r\n        </Flex>\r\n    )\r\n}\r\nconst Map=()=>{\r\n    const {state,dispatch}=useContext(AdminContext)\r\n    const [plan,setPlan]=useState([[[]],[]])\r\n    useEffect(()=>{\r\n        setPlan(state.travelPlan)\r\n    },[state.travelPlan])\r\n    const [open,setOpen]=useState(false);\r\n\r\n    var i=0;\r\n    const path=[{lat:6.927079,lng:79.857750}]\r\n      return(\r\n          <>\r\n  \r\n      <GoogleMap\r\n        defaultZoom={8}\r\n        defaultCenter={{ lat: 7.291418, lng:80.636696}}\r\n      >\r\n     {/* {plan?\r\n     <DirectionsRenderer directions={ plan[1][1] } />\r\n     :<> </>\r\n    } */}\r\n        <Marker position={{lat:6.927079,lng:79.857750}} label={\"start\"} />\r\n        {plan && plan[0].map((item=[],index)=>{\r\n            return(\r\n                <>\r\n                    {item.map((subitem,index)=>{\r\n                        i=i+1\r\n                        path.push(subitem.geometry.location)\r\n                        return(\r\n                            <>\r\n                            <Marker position={subitem.geometry.location} label={`${i}`} />\r\n                            \r\n                            </>\r\n                        )\r\n                    })}\r\n                </>\r\n            )\r\n        })\r\n\r\n        }\r\n\r\n        <Polyline   path={path}/>\r\n\r\n      \r\n    \r\n      </GoogleMap>\r\n          \r\n          </>\r\n    )\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\n\r\nconst Route=()=>{\r\n    return(\r\n        <>\r\n        <Flex width=\"80%\" height=\"100vh\" flexDirection=\"column\" mx=\"auto\" my=\"2\" boxShadow=\"dark-lg\">\r\n        <MapWrapped\r\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA`}\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `100%` }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n        </Flex>    \r\n        </>\r\n    )\r\n}\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\navbar.js",["508","509","510","511","512","513","514"],"import { Box,HStack } from \"@chakra-ui/layout\"\r\nimport { Button ,Heading, Menu,MenuButton,MenuList,MenuItem,MenuItemOption,MenuGroup,MenuOptionGroup,MenuIcon,MenuCommand,MenuDivider,} from \"@chakra-ui/react\"\r\nimport { FaUserCircle} from \"react-icons/fa\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { TravelContext } from \"../../context/TravelContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useContext } from \"react\";\r\n\r\nconst NavBar=()=>{\r\n    const {state,dispatch} = useContext(TravelContext)\r\n     const history = useHistory()\r\n\r\n     const logout=()=>{\r\n         fetch(\"/logout\").then(res=>res.json()).\r\n         then(result=>console.log(result)).\r\n         catch(e=>{\r\n             console.log(e)\r\n         })\r\n     }\r\n    return (\r\n        <>\r\n        \r\n        <Box width=\"full\" boxShadow=\"xl\" p=\"6\" bg=\"white\" height=\"75px\" position=\"fixed\" zIndex=\"9\">\r\n        <HStack spacing=\"24px\" justifyContent=\"space-between\" alignItems=\"center\"> \r\n            <Box>\r\n\r\n            {state && state._id ? <>\r\n                <Link to=\"/travelPlan\">\r\n                    <Heading>Travel Guide</Heading>\r\n                </Link> \r\n            \r\n            </>:\r\n            <>\r\n                <Link >\r\n                        <Heading>Travel Guide</Heading>\r\n                </Link> \r\n            \r\n            </>}   \r\n            \r\n            </Box>\r\n            <Box>\r\n                \r\n                {state && state._id ? <><NavBarAccountItem name={state ? state.firstname+\" \"+ state.lastname  : \"\"}  country={state ? state.country : \"\"}/>\r\n                          <Button colorScheme=\"teal\" variant=\"outline\" onClick={()=>{\r\n                              logout()\r\n                              localStorage.clear()\r\n                              dispatch({type:\"CLEAR\"})\r\n                              history.push('/travelPlan/signin')\r\n                          }}>\r\n                                Sign out\r\n                            </Button>\r\n\r\n                           \r\n                         </>\r\n                    :\r\n                         <>\r\n                        <Link to=\"/travelPlan/signin\">\r\n                            <Button colorScheme=\"teal\" variant=\"outline\">\r\n                                Sign in\r\n                            </Button>\r\n\r\n                        </Link>\r\n                \r\n                \r\n                         </>\r\n                }\r\n                    \r\n            </Box>\r\n            \r\n        </HStack>\r\n        </Box>\r\n        <Box width=\"full\" boxShadow=\"xl\" p=\"6\" bg=\"white\" height=\"75px\">\r\n        </Box>        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n\r\n\r\n\r\nconst NavBarAccountItem=({name,country})=>{\r\n    return(\r\n        <>\r\n        \r\n        <Menu >\r\n                <MenuButton mr={3}\r\n                    px={2}\r\n                    py={2}\r\n                    transition=\"all 0.2s\"\r\n                    borderRadius=\"full\"\r\n                    borderWidth=\"1px\"\r\n                    _hover={{ bg: \"gray.400\" }}\r\n                    _expanded={{ bg: \"blue.400\" }}\r\n                    _focus={{ boxShadow: \"outline\" }}\r\n                >\r\n                    < FaUserCircle />\r\n                </MenuButton>\r\n                <MenuList>\r\n\r\n                    <MenuItem isDisabled={true}>{name}</MenuItem>\r\n                    <MenuItem isDisabled={true}>{country}</MenuItem>\r\n                    \r\n                    <MenuDivider />\r\n\r\n                    <Link to=\"/travelPlan/myAccount\"><MenuItem >My Account</MenuItem></Link>\r\n                    <Link to=\"/travelPlan/myplans\"><MenuItem>My travel Plans</MenuItem></Link>\r\n                    \r\n                </MenuList>\r\n        </Menu>\r\n        \r\n        \r\n        \r\n        </>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\TravelPlan.js",["515","516","517","518","519","520","521","522","523"],"import React , {useContext,useEffect,useState, useRef}from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { Box, Flex ,HStack,Stack, VStack} from \"@chakra-ui/layout\"\r\nimport { Image,Heading,Button,Text,Badge, Avatar , Skeleton ,Divider,AlertDialog, AlertDialogBody, AlertDialogFooter,AlertDialogHeader,AlertDialogContent,AlertDialogOverlay,Tabs, TabList, TabPanels, Tab, TabPanel,useToast,Spinner} from \"@chakra-ui/react\"\r\nimport {IoLocationSharp} from \"react-icons/io5\"\r\nimport {MdDriveEta} from \"react-icons/md\"\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport { getTravelPlan } from \"../../services/TravelPlanService\"\r\nimport { PlaceCard } from \"../../components/TravelPlanApp/placeCard\"\r\nimport { FiEdit, FiSave} from \"react-icons/fi\";\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow,DirectionsRenderer,Polyline } from \"react-google-maps\"\r\n\r\n\r\n\r\nexport const TravelPlan=()=>{\r\n    const toast=useToast()\r\n    const history=useHistory()\r\n    const {state, dispatch}=useContext(TravelContext)\r\n    const [isloading,setLoading]=useState(false)\r\n    const [plan,setPlan]=useState([[], []])\r\n    useEffect( ()=>{ \r\n\r\n        if(state.travelPlan){\r\n            setLoading(true)\r\n            setPlan(state.travelPlan)\r\n           console.log(state.travelPlan)\r\n            \r\n        }\r\n        else{\r\n            // setLoading(false)\r\n         getTravelPlan(\"wet\",[],\"2\",\"buddhsism\",[],[\"ancient\", \"natural\", \"parks\"]).then((r)=>{\r\n         console.log(r[0])\r\n         setPlan(r[0])\r\n         setLoading(true)\r\n         dispatch({type:\"set_travelPlan\" , payload:{travelPlan:r[0]}})\r\n         dispatch({type:\"set_pois\" , payload:{allpois:r[1]}})\r\n         \r\n         \r\n        //  console.log(r[0][0][0].photos[0].photo_reference)\r\n        // \"wet\",[],\"2\",\"buddhsism\",[],[\"ancient\", \"natural\", \"parks\"]\r\n        // state.userPreferences.climate,state.userPreferences.provinces,state.userPreferences.days,state.userPreferences.religion,state.userPreferences.thingsLike,state.userPreferences.placesLike\r\n  \r\n    })\r\n}\r\n } ,[state] )\r\n    var i=0;\r\n    var accomodation=\"\"\r\n\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const cancelRef = useRef()\r\n\r\n\r\n    const savePlan=()=>{\r\n        fetch('/user/saveTravelPlan',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                travelPlan:state.travelPlan\r\n            })\r\n        }).then(res=>res.json()).then((data)=>{\r\n                if(data.error){\r\n                    toast({\r\n                        title: data.error,\r\n                        position:\"top-right\",\r\n                        status:\"error\",\r\n                        duration: 4000,\r\n                        isClosable: true,\r\n                      })\r\n                }\r\n                else{\r\n                    toast({\r\n                        title: data.message,\r\n                        position:\"top-right\",\r\n                        status:\"success\",\r\n                        duration: 4000,\r\n                        isClosable: true,\r\n                      })\r\n                    history.push(\"/travelPlan/myplans\")\r\n                }\r\n                \r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const updatePlan=()=>{\r\n        fetch('/user/updateTravelPlan',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                planId:state.planId,\r\n                travelPlan:state.travelPlan\r\n            })\r\n        }).then(res=>res.json()).then((data)=>{\r\n                console.log(data)\r\n                history.push(\"/travelPlan/myplans\")\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n                <>\r\n                \r\n                <AlertDialog\r\n                    isOpen={isOpen}\r\n                    leastDestructiveRef={cancelRef}\r\n                    onClose={onClose}\r\n                >\r\n                    <AlertDialogOverlay>\r\n                    <AlertDialogContent>\r\n                        <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                        {state.planId ? \"update\" : \"save\"} Travel Plan\r\n                        </AlertDialogHeader>\r\n\r\n                        <AlertDialogBody>\r\n                        Do you want to {state.planId ? \"update\" : \"save\"}?\r\n                        </AlertDialogBody>\r\n\r\n                        <AlertDialogFooter>\r\n                        <Button ref={cancelRef} onClick={onClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button colorScheme=\"blue\" onClick={onClose} ml={3} onClick={()=>{\r\n                                if(state.planId){\r\n                                    updatePlan();\r\n                                }\r\n                                else{\r\n                                    savePlan();\r\n                                }\r\n                                        \r\n                        }}>\r\n                            save\r\n                        </Button>\r\n                        </AlertDialogFooter>\r\n                    </AlertDialogContent>\r\n                    </AlertDialogOverlay>\r\n                </AlertDialog>\r\n                </>\r\n\r\n\r\n         {!isloading? \r\n                <Flex justifyContent=\"center\" alignItems=\"center\">\r\n                <Spinner\r\n                thickness=\"7px\"\r\n                speed=\"0.65s\"\r\n                emptyColor=\"gray.200\"\r\n                color=\"blue.500\"\r\n                size=\"xl\"\r\n                width=\"300px\"\r\n                height=\"300px\"\r\n                \r\n                /> </Flex>:\r\n\r\n         <Tabs variant=\"soft-rounded\" colorScheme=\"teal\">\r\n         <Flex alignItems=\"center\" flexDirection=\"column\" boxShadow=\"lg\">\r\n             <Image src=\"https://www.thexpressng.com/wp-content/uploads/2019/03/SriLanka_Slider.jpg\"   height=\"400px\" width=\"100%\" objectFit=\"cover\"/>\r\n             <Heading  marginTop=\"-350px\" boxShadow=\"dark-lg\" borderRadius=\"5px\" padding=\"10px\" marginBottom=\"300px\">{plan[0].length} Day Trip in </Heading>\r\n             <Stack direction=\"row\" spacing={4} align=\"center\">                    \r\n                    <TabList m=\"5px\">\r\n                        <Tab>Travel Plan</Tab>\r\n                        <Tab>Travel Route</Tab>\r\n                    </TabList>\r\n             </Stack>\r\n        </Flex>\r\n\r\n        <TabPanels>\r\n        <TabPanel>\r\n\r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n        \r\n\r\n            <HStack> \r\n                   <IoLocationSharp/> <Badge size=\"15\">9.00 a.m</Badge> <Text fontSize=\"3xl\">Start from colombo</Text>                  \r\n            </HStack>\r\n         \r\n\r\n            <>\r\n                    { (plan[0]) &&\r\n                    plan[0].map((Item=[], index)=>{\r\n                        \r\n                        return (\r\n                        <>\r\n                           <Box color=\"white\" backgroundColor=\"black\" padding={3} >Day {index+1}</Box>\r\n                        {\r\n                            Item.map( (subItem, index,)=>{\r\n                                i=i+1\r\n                                accomodation=subItem.geometry.location\r\n                                return(\r\n                                <> \r\n\r\n                                <Card name={subItem.name} photo={subItem.photos[0].photo_reference} address={subItem.formatted_address} rating={subItem.rating} index={i} distance={plan[1][i-1].distance.text} duration={plan[1][i-1].duration.text}  place_id={subItem.place_id}/>\r\n                                </>\r\n                                )\r\n                            })\r\n                        }\r\n                           <Button colorScheme=\"teal\" variant=\"solid\" m={15} width=\"50%\" onClick={()=>{\r\n                                            dispatch({type:\"accomodation_location\", payload:{\r\n                                                accomodation_location:accomodation\r\n                                            }})\r\n                                            history.push('/travelPlan/nearbyhotels')\r\n                                        }}>\r\n                                Find Accomodations\r\n                           </Button>\r\n                           <Divider orientation=\"horizontal\" mb={2} />\r\n                        </>\r\n                        \r\n                        \r\n                    )\r\n                    })}             \r\n             </>\r\n                 \r\n\r\n\r\n            <HStack> \r\n                   <IoLocationSharp/> <Badge size=\"15\">6.00 p.m</Badge> <Text fontSize=\"3xl\">End - {plan[1].length ? plan[1][plan[1].length-1].end_address : \"\"}</Text>                  \r\n            </HStack>\r\n\r\n\r\n            \r\n\r\n\r\n\r\n        </Flex>\r\n\r\n        <VStack position=\"fixed\" bottom=\"0\" right=\"0\" p={3} >\r\n        <Button colorScheme=\"teal\" size=\"lg\" borderRadius=\"50%\" onClick={()=>{\r\n            history.push(\"/travelPlan/editPlan\")\r\n        }}>\r\n            <FiEdit/>\r\n        </Button>\r\n\r\n        <Button colorScheme=\"teal\" size=\"lg\" borderRadius=\"50%\" onClick={()=>{\r\n             setIsOpen(true)\r\n\r\n        }}>\r\n            <FiSave />\r\n        </Button>\r\n        </VStack>\r\n        </TabPanel>\r\n\r\n\r\n\r\n        <TabPanel>\r\n\r\n           <Route />\r\n        </TabPanel>\r\n        </TabPanels>\r\n        </Tabs>\r\n\r\n        }\r\n\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\nconst Card=({distance,duration,photo,index,name,address, types=[], rating, place_id})=>{\r\n\r\n    return(\r\n        <Flex flexDirection=\"column\" alignItems=\"center\" padding=\"10px\">\r\n                        <HStack  h=\"100px\" p={4}>\r\n                            <Divider orientation=\"vertical\"   variant=\"dashed\" />\r\n                            <VStack>\r\n                                <HStack>< MdDriveEta /> <Text fontSize=\"2xl\">{distance} </Text> </HStack>\r\n                                <Badge size=\"15\">{duration}</Badge>\r\n                            </VStack>\r\n\r\n                        </HStack>\r\n                        \r\n                        <PlaceCard  photo={photo} index={index} name={name} address={address} types={types} rating={rating} place_id={place_id}/>\r\n        </Flex>\r\n    )\r\n}\r\nconst Map=()=>{\r\n    const {state,dispatch}=useContext(TravelContext)\r\n    const [plan,setPlan]=useState([[[]],[]])\r\n    useEffect(()=>{\r\n        setPlan(state.travelPlan)\r\n    },[state.travelPlan])\r\n    const [open,setOpen]=useState(false);\r\n\r\n    var i=0;\r\n    const path=[{lat:6.927079,lng:79.857750}]\r\n      return(\r\n          <>\r\n  \r\n      <GoogleMap\r\n        defaultZoom={8}\r\n        defaultCenter={{ lat: 7.291418, lng:80.636696}}\r\n      >\r\n     {/* {plan?\r\n     <DirectionsRenderer directions={ plan[1][1] } />\r\n     :<> </>\r\n    } */}\r\n        <Marker position={{lat:6.927079,lng:79.857750}} label={\"start\"} />\r\n        {plan && plan[0].map((item=[],index)=>{\r\n            return(\r\n                <>\r\n                    {item.map((subitem,index)=>{\r\n                        i=i+1\r\n                        path.push(subitem.geometry.location)\r\n                        return(\r\n                            <>\r\n                            <Marker position={subitem.geometry.location} label={`${i}`} />\r\n                            \r\n                            </>\r\n                        )\r\n                    })}\r\n                </>\r\n            )\r\n        })\r\n\r\n        }\r\n\r\n        <Polyline   path={path}/>\r\n\r\n      \r\n    \r\n      </GoogleMap>\r\n          \r\n          </>\r\n    )\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\n\r\nconst Route=()=>{\r\n    return(\r\n        <>\r\n        <Flex width=\"80%\" height=\"100vh\" flexDirection=\"column\" mx=\"auto\" my=\"2\" boxShadow=\"dark-lg\">\r\n        <MapWrapped\r\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA`}\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `100%` }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n        </Flex>    \r\n        </>\r\n    )\r\n}\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\context\\TravelContext.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\Home.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\userPreferences.js",["524","525","526","527"],"import React, {useState, useRef, useContext} from \"react\"\r\nimport { Box, Text,Heading ,Stack, VStack, HStack} from \"@chakra-ui/layout\"\r\nimport { Radio, RadioGroup , Button, Checkbox, CheckboxGroup, Select , AlertDialog,AlertDialogBody,AlertDialogFooter,AlertDialogHeader,AlertDialogContent,AlertDialogOverlay,} from \"@chakra-ui/react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { getTravelPlan } from \"../../services/TravelPlanService\"\r\n\r\nexport const UserPreferences=()=>{\r\n\r\n    const {state, dispatch}=useContext(TravelContext)\r\n\r\n    const history=useHistory()\r\n    const [climate, setClimate] =useState('dry');\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [days, setDays] = useState(\"2\");\r\n    const [religion, setReligion] = useState(\"\");\r\n    const [placesLike, setPlacesLike] = useState([]);\r\n    const [thingsLike, setThingsLike] = useState([]);\r\n\r\n\r\n    const [q1, setQ1]=useState(\"block\")\r\n    const [q2, setQ2]=useState(\"none\")\r\n    const [q3, setQ3]=useState(\"none\")\r\n    const [q4, setQ4]=useState(\"none\")\r\n    const [q5, setQ5]=useState(\"none\")\r\n    const [q6, setQ6]=useState(\"none\")\r\n\r\n    \r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const cancelRef = useRef()\r\n\r\n    const [aleartHeader, setAleartHeader]=useState(\"\")\r\n    const [aleartBody, setAleartBody]=useState(\"\")\r\n\r\n\r\n    return(\r\n        <>\r\n        <AlertDialog\r\n          isOpen={isOpen}\r\n          leastDestructiveRef={cancelRef}\r\n          onClose={onClose}\r\n        >\r\n          <AlertDialogOverlay>\r\n            <AlertDialogContent>\r\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                {aleartHeader}\r\n              </AlertDialogHeader>\r\n  \r\n              <AlertDialogBody>\r\n                {aleartBody}\r\n              </AlertDialogBody>\r\n  \r\n              <AlertDialogFooter>\r\n                <Button ref={cancelRef} onClick={onClose}>\r\n                  Cancel\r\n                </Button>\r\n              </AlertDialogFooter>\r\n            </AlertDialogContent>\r\n          </AlertDialogOverlay>\r\n        </AlertDialog>\r\n        \r\n        <Box alignItems=\"center\" padding=\"50\">\r\n\r\n\r\n\r\n\r\n        <Box maxW=\"60%\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" m=\"auto\" padding=\"25\" boxShadow=\"dark-lg\" display={q1}>\r\n                <Heading>1.Climate Condition would you expect while travelling?</Heading>\r\n                <Box pt={10} pb={10}>\r\n                <RadioGroup onChange={setClimate} value={climate}>\r\n                <Stack spacing={6} >\r\n                    <Radio value=\"dry\">Dry</Radio>\r\n                    <Radio value=\"wet\">Wet</Radio>\r\n                    <Radio value=\"intermediate\">Intermediate</Radio>\r\n                </Stack>\r\n                </RadioGroup>\r\n                </Box>\r\n\r\n                <HStack justifyContent=\"\">\r\n                {/* <Button colorScheme=\"teal\" variant=\"outline\">\r\n                    \r\n                </Button> */}\r\n                <Button colorScheme=\"teal\" variant=\"outline\" onClick={() => {setQ1(\"none\"); setQ2(\"block\")}} >\r\n                    Next\r\n                </Button>\r\n                </HStack >\r\n\r\n        </Box>\r\n\r\n\r\n        <Box maxW=\"60%\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" m=\"auto\" padding=\"25\" boxShadow=\"dark-lg\" display={q2}>\r\n                <Heading>2.Select at most 3 Provinces you like to visit in Sri Lanka?</Heading>\r\n                <Link to=\"/travelPlan/provinces\"><Text color=\"blue\" textDecoration=\"underline\">refer informations about provinces</Text></Link>\r\n                <Box pt={10} pb={10}>\r\n                <CheckboxGroup colorScheme=\"green\" onChange={(e)=>setProvinces(e)} >\r\n                <VStack alignItems=\"start\">\r\n                \r\n                    <Checkbox value=\"Northern\">Northern</Checkbox>\r\n                    <Checkbox value=\"North Western\">North Western</Checkbox>\r\n                    <Checkbox value=\"Western\">Western</Checkbox>\r\n                    <Checkbox value=\"North Central\">North Central</Checkbox>\r\n                    <Checkbox value=\"Central\">Central</Checkbox>\r\n                    <Checkbox value=\"Sabaragamuwa\">Sabaragamuwa</Checkbox>\r\n                    <Checkbox value=\"Eastern\">Eastern</Checkbox>\r\n                    <Checkbox value=\"Uva\">Uva</Checkbox>\r\n                    <Checkbox value=\"Southern\">Southern</Checkbox>\r\n\r\n                    \r\n                </VStack>\r\n                </CheckboxGroup>\r\n                </Box>\r\n\r\n                <HStack justifyContent=\"space-between\">\r\n                <Button colorScheme=\"teal\" variant=\"outline\" onClick={() => {setQ1(\"block\"); setQ2(\"none\")}}>\r\n                    Previous\r\n                </Button>\r\n                <Button colorScheme=\"teal\" variant=\"outline\" onClick={() => {\r\n                    if(provinces.length>=4) {\r\n                            setAleartHeader(\"Selecet Provinces\")\r\n                            setAleartBody(\"You can't select more than 3 provinces.\")\r\n                            setIsOpen(true)\r\n                            return;\r\n                    }\r\n                    setQ2(\"none\"); setQ3(\"block\")}} >\r\n                    Next\r\n                </Button>\r\n                </HStack >\r\n\r\n        </Box>\r\n\r\n\r\n\r\n        <Box maxW=\"60%\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" m=\"auto\" padding=\"25\" boxShadow=\"dark-lg\" display={q3}>\r\n                <Heading>3.Number of Days , you hope to travel?</Heading>\r\n                <Box pt={10} pb={10}>\r\n\r\n                <Select  variant=\"filled\" p={10} >\r\n                    <option value=\"1\">1 Day</option>\r\n                    <option value=\"2\">2 Day</option>\r\n                    <option value=\"3\">3 Day</option>\r\n                </Select>\r\n                \r\n                </Box>\r\n\r\n                <HStack justifyContent=\"space-between\">\r\n                <Button colorScheme=\"teal\" variant=\"outline\" onClick={() => {setQ2(\"block\"); setQ3(\"none\")}}>\r\n                    Previous\r\n                </Button>\r\n                <Button colorScheme=\"teal\" variant=\"outline\" onClick={() => {setQ3(\"none\"); setQ4(\"block\")}} >\r\n                    Next\r\n                </Button>\r\n                </HStack >\r\n\r\n        </Box>\r\n\r\n\r\n        <Box maxW=\"60%\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" m=\"auto\" padding=\"25\" boxShadow=\"dark-lg\" display={q4}>\r\n                <Heading>4.Any religion you would like to see in your travel?</Heading>\r\n                <Box pt={10} pb={10}>\r\n\r\n                <Select  variant=\"filled\" p={10}>\r\n                    <option value=\"Buddhism\">Buddhism</option>\r\n                    <option value=\"Hindu\">Hindu</option>\r\n                    <option value=\"Islam\">Islam</option>\r\n                    <option value=\"Catholic\">Catholic</option>\r\n                    <option value=\"\">None</option>\r\n                    \r\n                    \r\n                </Select>\r\n                \r\n                </Box>\r\n\r\n                <HStack justifyContent=\"space-between\">\r\n                <Button colorScheme=\"teal\" variant=\"outline\" onClick={() => {setQ3(\"block\"); setQ4(\"none\")}}>\r\n                    Previous\r\n                </Button>\r\n                <Button colorScheme=\"teal\" variant=\"outline\" onClick={() => {setQ4(\"none\"); setQ5(\"block\")}} >\r\n                    Next\r\n                </Button>\r\n                </HStack >\r\n\r\n        </Box>\r\n\r\n\r\n        <Box maxW=\"60%\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" m=\"auto\" padding=\"25\" boxShadow=\"dark-lg\" display={q5}>\r\n                <Heading>5.Select at most 3 places you like to visit in Sri Lanka?</Heading>\r\n                <Box pt={10} pb={10}>\r\n                <CheckboxGroup colorScheme=\"green\" onChange={(e)=>setPlacesLike(e)} >\r\n                <VStack alignItems=\"start\">\r\n                    <Checkbox value=\"Natural\" >Natural</Checkbox>\r\n                    <Checkbox value=\"animal\">Animal</Checkbox>\r\n                    <Checkbox value=\"botenical gardens\">Botenical gardens</Checkbox>\r\n                    <Checkbox value=\"parks\">Parks</Checkbox>\r\n                    <Checkbox value=\"beaches\">Beaches</Checkbox>\r\n                    <Checkbox value=\"ancient\">Ancient</Checkbox>\r\n                    <Checkbox value=\"reliogous\">Reliogous</Checkbox>\r\n                    \r\n\r\n                    \r\n                </VStack>\r\n                </CheckboxGroup>\r\n                </Box>\r\n\r\n                <HStack justifyContent=\"space-between\">\r\n                <Button colorScheme=\"teal\" variant=\"outline\" onClick={() => {                   \r\n                    setQ4(\"block\"); setQ5(\"none\")}}>\r\n                    Previous\r\n                </Button>\r\n                <Button colorScheme=\"teal\" variant=\"outline\" onClick={() => {\r\n                    if(placesLike.length>=4) {\r\n                        setAleartHeader(\"Selecet places\")\r\n                        setAleartBody(\"You can't select more than 3 places.\")\r\n                        setIsOpen(true)\r\n                        return;\r\n                    }\r\n                    if(placesLike.length!=3) {\r\n                        setAleartHeader(\"Selecet places\")\r\n                        setAleartBody(\"You need to select 3 places.\")\r\n                        setIsOpen(true)\r\n                        return;\r\n                    }                    \r\n                    setQ5(\"none\"); setQ6(\"block\")}} >\r\n                    Next\r\n                </Button>\r\n                </HStack >\r\n\r\n        </Box>\r\n\r\n\r\n\r\n\r\n        <Box maxW=\"60%\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" m=\"auto\" padding=\"25\" boxShadow=\"dark-lg\" display={q6}>\r\n                <Heading>6.Select things you like to do in Sri Lanka?</Heading>\r\n                <Box pt={10} pb={10}>\r\n                <CheckboxGroup colorScheme=\"green\" onChange={(e)=>setThingsLike(e)} >\r\n                <VStack alignItems=\"start\">\r\n                    <Checkbox value=\"hiking\" >hiking</Checkbox>\r\n                    <Checkbox value=\"surfing\">surfing</Checkbox>\r\n                    <Checkbox value=\"camping\">camping</Checkbox>\r\n                    <Checkbox value=\"swimming\">swimming</Checkbox>\r\n                    <Checkbox value=\"riding boats\">riding boats</Checkbox>\r\n                                     \r\n\r\n                    \r\n                </VStack>\r\n                </CheckboxGroup>\r\n                </Box>\r\n\r\n                <HStack justifyContent=\"space-between\">\r\n                <Button colorScheme=\"teal\" variant=\"outline\" onClick={() => {setQ5(\"block\"); setQ6(\"none\")}}>\r\n                    Previous\r\n                </Button>\r\n                <Button colorScheme=\"teal\" variant=\"outline\" onClick={() => {\r\n\r\n                    \r\n                         dispatch({type:\"USER_PREFERENCES\",payload:{userPreferences:{\r\n                            climate:climate,\r\n                            provinces:provinces,\r\n                            days:days,\r\n                            religion:religion,\r\n                            placesLike:placesLike,\r\n                            thingsLike:thingsLike\r\n                        }}}) ;\r\n\r\n                        getTravelPlan(climate,provinces,days,religion,thingsLike,placesLike).then((r)=>{\r\n                        dispatch({type:\"set_travelPlan\" , payload:{travelPlan:r[0]}})\r\n                        dispatch({type:\"set_pois\" , payload:{allpois:r[1]}})\r\n                        history.push(\"/travelPlan/travelPlan\")\r\n                        });\r\n\r\n\r\n\r\n\r\n                    }} >\r\n                    Submit\r\n                </Button>\r\n                </HStack >\r\n\r\n        </Box>\r\n\r\n\r\n\r\n\r\n\r\n        </Box>\r\n        \r\n        \r\n        </>\r\n    )\r\n}\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\ViewMyTravelPlan.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\addMorePlaces.js",["528","529"],"import { useContext, useState, useEffect } from \"react\"\r\nimport { findPois, addPoiToPlan } from \"../../services/EditPlanServices\"\r\nimport { useParams } from 'react-router'\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport { PlaceCard } from \"../../components/TravelPlanApp/placeCard\"\r\nimport { Flex, HStack ,VStack} from \"@chakra-ui/layout\"\r\nimport { GrAddCircle } from \"react-icons/gr\";\r\nimport { Button } from \"@chakra-ui/button\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nexport const AddMorePlaces=()=>{\r\n    const history=useHistory()\r\n    const {day}=useParams()\r\n    const [pois,setPois]=useState([])\r\n    const [route,setRoute]=useState([])\r\n    const {state, dispatch}=useContext(TravelContext)\r\n    useEffect(() => {\r\n        findPois(day, state.travelPlan, state.allpois).then((res)=>{\r\n            console.log(res)\r\n            setPois(res[0])\r\n            setRoute(res[1])\r\n        })\r\n    }, [state])\r\n\r\n\r\n    const addPoi=(day,poi, route)=>{\r\n            addPoiToPlan(day,poi, route,state.travelPlan).then((res)=>{\r\n                // console.log(res)\r\n                dispatch({type:\"set_travelPlan\" , payload:{travelPlan:res}})\r\n            })\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n        \r\n        { \r\n         pois.map((Item, index)=>{\r\n            return(\r\n                <>\r\n                <HStack m={3}>\r\n\r\n                <Button colorScheme=\"black\" variant=\"outline\" onClick={()=>{\r\n                                addPoi(day,Item, route[index]);\r\n                                history.push(\"/travelPlan/editPlan\")\r\n\r\n                 }}>\r\n                     <GrAddCircle />           \r\n                </Button>\r\n\r\n\r\n\r\n                <PlaceCard  index={index+1} name={Item.name} address={Item.vicinity} photo={Item.photos ? Item.photos[0].photo_reference : \"\" } rating={Item.rating} place_id={Item.place_id}/>\r\n                </HStack>\r\n                </>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n        \r\n        \r\n        </Flex>\r\n        </>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\nearbyhotels.js",["530","531"],"import React, { useEffect,useState , useContext} from \"react\"\r\nimport { getNearByHotels} from \"../../services/ViewPOIServices\"\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport { PlaceCard } from \"../../components/TravelPlanApp/placeCard\"\r\nimport { Flex } from \"@chakra-ui/layout\"\r\n\r\nexport const NearByHotels=()=>{\r\n    const [data,setData]=useState([])\r\n    const {state, dispatch}=useContext(TravelContext)\r\n    \r\n\r\n    useEffect( ()=>{\r\n            getNearByHotels({lat:6.927079,lng:79.857750}).\r\n            then((r)=>{\r\n                setData(r)\r\n                console.log(r)   \r\n            }); \r\n            \r\n        },[state.accomodation_location] )\r\n\r\n  \r\n    return(\r\n        <>\r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n        \r\n        { \r\n         data.map((Item, index)=>{\r\n            return(\r\n                <>\r\n                \r\n                <PlaceCard  index={index} name={Item.name} address={Item.vicinity} photo={Item.photos ? Item.photos[0].photo_reference : \"\" } rating={Item.rating} place_id={Item.place_id}/>\r\n                \r\n                </>\r\n            )\r\n        })\r\n    }\r\n        \r\n        </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\editPlan.js",["532","533","534"],"import React , {useContext,useEffect,useState}from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { Box, Flex ,HStack, VStack} from \"@chakra-ui/layout\"\r\nimport { Button,Text,Badge ,Divider,useToast} from \"@chakra-ui/react\"\r\nimport {IoLocationSharp} from \"react-icons/io5\"\r\nimport {MdDriveEta} from \"react-icons/md\"\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport { PlaceCard } from \"../../components/TravelPlanApp/placeCard\"\r\nimport { AiFillDelete , AiOutlineCheck} from \"react-icons/ai\";\r\nimport { FaExchangeAlt } from \"react-icons/fa\";\r\nimport { DeletePOI , DeleteDay,AddDay} from \"../../services/EditPlanServices\"\r\nimport { IoMdCloseCircleOutline } from \"react-icons/io\";\r\n\r\n\r\nexport const EditPlan=()=>{\r\n    const toast=useToast()\r\n    const history=useHistory()\r\n    const {state, dispatch}=useContext(TravelContext)\r\n    const [plan,setPlan]=useState([[], []])\r\n    useEffect( ()=>{ \r\n\r\n  \r\n            setPlan(state.travelPlan)\r\n            \r\n       \r\n        //  console.log(r[0][0][0].photos[0].photo_reference)\r\n        // \"wet\",[],\"2\",\"buddhsism\",[],[\"ancient\", \"natural\", \"parks\"]\r\n        // state.userPreferences.climate,state.userPreferences.provinces,state.userPreferences.days,state.userPreferences.religion,state.userPreferences.thingsLike,state.userPreferences.placesLike\r\n    } ,[state] )\r\n\r\n\r\n    const deletePOI=(index,index1)=>{\r\n        DeletePOI(index,index1,plan).then((res)=>{\r\n            console.log(res)\r\n            dispatch({type:\"set_travelPlan\" , payload:{travelPlan:res}})\r\n            setPlan(res)\r\n        })\r\n    }\r\n\r\n    const deleteDay=(day)=>{\r\n            DeleteDay(day,plan).then((res)=>{\r\n                console.log(res)\r\n                dispatch({type:\"set_travelPlan\" , payload:{travelPlan:res}})\r\n                setPlan(res)\r\n            })\r\n    }\r\n    const AddADay=()=>{\r\n        AddDay(plan).then((res)=>{\r\n            console.log(res)\r\n            dispatch({type:\"set_travelPlan\" , payload:{travelPlan:res}})\r\n            setPlan(res)\r\n        })\r\n    }\r\n    var i=0;\r\n    var accomodation=\"\"\r\n    return(\r\n        <>\r\n       \r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n\r\n            <HStack> \r\n                   <IoLocationSharp/> <Badge size=\"15\">9.00 a.m</Badge> <Text fontSize=\"3xl\">Start from colombo</Text>                  \r\n            </HStack>\r\n         \r\n\r\n            <>\r\n                    { (plan[0]) &&\r\n                    plan[0].map((Item=[], index)=>{\r\n                    \r\n                        return (\r\n                        <>\r\n                        {\r\n                            index==0 ? <>\r\n                            \r\n                              <Box color=\"white\" backgroundColor=\"black\" padding={3} >Day {index+1}</Box>\r\n                            </>:\r\n                            <HStack>\r\n\r\n                            <Box color=\"white\" backgroundColor=\"black\" padding={3} >Day {index+1}</Box>\r\n                                    <Button colorScheme=\"red\" variant=\"outline\" onClick={()=>{\r\n                                            deleteDay(index+1)\r\n                                    }}>\r\n                                    <IoMdCloseCircleOutline />\r\n                                    </Button>\r\n                            </HStack> \r\n                        } \r\n                           \r\n                        {\r\n                            Item.map( (subItem, index1,)=>{\r\n                                i=i+1\r\n                                accomodation=subItem.geometry.location\r\n                                return(\r\n                                <> \r\n                                 <HStack>\r\n                                        <VStack>\r\n                                            <Button leftIcon={<AiFillDelete />} colorScheme=\"teal\" variant=\"solid\" onClick={()=>{\r\n                                                    deletePOI(index,index1)\r\n                                            }}>\r\n                                                Delete\r\n                                            </Button>\r\n\r\n                                            <Button leftIcon={<FaExchangeAlt />} colorScheme=\"teal\" variant=\"solid\" onClick={()=>{\r\n                                                    history.push(`/travelPlan/switchpois/${index}/${index1}`)\r\n                                            }}>\r\n                                            change\r\n                                            </Button>\r\n\r\n                                        </VStack>\r\n                                        <Card name={subItem.name} photo={subItem.photos[0].photo_reference} address={subItem.formatted_address} rating={subItem.rating} index={i} distance={plan[1][i-1].distance.text} duration={plan[1][i-1].duration.text}  place_id={subItem.place_id}/>\r\n                         \r\n                                </HStack>\r\n                                </>\r\n                                )\r\n                            })\r\n                        }   \r\n                            \r\n                            <Button colorScheme=\"red\" variant=\"outline\" m={15} width=\"50%\" onClick={()=>{\r\n                                            if(index!=0){\r\n                                                if(plan[0][index-1].length==0){\r\n                                                    toast({\r\n                                                        title:\"add places to previous days first\",\r\n                                                        duration:4000,\r\n                                                        status:\"error\",\r\n                                                        isClosable:true\r\n                                                    })\r\n                                                    return \r\n                                                }\r\n                                            }\r\n                                            history.push('/travelPlan/addMorePlaces/'+(index+1))\r\n                                        }}>\r\n                                Add more places\r\n                           </Button>\r\n\r\n\r\n\r\n\r\n                           <Button colorScheme=\"teal\" variant=\"solid\" m={15} width=\"50%\" onClick={()=>{\r\n                                            dispatch({type:\"accomodation_location\", payload:{\r\n                                                accomodation_location:accomodation\r\n                                            }})\r\n                                            history.push('/travelPlan/nearbyhotels')\r\n                                        }}>\r\n                                Find Accomodations\r\n                           </Button>\r\n                           <Divider orientation=\"horizontal\" mb={2} />\r\n                        </>\r\n                        \r\n                        \r\n                    )\r\n                    })}             \r\n             </>\r\n            \r\n             <Button colorScheme=\"blackAlpha\" variant=\"solid\" m={15} width=\"50%\" onClick={()=>{\r\n                                                        AddADay();\r\n                                        }}>\r\n\r\n                            Add A Day\r\n            </Button>\r\n            \r\n\r\n            <HStack> \r\n                   <IoLocationSharp/> <Badge size=\"15\">6.00 p.m</Badge> <Text fontSize=\"3xl\">End - {plan[1].length ? plan[1][plan[1].length-1].end_address : \"\"}</Text>                  \r\n            </HStack>\r\n\r\n\r\n        <VStack position=\"fixed\" bottom=\"0\" right=\"0\" p={3} >\r\n        <Button colorScheme=\"teal\" size=\"lg\" borderRadius=\"50%\" onClick={()=>{\r\n            history.push(\"/travelPlan/travelPlan\")\r\n        }}>\r\n            <AiOutlineCheck/>\r\n        </Button>\r\n\r\n        </VStack>\r\n\r\n\r\n\r\n        </Flex>\r\n\r\n\r\n\r\n\r\n\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\nconst Card=({distance,duration,photo,index,name,address, types=[], rating, place_id})=>{\r\n\r\n\r\n    return(\r\n        <Flex flexDirection=\"column\" alignItems=\"center\" padding=\"10px\">\r\n                        <HStack  h=\"100px\" p={4}>\r\n                            <Divider orientation=\"vertical\"   variant=\"dashed\" />\r\n                            <VStack>\r\n                                <HStack>< MdDriveEta /> <Text fontSize=\"2xl\">{distance} </Text> </HStack>\r\n                                <Badge size=\"15\">{duration}</Badge>\r\n                            </VStack>\r\n\r\n                        </HStack>\r\n                        \r\n                       \r\n                        <PlaceCard  photo={photo} index={index} name={name} address={address} types={types} rating={rating} place_id={place_id}/>\r\n                       \r\n                        \r\n\r\n\r\n            </Flex>\r\n    )\r\n}\r\n\r\n\r\n  ","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\contact.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\about.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\TopRatedPlans.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\signUp.js",["535","536","537","538","539","540"],"import { Flex,Heading, VStack ,Text} from \"@chakra-ui/layout\"\r\nimport { Input, InputGroup, InputLeftAddon ,Button, Checkbox,Select,useToast } from \"@chakra-ui/react\"\r\nimport { BiUserCircle } from \"react-icons/bi\";\r\nimport { RiLockPasswordLine } from \"react-icons/ri\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport {useState,useContext,useEffect} from \"react\"\r\nimport { useHistory } from \"react-router\";\r\nimport { TravelContext } from \"../../context/TravelContext\";\r\n\r\n\r\nexport const SignUp=()=>{\r\n    const {state, dispatch}=useContext(TravelContext)\r\n    const history=useHistory()\r\n\r\n\r\n    useEffect(()=>{\r\n      \r\n        if(state._id){\r\n            history.push('/travelPlan')\r\n        }else{\r\n               history.push('/travelPlan/signup')\r\n        }\r\n      },[])\r\n\r\n\r\n    const toast=useToast()\r\n\r\n\r\n    const [first_name,setFirst_name]=useState(\"\")\r\n    const [last_name,setLast_name]=useState(\"\")\r\n    const [dob,setDOB]=useState(\"\")\r\n    const [religion,setReligion]=useState(\"\")\r\n    const [country,setCountry]=useState(\"\")\r\n    const [email,setEmail]=useState(\"\")\r\n    const [password,setPassword]=useState('')\r\n\r\n\r\n    const signUp=()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            toast({\r\n                title: \"Enter valid email\",\r\n                position:\"top-right\",\r\n                status:\"error\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n              })\r\n            return\r\n        }\r\n            fetch(\"/signup\",{\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                                    firstname:first_name,\r\n                                    lastname:last_name,\r\n                                    dob:dob,\r\n                                    country:country,\r\n                                    religion:religion,\r\n                                    email:email,\r\n                                    password:password,\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                console.log(data)\r\n                if(data.error){\r\n\r\n                    toast({\r\n                        title: data.error,\r\n                        position:\"top-right\",\r\n                        status:\"error\",\r\n                        duration: 9000,\r\n                        isClosable: true,\r\n                      })\r\n                }\r\n                else{\r\n\r\n                    toast({\r\n                        title: data.message,\r\n                        position:\"top-right\",\r\n                        status:\"success\",\r\n                        duration: 9000,\r\n                        isClosable: true,\r\n                      })\r\n                 \r\n                    history.push('/travelPlan/signin')\r\n                }\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        \r\n        <Flex  flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\" backgroundSize=\"cover\" backgroundPosition=\"center\" backgroundImage=\"url('https://images.unsplash.com/photo-1578519050142-afb511e518de?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1374&q=80')\">\r\n           \r\n           <Flex m={3} p={10} borderColor=\"white\" borderWidth={3}  borderRadius={8} width=\"md\" justifyContent=\"center\" alignItems=\"center\" boxShadow=\"dark-lg\" color=\"white\">\r\n            <VStack spacing={10} w=\"md\" color=\"white\">\r\n                <Heading as=\"h2\" size=\"xl\" color=\"white\">\r\n                   SignUp\r\n                </Heading>\r\n\r\n                <InputGroup >\r\n                    <BiUserCircle  />\r\n                    <Input type=\"text\" placeholder=\"first name\"  value={first_name} onChange={(e)=>setFirst_name(e.target.value)} />\r\n                </InputGroup>\r\n\r\n                <InputGroup >\r\n                    <BiUserCircle  />\r\n                    <Input type=\"text\" placeholder=\"last name\" value={last_name} onChange={(e)=>setLast_name(e.target.value)} />\r\n                </InputGroup>\r\n\r\n                <InputGroup >\r\n                    <BiUserCircle  />\r\n                    <Input type=\"date\" placeholder=\"Date of birth\" value={dob} onChange={(e)=>setDOB(e.target.value)} />\r\n                </InputGroup>\r\n\r\n                <InputGroup >\r\n                    <BiUserCircle  />\r\n                    <Select placeholder=\"religion\" color=\"black\" value={religion} onChange={(e)=>setReligion(e.target.value)} >\r\n                        <option value=\"Buddhism\">Buddhism</option>\r\n                        <option value=\"Hindu\">Hindu</option>\r\n                        <option value=\"Islam\">Islam</option>\r\n                        <option value=\"Catholic\">Catholic</option>\r\n                        <option value=\"\">None</option>\r\n                    </Select>\r\n                </InputGroup>\r\n\r\n                <InputGroup >\r\n                    <RiLockPasswordLine/>\r\n                    <Input placeholder=\"email\" type=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)} />\r\n                </InputGroup>\r\n\r\n                <InputGroup >\r\n                    <RiLockPasswordLine/>\r\n                    <Autocomplete style={{width:\"100%\" ,height:\"45px\", padding:\"10px\", margin:\"15px\",background:\"transparent\", borderRadius:\"5px\", color:\"white\", borderColor:\"white\", borderWidth:\"2px\"}}\r\n                         apiKey={\"AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY\"}\r\n                            onPlaceSelected={(place) => {\r\n                                    setCountry(place.name)\r\n                            }}\r\n\r\n                            options={{\r\n                                types: [],\r\n                                fields:[\"ALL\"]\r\n                               \r\n                            }}\r\n                            defaultValue={country}\r\n                     />\r\n                </InputGroup>\r\n\r\n                <InputGroup >\r\n                    <RiLockPasswordLine/>\r\n                    <Input placeholder=\"password\" type=\"password\" value={password} onChange={(e)=>{setPassword(e.target.value)}} />\r\n                </InputGroup>\r\n\r\n                \r\n\r\n\r\n                <Button colorScheme=\"blue\" onClick={()=>signUp()}>Sign Up</Button>\r\n                <Text >you already have an account?<Link to=\"/travelPlan/signin\" >SignIn</Link></Text>\r\n                \r\n            </VStack>\r\n            \r\n            </Flex>\r\n        </Flex>\r\n        \r\n        </>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\myAccount.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\PlanReview.js",["541","542","543","544","545","546","547"],"import { Flex, Heading, HStack, VStack } from \"@chakra-ui/layout\"\r\nimport { AiOutlineStar } from \"react-icons/ai\";\r\nimport { StarIcon } from \"@chakra-ui/icons\";\r\nimport { useState,useContext,useEffect,useRef } from \"react\";\r\nimport { Input,Textarea,Button, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay, } from \"@chakra-ui/react\"\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport { FaRegShareSquare } from \"react-icons/fa\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\n\r\nexport const PlanReview=()=>{\r\n    const [rate,setRate]=useState(0)\r\n    const [edit,setEdit]=useState(false)\r\n    const [review, setReview]=useState(\"\")\r\n    const {state, dispatch}=useContext(TravelContext)\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const cancelRef = useRef()\r\n    const toast=useToast()\r\n\r\n    useEffect(() => {\r\n        fetch('/user/getReview',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                planId:state.planId\r\n            })   \r\n            }).then(res=>res.json()).\r\n            then(result=>{\r\n\r\n              if(result.data.review || result.data.rate){\r\n                setRate(result.data.rate)\r\n                setReview(result.data.review)\r\n                setEdit(false)\r\n                return\r\n              }\r\n              setEdit(true)\r\n               \r\n            })\r\n            .catch((e)=>{\r\n                console.log(e)\r\n            })\r\n    }, [])\r\n\r\n    const submitReview=()=>{\r\n        fetch('/user/addReview',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                rate:rate,\r\n                review:review,\r\n                planId:state.planId\r\n                })\r\n            }).then(res=>res.json()).\r\n            then(result=>{\r\n              if(result.data.review || result.data.rate){\r\n                setRate(result.data.rate)\r\n                setReview(result.data.review)\r\n                setEdit(false)\r\n              }\r\n               \r\n            })\r\n            .catch((e)=>{\r\n                console.log(e)\r\n            })\r\n        \r\n     }\r\n     const sharePlan=()=>{\r\n        fetch('/user/sharePlan',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                planId:state.planId\r\n                })\r\n            }).then(res=>res.json()).\r\n            then(result=>{\r\n                setIsOpen(false)\r\n               if(result.result){\r\n                    toast({\r\n                        description: \"your plan is shared, thank you\",\r\n                        status: \"success\",\r\n                        duration: 2000,\r\n                        isClosable: true,\r\n                    })\r\n               }\r\n               else{\r\n                    toast({\r\n                        description: \"you can't share this\",\r\n                        status: \"success\",\r\n                        duration: 2000,\r\n                        isClosable: true,\r\n                    })\r\n               }\r\n              \r\n               \r\n            })\r\n            .catch((e)=>{\r\n                console.log(e)\r\n            })\r\n     }\r\n\r\n    return(\r\n\r\n        <>\r\n\r\n\r\n                <AlertDialog\r\n                isOpen={isOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n            >\r\n                <AlertDialogOverlay>\r\n                <AlertDialogContent>\r\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                    Share your Travel Plan with us\r\n                    </AlertDialogHeader>\r\n\r\n                    <AlertDialogBody>\r\n                    Are you sure? You can't undo this action afterwards.\r\n                    </AlertDialogBody>\r\n\r\n                    <AlertDialogFooter>\r\n                    <Button ref={cancelRef} onClick={onClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button colorScheme=\"red\" onClick={()=>{\r\n                        sharePlan()\r\n                    }} ml={3}>\r\n                        share\r\n                    </Button>\r\n                    </AlertDialogFooter>\r\n                </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n            </AlertDialog>\r\n        \r\n            s\r\n        \r\n        <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" p={10}>\r\n             <HStack spacing={5}>\r\n                <Flex minWidth=\"md\" boxShadow=\"dark-lg\" borderRadius=\"lg\" flexDirection=\"column\" p={5} alignItems=\"center\">\r\n                    <VStack  minWidth=\"md\">\r\n                    <Heading size=\"xl\" p={5}>\r\n                        How do you feel about your travel plan????\r\n                    </Heading>\r\n                    <HStack p={4}>\r\n                    <StarIcon color={rate>=1 ? \"teal\" : \"gray.200\"} onClick={()=>{\r\n                        if(edit){\r\n                            setRate(1)\r\n                        }\r\n                        \r\n                    }}  />\r\n                    <StarIcon color={rate>=2 ? \"teal\" : \"gray.200\"} onClick={()=>{\r\n                        if(edit){\r\n                            setRate(2)\r\n                        }\r\n                    }} />\r\n                    <StarIcon color={rate>=3 ? \"teal\" : \"gray.200\"} onClick={()=>{\r\n                        if(edit){\r\n                            setRate(3)\r\n                        }\r\n                    }} />\r\n                    <StarIcon color={rate>=4 ? \"teal\" : \"gray.200\"} onClick={()=>{\r\n                        if(edit){\r\n                            setRate(4)\r\n                        }\r\n                    }} />\r\n                    <StarIcon color={rate>=5 ? \"teal\" : \"gray.200\"} onClick={()=>{\r\n                        if(edit){\r\n                            setRate(5)\r\n                        }\r\n                    }} />\r\n                    </HStack>\r\n\r\n                    <Textarea value={review}\r\n                            onChange={(e)=>setReview(e.target.value)}\r\n                        placeholder=\"Describe your expereince\"\r\n                        size=\"lg\"\r\n                        isDisabled={!edit}\r\n                    />\r\n\r\n                    {edit ? <Button colorScheme=\"blue\" onClick={()=>{\r\n                            submitReview()\r\n                    }}>submit</Button> : \r\n                                <Button colorScheme=\"blue\" onClick={()=>{\r\n                                    setEdit(true)\r\n                            }}>Edit</Button>\r\n                    \r\n                    }\r\n                    </VStack>\r\n                </Flex>\r\n                {\r\n                    rate ? <FaRegShareSquare  onClick={()=>{\r\n                        setIsOpen(true)\r\n                }}/> : <></>\r\n                }\r\n                </HStack>\r\n        </Flex>\r\n        \r\n        </>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\customPlan.js",["548","549","550","551","552","553","554"],"import { Flex,VStack,HStack,Text,} from '@chakra-ui/layout';\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\r\nimport {useState,useEffect,useContext,useRef} from \"react\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport { useHistory } from \"react-router\"\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport { Button, Heading,Image,AlertDialog,AlertDialogBody,AlertDialogFooter,AlertDialogHeader,AlertDialogContent,AlertDialogOverlay} from \"@chakra-ui/react\"\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\nimport { calculateAndDisplayRoute } from '../../services/TravelPlanService';\r\n\r\nexport const CustomPlanInner=()=>{\r\n  const history=useHistory()\r\n  const {state, dispatch}=useContext(TravelContext)\r\n\r\n  const [p,setP]=useState([])\r\n \r\n \r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const onClose = () => setIsOpen(false)\r\n  const cancelRef = useRef()\r\n  \r\n\r\n    \r\n    \r\n    return(\r\n        <>\r\n      <AlertDialog\r\n                isOpen={isOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n              >\r\n                <AlertDialogOverlay>\r\n                  <AlertDialogContent>\r\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                      Places error\r\n                    </AlertDialogHeader>\r\n        \r\n                    <AlertDialogBody>\r\n                      you can't add more than 24 places to your plan\r\n                    </AlertDialogBody>\r\n        \r\n                    <AlertDialogFooter>\r\n                      <Button ref={cancelRef} onClick={onClose}>\r\n                        Cancel\r\n                      </Button>\r\n                    </AlertDialogFooter>\r\n                  </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n              </AlertDialog>\r\n\r\n\r\n\r\n       <Flex width=\"100%\" alignItems=\"center\" flexDirection=\"column\" justifyContent=\"center\">\r\n                  \r\n        <Autocomplete style={{width:\"40%\" ,height:\"30px\", padding:\"5px\", margin:\"15px\",background:\"grey\", borderRadius:\"5px\", color:\"white\"}}\r\n        apiKey={\"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\"}\r\n\r\n        onPlaceSelected={(place) => {\r\n          if(place.length>24){\r\n              setIsOpen(true)\r\n          }\r\n\r\n\r\n\r\n          if(place.geometry.location){\r\n            // console.log(place.photos[0].getUrl())\r\n            setP(p=>[...p,place])\r\n          }\r\n          \r\n\r\n\r\n        }}\r\n\r\n        options={{\r\n            types: ['geocode' , 'establishment'],\r\n            componentRestrictions: { country: \"LK\" },\r\n            fields:[\"ALL\"]\r\n        }}\r\n        >\r\n        </Autocomplete>\r\n\r\n           \r\n      </Flex>\r\n      <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n     \r\n        {p.map((i,index)=>{\r\n          \r\n          return(\r\n            <>\r\n            \r\n            <HStack p={3}>\r\n            <Heading as=\"h5\" size=\"md\">\r\n                {index+1}\r\n                {\".  \"}\r\n                {i.name}\r\n            </Heading>\r\n\r\n            <Button onClick={()=>{\r\n                  console.log(index)\r\n                  setP(p.filter((item,index1)=>{\r\n                       if(index1 !==index)  return item\r\n                  }))\r\n                 }}>\r\n                 <MdDeleteForever />\r\n            </Button>\r\n            </HStack>\r\n            </>\r\n          )\r\n         \r\n        })}\r\n\r\n\r\n            <GoogleMap\r\n                    defaultZoom={7}\r\n                    defaultCenter={{ lat: 7.291418, lng:80.636696}}\r\n                  >\r\n            \r\n                    {p && p.map((item=[],index)=>{\r\n                        return(\r\n                            <>\r\n                               \r\n                                        <>\r\n                                        <Marker position={item.geometry.location} label={`${index+1}`} />\r\n                                        \r\n                                        </>\r\n                            </>\r\n                        )\r\n                    })\r\n\r\n                    }     \r\n    \r\n            </GoogleMap>\r\n\r\n\r\n\r\n\r\n        {\r\n          p.length ?\r\n\r\n          <Button colorScheme=\"teal\" variant=\"outline\" onClick={\r\n           ()=>{\r\n            calculateAndDisplayRoute(p).then(r=>{\r\n             \r\n              dispatch({type:\"set_travelPlan\" , payload:{travelPlan:r[0]}})\r\n              dispatch({type:\"set_pois\" , payload:{allpois:r[1]}})\r\n              history.push(\"/travelPlan/travelPlan\")\r\n\r\n            })\r\n           }\r\n          }>\r\n          submit\r\n        </Button> :\r\n        <></>\r\n\r\n        }\r\n        </Flex>\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nconst MapWrapped = withScriptjs(withGoogleMap(CustomPlanInner));\r\n\r\nexport const CustomPlan=()=>{\r\n  return(\r\n    <Flex width=\"80%\" height=\"180vh\" flexDirection=\"column\" mx=\"auto\" my=\"2\" boxShadow=\"dark-lg\">\r\n        <MapWrapped\r\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA`}\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `100%` }} />}\r\n          mapElement={<div style={{ height: `40%` }} />}\r\n        />\r\n        </Flex>    \r\n  )\r\n}\r\n\r\n\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\provinces.js",["555"],"import {\r\n    Table,\r\n    Thead,\r\n    Tbody,\r\n    Tfoot,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableCaption,\r\n    Flex,\r\n    Heading,\r\n    Button\r\n  } from \"@chakra-ui/react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { ViewIcon } from \"@chakra-ui/icons\"\r\nexport const Provinces=()=>{\r\n    return(\r\n        <>\r\n                <Flex  m={6} backgroundColor=\"white\" boxShadow=\"xl\" flexDirection=\"column\" alignItems=\"center\">\r\n                <Heading fontStyle=\"oblique\" mb={4}>Sri Lanka's Provonces</Heading>\r\n\r\n                        <Table variant=\"simple\" p={[10,null,10,null]}>\r\n                        <TableCaption>Imperial to metric conversion factors</TableCaption>\r\n                        <Thead>\r\n                            <Tr>\r\n                            <Th></Th>\r\n                            <Th>Name</Th>\r\n                            <Th isNumeric>View</Th>\r\n                            </Tr>\r\n                        </Thead>\r\n                        <Tbody>\r\n                                <TableRow index=\"1\" name=\"Northern Province\" province_id=\"p1\"/>\r\n                                <TableRow index=\"2\" name=\"North Western Province\" province_id=\"p2\"/>\r\n                                <TableRow index=\"3\" name=\"Western Province\" province_id=\"p3\"/>\r\n                                <TableRow index=\"4\" name=\"North Central Province\" province_id=\"p4\"/>\r\n                                <TableRow index=\"5\" name=\"Central Province\" province_id=\"p5\"/>\r\n                                <TableRow index=\"6\" name=\"Sabaragamuwa Province\" province_id=\"p6\"/>\r\n                                <TableRow index=\"7\" name=\"Eastern Province\" province_id=\"p7\"/>\r\n                                <TableRow index=\"8\" name=\"Uva Province\" province_id=\"p8\"/>\r\n                                <TableRow index=\"9\" name=\"Southern Province\" province_id=\"p9\"/>\r\n\r\n                        </Tbody>\r\n                        \r\n                        </Table>\r\n                </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nconst TableRow=({index, name, province_id})=>{\r\n    return(\r\n        <Tr>\r\n        <Td>{index}</Td>\r\n        <Td>{name}</Td>\r\n        <Td isNumeric><Button colorScheme=\"teal\" size=\"xs\"><Link to={`/travelPlan/province/${province_id}`}><ViewIcon /></Link></Button></Td>\r\n      </Tr>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\signIn.js",["556","557","558","559","560"],"import { Flex,Heading, VStack ,Text} from \"@chakra-ui/layout\"\r\nimport { Input, InputGroup, InputLeftAddon ,Button, Checkbox,useToast} from \"@chakra-ui/react\"\r\nimport { useState ,useContext,useEffect } from \"react\";\r\nimport { BiUserCircle } from \"react-icons/bi\";\r\nimport { RiLockPasswordLine } from \"react-icons/ri\";\r\nimport { Link, } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\nimport { TravelContext } from \"../../context/TravelContext\";\r\n\r\nexport const SignIn=()=>{\r\n  \r\n    \r\n    const {state, dispatch}=useContext(TravelContext)\r\n    const history=useHistory()\r\n    const toast=useToast()\r\n    const [email, setEmail]=useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n\r\n\r\n    useEffect(()=>{\r\n      \r\n        if(state && state._id){\r\n            \r\n            history.push('/travelPlan')\r\n        }else{\r\n               history.push('/travelPlan/signin')\r\n        }\r\n      },[])\r\n\r\n\r\n\r\n    const sign=()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            toast({\r\n                title: \"Enter valid email\",\r\n                position:\"top-right\",\r\n                status:\"error\",\r\n                duration: 4000,\r\n                isClosable: true,\r\n              })\r\n            return\r\n        }\r\n            fetch(\"/signin\",{\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    password,\r\n                    email\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                console.log(data)\r\n                if(data.error){\r\n\r\n                    toast({\r\n                        title: data.error,\r\n                        position:\"top-right\",\r\n                        status:\"error\",\r\n                        duration: 4000,\r\n                        isClosable: true,\r\n                      })\r\n                }\r\n                else{\r\n\r\n                    toast({\r\n                        title: data.message,\r\n                        position:\"top-right\",\r\n                        status:\"success\",\r\n                        duration: 4000,\r\n                        isClosable: true,\r\n                      })\r\n                    localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                    dispatch({type:\"USER\",payload:data.user})\r\n                    history.push('/travelPlan')\r\n                }\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n    return(\r\n        <>\r\n        \r\n        <Flex  flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\" backgroundSize=\"cover\" backgroundPosition=\"center\" backgroundImage=\"url('https://images.unsplash.com/photo-1578519050142-afb511e518de?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1374&q=80')\">\r\n           \r\n           <Flex p={10} borderColor=\"white\" borderWidth={3}  borderRadius={8} width=\"md\" justifyContent=\"center\" alignItems=\"center\" boxShadow=\"dark-lg\" color=\"white\">\r\n            <VStack spacing={10} w=\"md\" color=\"white\">\r\n                <Heading as=\"h2\" size=\"xl\" color=\"white\">\r\n                   SignIn\r\n                </Heading>\r\n\r\n                <InputGroup >\r\n                    <BiUserCircle  />\r\n                    <Input type=\"email\" placeholder=\"email\"  value={email}   onChange={(e)=>setEmail(e.target.value)}  />\r\n                </InputGroup>\r\n\r\n                {/* If you add the size prop to `InputGroup`, it'll pass it to all its children. */}\r\n                <InputGroup >\r\n                    <RiLockPasswordLine/>\r\n                    <Input placeholder=\"password\" type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n                </InputGroup>\r\n\r\n                {/* <Checkbox defaultIsChecked>Remember me</Checkbox> */}\r\n\r\n                <Button colorScheme=\"blue\" onClick={()=>sign()}>Sign In</Button>\r\n                <Text >you don't have an account?<Link to=\"/travelPlan/signup\" >SignUp</Link></Text>\r\n                \r\n            </VStack>\r\n            \r\n            </Flex>\r\n        </Flex>\r\n        \r\n        </>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\switchPois.js",["561","562"],"import { useContext, useState, useEffect } from \"react\"\r\nimport { switchPOI, addPoiToPlan1 } from \"../../services/EditPlanServices\"\r\nimport { useParams } from 'react-router'\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport { PlaceCard } from \"../../components/TravelPlanApp/placeCard\"\r\nimport { Flex, HStack ,VStack} from \"@chakra-ui/layout\"\r\nimport { GrAddCircle } from \"react-icons/gr\";\r\nimport { Button } from \"@chakra-ui/button\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nexport const SwitchPois=()=>{\r\n    const {index,index1}=useParams()\r\n    const history=useHistory()\r\n    \r\n    const [pois,setPois]=useState([])\r\n    const [route,setRoute]=useState([])\r\n    const {state, dispatch}=useContext(TravelContext)\r\n    useEffect(() => {\r\n        \r\n        switchPOI(parseInt(index), parseInt(index1), state.travelPlan, state.allpois).then((res)=>{\r\n            // console.log(res)\r\n            setPois(res[0])\r\n            setRoute(res[1])\r\n        })\r\n    }, [state])\r\n\r\n\r\n    const addPoi=(poi, route)=>{\r\n            addPoiToPlan1(index,index1,poi, route,state.travelPlan).then((res)=>{\r\n                // console.log(res)\r\n                dispatch({type:\"set_travelPlan\" , payload:{travelPlan:res}})\r\n            });\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n        \r\n        { \r\n         pois.map((Item, index)=>{\r\n            return(\r\n                <>\r\n                <HStack m={3}>\r\n\r\n                <Button colorScheme=\"black\" variant=\"outline\" onClick={()=>{\r\n                                addPoi(Item, route[index]);\r\n                                history.push(\"/travelPlan/editPlan\")\r\n\r\n                 }}>\r\n                     <GrAddCircle />           \r\n                </Button>\r\n\r\n\r\n\r\n                <PlaceCard  index={index+1} name={Item.name} address={Item.vicinity} photo={Item.photos ? Item.photos[0].photo_reference : \"\" } rating={Item.rating} place_id={Item.place_id}/>\r\n                </HStack>\r\n                </>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n        \r\n        \r\n        </Flex>\r\n        </>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\province.js",["563","564","565","566","567"],"import React, { useState, useEffect } from 'react'\r\nimport { Heading,Center, Flex, Text  } from '@chakra-ui/layout'\r\nimport { useParams } from 'react-router'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\n\r\nexport const Province = (props) => {\r\n  const {pid}=useParams()\r\n  const [ima,setIma]=useState([])\r\n  const [name, setName]=useState(\"\")\r\n  const [description, setDescription]=useState(\"\")\r\n  useEffect(()=>{\r\n    \r\n     fetch(\"/admin/getProvinceData/\"+pid).\r\n     then(res=>res.json())\r\n     .then(data=>{\r\n        console.log(data)\r\n        setIma(data.images)\r\n        setName(data.name)\r\n        setDescription(data.description)\r\n        console.log(ima)\r\n       \r\n     }).catch(err=>{\r\n         console.log(err)\r\n     })\r\n  \r\n  },[])\r\n          \r\n  return (  \r\n     <Flex flexDirection=\"column\" boxShadow=\"2xl\" bg=\"white\" my={10} p={4} borderRadius=\"2px\" borderColor=\"grey\" width=\"70%\" mx=\"auto\">\r\n     <Center><Heading mb={4}>{name}</Heading></Center>\r\n     <img src={ima? ima[0]: \"\"} />\r\n     <Text fontSize=\"md\" p={4}>{description}</Text>\r\n     </Flex> \r\n  )\r\n}\r\n\r\nconst Carousal1=({photos=[]})=>{\r\n    const [references, setReferences]=useState([])\r\n    useEffect(()=>{\r\n            setReferences(photos)\r\n    }, [photos])\r\n    return(\r\n        <Carousel>\r\n                \r\n                {\r\n                    references.map((reference)=>{\r\n                        return(\r\n                            <div >\r\n                            <img src={reference} />\r\n                             </div>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </Carousel>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\screens\\TravelPlanApp\\Myplans.js",["568","569","570","571"],"import { useState, useRef, useEffect } from \"react\";\r\nimport { Flex, HStack, VStack } from \"@chakra-ui/layout\"\r\nimport { Button, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay,} from \"@chakra-ui/react\"\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { useHistory } from \"react-router\"\r\nimport { PlanCard } from \"../../components/TravelPlanApp/planCard,\";\r\n\r\nexport const MyPlans=()=>{\r\n    const [plans,setPlans]=useState([])\r\n    const history=useHistory()\r\n    const [pid,setPID]=useState(\"\")\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const cancelRef = useRef()\r\n    \r\n   \r\n\r\n    useEffect(()=>{\r\n\r\n        fetch('/user/getTravelPlans').then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n            setPlans(data.myPlans)\r\n        })\r\n\r\n     },[])\r\n\r\n     const deleteAleart=(planId)=>{\r\n            console.log(planId)\r\n            setIsOpen(true)\r\n            setPID(planId)\r\n     }\r\n     const deletePlan=()=>{\r\n        fetch('/user/deleteTravelPlan',{\r\n            method:\"delete\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                planId:pid})\r\n            }).then(res=>res.json()).\r\n            then(result=>{\r\n                if(result.data){\r\n                    setIsOpen(false)\r\n                    const newPlans=plans.filter(plan=>{\r\n                        return plan._id !=result.data._id                            \r\n                    })\r\n                    setPlans(newPlans)\r\n                }\r\n                \r\n                console.log(result)\r\n            })\r\n            .catch((e)=>{\r\n                console.log(e)\r\n            })\r\n        \r\n     }\r\n\r\n    return(\r\n        <>\r\n         <AlertDialog\r\n                isOpen={isOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n            >\r\n                <AlertDialogOverlay>\r\n                <AlertDialogContent>\r\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                    Delete Travel Plan\r\n                    </AlertDialogHeader>\r\n\r\n                    <AlertDialogBody>\r\n                    Are you sure? You can't undo this action afterwards.\r\n                    </AlertDialogBody>\r\n\r\n                    <AlertDialogFooter>\r\n                    <Button ref={cancelRef} onClick={onClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button colorScheme=\"red\" onClick={()=>{\r\n                        deletePlan();\r\n                    }} ml={3}>\r\n                        Delete\r\n                    </Button>\r\n                    </AlertDialogFooter>\r\n                </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n            </AlertDialog>\r\n        \r\n            <>\r\n            \r\n            {plans && plans.map((plan,index)=>{\r\n                    return(\r\n                        <>\r\n                         <Flex flexDirection=\"column\" alignItems=\"center\" p={3}>\r\n                            <HStack>\r\n\r\n                            <Button colorScheme=\"red\" onClick={()=>{\r\n                                deleteAleart(plan._id)\r\n                                \r\n                            }}><AiOutlineDelete /></Button>\r\n                        \r\n                            <PlanCard _id={plan._id} name={plan.name ? plan.name : `My plan ${index+1}`} days={plan.travelPlan[0].length} createdDate={plan.createdAt} travelPlan={plan.travelPlan} />\r\n\r\n                            </HStack>\r\n                         </Flex>\r\n                        </>\r\n                    )\r\n            })}\r\n            \r\n            \r\n            </>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\description.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\Widget.js",["572","573","574","575","576","577","578","579","580","581","582"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CCol,\r\n  CLink,\r\n  CRow,\r\n  CWidgetStatsB,\r\n  CWidgetStatsC,\r\n  CWidgetStatsE,\r\n  CWidgetStatsF,CWidgetStatsD\r\n} from '@coreui/react'\r\n\r\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs';\r\n\r\n\r\nexport default function Widgets() {\r\n    return (\r\n        <div>\r\n            <CRow>\r\n  <CCol xs={6}>\r\n    <CWidgetStatsB\r\n      className=\"mb-3\"\r\n      progress={{ color: 'success', value: 75 }}\r\n      text=\"Widget helper text\"\r\n      title=\"Percentage of Admin online\"\r\n      value=\"89.9%\"\r\n    />\r\n  </CCol>\r\n  <CCol xs={6}>\r\n    <CWidgetStatsB\r\n      className=\"mb-3\"\r\n      color=\"primary\"\r\n      inverse\r\n      progress={{ value: 75 }}\r\n      text=\"Widget helper text\"\r\n      title=\"Widget title\"\r\n      value=\"89.9%\"\r\n    />\r\n  </CCol>\r\n</CRow>\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\n ","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\galary.js",["583","584"],"import React, { useState, useRef,useEffect } from 'react'\r\nimport 'photoswipe/dist/photoswipe.css'\r\nimport 'photoswipe/dist/default-skin/default-skin.css'\r\nimport M from 'materialize-css'\r\nimport PhotoswipeUIDefault from 'photoswipe/dist/photoswipe-ui-default'\r\nimport { CustomGallery, Item, DefaultLayout } from 'react-photoswipe-gallery'\r\nimport { Button } from '@chakra-ui/button'\r\nimport {  Flex,  } from '@chakra-ui/layout'\r\nimport { DeleteIcon,ArrowUpIcon} from '@chakra-ui/icons'\r\n\r\n\r\n\r\n\r\n\r\nexport  const Galary=({pid,imarr,...props})=>{\r\n    useEffect(()=>setImages(imarr), [imarr])\r\n  \r\n    const [images,setImages]=useState(imarr)\r\n    const layoutRef = useRef()\r\n    const inputRef = useRef()\r\n  \r\n  \r\n    const [isLoading,setLoading]=useState(false)\r\n    const [url,setUrl]=useState(\"\")\r\n  \r\n    const postDetails = (image)=>{\r\n      setLoading(true)\r\n      console.log(image)\r\n      const data = new FormData()\r\n      data.append(\"file\",image)\r\n      data.append(\"upload_preset\",\"employeeApp\")\r\n      data.append(\"cloud_name\",\"myimagcloud\")\r\n      fetch(\"https://api.cloudinary.com/v1_1/myimagcloud/image/upload\",{\r\n          method:\"post\",\r\n          body:data\r\n      })\r\n      .then(res=>res.json())\r\n      .then(data=>{\r\n         setUrl(data.url)\r\n      })\r\n      .catch(err=>{\r\n          console.log(err)\r\n      })\r\n    \r\n    \r\n    }\r\n    const deleteImage=(image)=>{\r\n      fetch(\"/admin/deleteProvinceImage\",{\r\n        method:\"post\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n        },\r\n        body:JSON.stringify({\r\n            image:image,\r\n            pid:pid,\r\n        })\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n      console.log(data)\r\n      if(data.message){\r\n          M.toast({html: data.message,classes:\"#c62828 red darken-3\"})\r\n          setImages(data.result.images)\r\n  \r\n      }\r\n      if (data.error){\r\n        M.toast({html: data.message,classes:\"#c62828 red darken-3\"})\r\n      }\r\n      \r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    useEffect(()=>{\r\n      if(url){\r\n       fetch(\"/admin/addImgtoProvinceData\",{\r\n           method:\"post\",\r\n           headers:{\r\n               \"Content-Type\":\"application/json\",\r\n           },\r\n           body:JSON.stringify({\r\n               image:url,\r\n               pid:pid,\r\n               name:\"\",\r\n               description:\"\"\r\n           })\r\n       }).then(res=>res.json())\r\n       .then(data=>{\r\n          console.log(data)\r\n          if(data.message){\r\n             M.toast({html: data.message,classes:\"#c62828 red darken-3\"})\r\n             setImages(data.result.images)\r\n             setLoading(false)\r\n  \r\n  \r\n          }\r\n         \r\n       }).catch(err=>{\r\n           console.log(err)\r\n       })\r\n    }\r\n    },[url])\r\n  \r\n  \r\n    return(\r\n      <Flex flexDirection=\"column\" alignItems=\"center\">\r\n      <Flex flexDirection=\"row\" overflowX=\"scroll\" margin=\"5\">\r\n      <CustomGallery layoutRef={layoutRef} ui={PhotoswipeUIDefault}>\r\n  \r\n        {images.map((image,index)=>{\r\n           return(\r\n            <Item key={index}\r\n            original={image}\r\n            thumbnail={image}\r\n            width=\"1024\"\r\n            height=\"768\"\r\n          >\r\n            {({ ref, open }) => (\r\n             <>\r\n              <img ref={ref} onClick={open} src={image}  width=\"200px\" height=\"200px\"/>\r\n              <Button onClick={()=>deleteImage(image)} ><DeleteIcon/></Button>\r\n             </>\r\n            )}\r\n          </Item>\r\n           )\r\n        })}\r\n     \r\n      </CustomGallery>\r\n  \r\n      <DefaultLayout\r\n        shareButton={false}\r\n        fullscreenButton={true}\r\n        zoomButton={true}\r\n        ref={layoutRef}\r\n      />\r\n         \r\n      </Flex>\r\n    \r\n      <Button\r\n      isLoading={isLoading}\r\n      loadingText=\"Uploading\"\r\n      colorScheme=\"teal\"\r\n      variant=\"outline\"\r\n      rightIcon={<ArrowUpIcon/>}\r\n      onClick={()=>inputRef.current.click()}\r\n      \r\n      \r\n    >\r\n      Upload\r\n    </Button>\r\n    <input  ref={inputRef} type=\"file\" style={{display:\"none\"}} onChange={(e)=>postDetails(e.target.files[0])}/>\r\n      </Flex>\r\n      \r\n    )\r\n  }\r\n  ","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\AdminComponents\\planCard.js",["585"],"import {  useContext } from \"react\";\r\nimport { Flex, HStack, VStack } from \"@chakra-ui/layout\"\r\nimport { Text, Image, Heading , Button,} from \"@chakra-ui/react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { AdminContext } from \"../../context/AdminContext\";\r\n\r\nexport const PlanCard=({_id=\"\",name,days,createdDate, travelPlan})=>{\r\n    const {state, dispatch}=useContext(AdminContext)\r\n    const history=useHistory()\r\n    return(\r\n       \r\n                    <Flex margin={5} borderWidth=\"1px\" borderRadius=\"lg\" p={5} maxWidth=\"container.md\" >\r\n                       <HStack>\r\n                       <Image src={\"https://images.unsplash.com/photo-1632429619634-3d97fc1693e9?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\"}  width=\"400px\" height=\"300px\" objectFit=\"cover\" borderRadius=\"lg\"  /> \r\n                       <VStack p={3} alignItems=\"start\" spacing={5}>\r\n                                <Heading as=\"h3\" size=\"lg\">\r\n                                    {name}\r\n                                </Heading>\r\n\r\n                                <Heading as=\"h5\" size=\"sm\">\r\n                                    {days} days\r\n                                </Heading>\r\n\r\n                                <Button colorScheme=\"teal\" variant=\"outline\" onClick={()=>{\r\n                                        dispatch({type:\"set_travelPlan\" , payload:{travelPlan:travelPlan}})\r\n                                        dispatch({type:\"set_planId\" , payload:{planId:_id}})\r\n                                        history.push(\"/admin/viewMyTravelPlan\")\r\n\r\n                                }}>\r\n                                    View Plan\r\n                                </Button>\r\n\r\n                                <Text fontSize=\"sm\">created : {createdDate}</Text>\r\n                       </VStack>\r\n                       </HStack>\r\n\r\n                    </Flex>\r\n                    \r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\nearbyplace.js",["586"],"import {  Flex, HStack,  Box,  VStack } from \"@chakra-ui/layout\"\r\nimport {  Image,Badge,} from \"@chakra-ui/react\"\r\nimport React, { useEffect,useState } from \"react\"\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { StarIcon } from \"@chakra-ui/icons\"\r\nimport { useHistory } from \"react-router\"\r\n\r\n\r\nexport const NearByPlaceCard=({photo,index,name,address, types=[], rating})=>{\r\n    const [link,setLink]=useState(\"\")\r\n    const history=useHistory()\r\n    useEffect(() => {\r\n        \r\n      \r\n        setLink(`https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${photo}&key=AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA`)\r\n    }, [photo])\r\n\r\n\r\n\r\n    return(\r\n        <Flex flexDirection=\"column\" alignItems=\"center\" padding=\"10px\">\r\n                      \r\n\r\n\r\n                        <Flex flexDirection=\"row\" margin={5} borderWidth=\"1px\" borderRadius=\"lg\" p={5} >\r\n                           <Image src={link}  width=\"400px\" height=\"300px\" objectFit=\"cover\" borderRadius=\"lg\"  />\r\n                           <VStack spacing={3.5} alignItems=\"start\" p={5}>\r\n                                 <Avatar name={`${index+1}`}  />\r\n                                <Box lineHeight=\"tall\" fontWeight=\"semibold\" as=\"h4\"> {name}</Box>\r\n                                <Box color=\"gray.600\" fontSize=\"sm\">{address}</Box>\r\n                                <HStack>\r\n                                        <>    {types.map((item)=>{\r\n                                                return(\r\n                                                    <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">{item}</Badge>\r\n                                                )\r\n                                            })}\r\n                                        </> \r\n                                         \r\n                                </HStack>\r\n\r\n                                <HStack>\r\n                                        <StarIcon color={\"teal.500\"} />\r\n                                        <StarIcon color={\"teal.500\"} />\r\n                                        <StarIcon color={\"teal.500\"} />\r\n                                        <StarIcon color={\"teal.500\"} />\r\n                                        <StarIcon color={\"teal.500\"} />\r\n                                        <Box>rating {rating}</Box>\r\n                                        \r\n                                </HStack>\r\n                                        \r\n\r\n                           </VStack>\r\n\r\n                        </Flex>\r\n\r\n\r\n            </Flex>\r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\poicard.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\services\\ViewPOIServices.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\AdminComponents\\placeCard.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\reducer\\AdminReducer.js",["587"],"export const initialState=[\r\n]\r\n\r\nexport const Adminreducer =(state,action)=>{\r\n   switch(action.type){\r\n   \r\n        case \"Admin\":\r\n            return action.payload\r\n\r\n        case \"set_travelPlan\":\r\n            return{\r\n                ...state,\r\n                travelPlan:action.payload.travelPlan,\r\n            }\r\n        case \"set_planId\":\r\n            return{\r\n                ...state,\r\n                planId:action.payload.planId\r\n            }\r\n        case \"CLEAR\":\r\n            return null\r\n        default :\r\n           return state\r\n   }\r\n\r\n    return state\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\reducer\\TravelReducer.js",["588"],"export const initialState=[\r\n]\r\n\r\nexport const Travelreducer =(state,action)=>{\r\n   switch(action.type){\r\n   \r\n        case \"USER\":\r\n            return action.payload\r\n\r\n        case \"UPDATE\":\r\n            return {\r\n                ...state,\r\n                firstname:action.payload.firstname,\r\n                lastname:action.payload.lastname,\r\n                dob:action.payload.dob,\r\n                country:action.payload.country,\r\n                religion:action.payload.religion,\r\n                email:action.payload.email,\r\n                pic:action.payload.pic\r\n                // password:action.payload.password\r\n            }\r\n        case \"USER_PREFERENCES\":\r\n            return{\r\n                ...state,\r\n                userPreferences:action.payload.userPreferences\r\n            }\r\n        case \"accomodation_location\":\r\n            return{\r\n                ...state,\r\n                accomodation_location:action.payload.accomodation_location\r\n            }\r\n        case \"set_travelPlan\":\r\n            return{\r\n                ...state,\r\n                travelPlan:action.payload.travelPlan,\r\n            }\r\n        case \"set_pois\":\r\n            return{\r\n                ...state,\r\n                allpois:action.payload.allpois\r\n            }\r\n        case \"set_planId\":\r\n            return{\r\n                ...state,\r\n                planId:action.payload.planId\r\n            }\r\n        case \"CLEAR\":\r\n            return null\r\n        default :\r\n           return state\r\n   }\r\n\r\n    return state\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\services\\TravelPlanService.js",["589","590","591","592","593","594","595","596","597","598"],"//  import { Loader } from \"@googlemaps/js-api-loader\"\r\nconst {Client} = require(\"@googlemaps/google-maps-services-js\");\r\n\r\nexport const getTravelPlan=async(climate,provinces,days,religion,thingsLike,placesLike)=>{\r\n  \r\n    const client = new Client({});\r\n    var province=provinces\r\n    var climate=climate\r\n    // wet ->Western, Sabaragamuwa, Southern\r\n    // intermediate ->Central, Uva\r\n    // dry -> Northern,North Western, North Central,Eastern        \r\n    var things_you_like_to_do=thingsLike\r\n    // hiking, surfing, camping, swimming,riding boats, nothing_only_travelling \"\"\r\n    var religion=religion\r\n    //buddhist, hindu, islam, catholic, \"\"\r\n    var placeslike=placesLike\r\n    //Natural, animal, botenical gardens, parks, beaches, ancient, reliogous \r\n    var number_of_days=parseInt(days)\r\n    \r\n    var provinceData={\r\n      \"Northern\":[9.112945,80.477003],\r\n      \"North Western\":[7.612998,80.180174],\r\n      \"Western\":[6.904614,80.037256],\r\n      \"North Central\":[8.331083,80.641908],\r\n      \"Central\":[7.318882,80.696876],\r\n      \"Sabaragamuwa\":[6.697343,80.509984],\r\n      \"Eastern\":[7.602108,81.598357],\r\n      \"Uva\":[6.751896,81.290534],\r\n      \"Southern\":[6.058624,80.414907]\r\n    }  \r\n    var climateData={\r\n      \"wet\":[\"Western\", \"Sabaragamuwa\", \"Southern\"],\r\n      \"intermediate\":[\"Central\", \"Uva\"],\r\n       \"dry\":[\"Northern\",\"North Western\", \"North Central\",\"Eastern\"]\r\n    }\r\n    \r\n    var pois=new Array()\r\n    var Allpois=new Array()\r\n    \r\n    // user preferences analysis\r\n    function userPreferencesAnalysis(){\r\n      let reqArr=[]\r\n      let pro=[];\r\n      if(climate){\r\n        pro=climateData[climate].filter(x=>province.includes(x))\r\n        if(pro.length==0){\r\n          pro=climateData[climate]\r\n    \r\n        }\r\n      }\r\n      let R=\"50000\"\r\n      pro.forEach(ele => {\r\n        if(ele==\"Northern\")  R=\"5000\";\r\n        things_you_like_to_do.forEach(x=>{\r\n          let req={\r\n            location:  { lat:provinceData[ele][0], lng:provinceData[ele][1]},\r\n            radius: R,\r\n            query: x,\r\n            type:['tourist_attraction', ],\r\n            // \r\n            key: \"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\",\r\n            rating:4,\r\n          };\r\n          reqArr.push(req)\r\n        })\r\n        placeslike.forEach(x=>{\r\n          if(x==\"reliogous\"){\r\n            let req={\r\n              location:  { lat:provinceData[ele][0], lng:provinceData[ele][1]},\r\n              radius: R,\r\n              query: x+religion,\r\n              type:['tourist_attraction', ],\r\n              // rankBy :google.maps.places.RankBy.DISTANCE,\r\n              key: \"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\",\r\n              rating:4,\r\n            };\r\n            reqArr.push(req)\r\n          }else{\r\n            let req={\r\n              location:  { lat:provinceData[ele][0], lng:provinceData[ele][1]},\r\n              radius: R,\r\n              query: x,\r\n              type:['tourist_attraction', ],\r\n              // rankBy :google.maps.places.RankBy.DISTANCE,\r\n              key: \"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\",\r\n              rating:4,\r\n    \r\n          };\r\n          reqArr.push(req)\r\n        }})\r\n    \r\n      });\r\n    \r\n      return reqArr;\r\n    }\r\n     async function initMap() {\r\n        userPreferencesAnalysis().forEach(async(x)=>{\r\n              findPOIS(x)\r\n        })\r\n        await new Promise(r => setTimeout(r, 6000));\r\n        return  [ await calculateAndDisplayRoute(),Allpois];\r\n        \r\n      \r\n    }\r\n\r\n    return await initMap();\r\n    \r\n    \r\n    // find point of interersts for a request\r\n     function findPOIS(request){\r\n      \r\n        return client\r\n          .textSearch({\r\n            params: request,\r\n            timeout: 1000, // milliseconds\r\n          })\r\n          .then((r) => {\r\n            addPlaces(r.data.results)\r\n            return ;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n      \r\n    }\r\n    // add placess to map\r\n    function addPlaces(results) {\r\n        for (var i = 0; i < results.length; i++) {\r\n        var place = results[i];\r\n        if(results[i].rating>=4.3){\r\n          Allpois.push(place)\r\n          if(pois.length<=number_of_days*8){\r\n            if(Math.random()>0.5) {\r\n              pois.push(place)\r\n           \r\n            };\r\n          }    \r\n        }\r\n      } \r\n    }\r\n        \r\n    async function calculateAndDisplayRoute() {\r\n      const waypts = [];\r\n      \r\n\r\n      for (let i = 0; i < pois.length; i++) {\r\n          waypts.push(\r\n             pois[i].geometry.location,\r\n            \r\n          );\r\n      }\r\n\r\n      return client\r\n      .directions({params:{\r\n          origin:{lat:6.927079,lng:79.857750},\r\n          destination:{lat:6.927079,lng:79.857750},\r\n          optimizeWaypoints: true,\r\n          waypoints: waypts,\r\n          travelMode: 'DRIVING',\r\n          key: \"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\",\r\n\r\n        }})\r\n        .then((response) => {\r\n          const route = response.data.routes[0];\r\n          \r\n          let day1=[]\r\n          let day2=[]\r\n          let day3=[]\r\n          let time=0\r\n\r\n           for (let i = 0; i < route.legs.length-1; i++) {\r\n             time=time+route.legs[i].duration.value+3600\r\n\r\n             if(time<32400) {\r\n               day1.push(pois[route.waypoint_order[i]]); \r\n\r\n               }\r\n             else if(time<64800) {\r\n               day2.push(pois[route.waypoint_order[i]]); \r\n\r\n                 }\r\n             else if(time<97200)  {\r\n               day3.push(pois[route.waypoint_order[i]]);\r\n\r\n                }\r\n          \r\n         }\r\n\r\n\r\n         if(number_of_days==1) return [[day1],route.legs.slice(0, day1.length)]\r\n         else if(number_of_days==2) return [[day1,day2],route.legs.slice(0, day1.length+day2.length)]\r\n         else if (number_of_days==3) return [[day1,day2,day3],route.legs.slice(0,day1.length+day2.length+day3.length)]\r\n         else return [[[]],[]]\r\n\r\n         \r\n        })\r\n         .catch((e) =>{ \r\n           console.log(e)\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const calculateAndDisplayRoute=async(pois)=> {\r\n  const client = new Client({});\r\n  const waypts = [];\r\n  \r\n\r\n  for (let i = 0; i < pois.length; i++) {\r\n      waypts.push(\r\n         {\r\n           lat:pois[i].geometry.location.lat(),\r\n           lng:pois[i].geometry.location.lng()\r\n         }\r\n        \r\n      );\r\n  }\r\n  \r\n\r\n  return client\r\n  .directions({params:{\r\n      origin:{lat:6.927079,lng:79.857750},\r\n      destination:{lat:6.927079,lng:79.857750},\r\n      optimizeWaypoints: true,\r\n      waypoints: waypts,\r\n      travelMode: 'DRIVING',\r\n      key: \"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\",\r\n\r\n    }})\r\n    .then((response) => {\r\n      // console.log(response)\r\n      const route = response.data.routes[0];\r\n      var time=0\r\n      let days=[[]]\r\n      \r\n       for (let i = 0; i < route.legs.length-1; i++) {\r\n         time=time+route.legs[i].duration.value+3600\r\n\r\n         if(time<32400*(days.length)) {\r\n           days[days.length-1].push(pois[route.waypoint_order[i]]); \r\n         }\r\n         else{\r\n           days.push([])\r\n           days[days.length-1].push(pois[route.waypoint_order[i]]);\r\n         }\r\n      \r\n     }\r\n\r\n\r\n     \r\n     return [[days,route.legs],pois]\r\n\r\n     \r\n    })\r\n     .catch((e) =>{ \r\n       console.log(e)\r\n    });\r\n\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\services\\EditPlanServices.js",["599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635"],"const {Client} = require(\"@googlemaps/google-maps-services-js\");\r\n\r\n   \r\nexport const DeletePOI=async(index, index1, travelPlan=[[[],[]] ,[]])=>{\r\n    const client = new Client({});\r\n    var start_location={}\r\n    var end_location={}\r\n    var k=0\r\n    var l=0\r\n    for(var i=0; i<=index;i++){\r\n      for (var j=0; j<travelPlan[i].length;j++){\r\n        var k=k+1\r\n        if(i==index && j==index1){\r\n            l=k\r\n        }\r\n      }\r\n    } \r\n    \r\n    console.log(index,index1,travelPlan)\r\n    var travelDays=travelPlan[0].length\r\n    var plan=travelPlan[0]\r\n\r\n    if(index>0){\r\n      if(index1>0){\r\n        console.log(\"1\")\r\n        start_location=plan[index][index1-1].geometry.location\r\n        // travelPlan[0][index].pop(index1)\r\n      }\r\n      else if(index1==0){\r\n        console.log(\"2\")\r\n        if(plan[index-1].length==0){\r\n          start_location={lat:6.927079,lng:79.857750}\r\n        }\r\n        else{\r\n          start_location=plan[index-1][plan[index-1].length-1].geometry.location\r\n        }\r\n        \r\n        // travelPlan[0][index].pop(index1)\r\n      }\r\n      \r\n    }\r\n    else if(index==0){\r\n      if(index1==0){\r\n        start_location={lat:6.927079,lng:79.857750}\r\n        // travelPlan[0][index].pop(index1)\r\n\r\n      }\r\n      else if(index1>0){\r\n        console.log(\"4\")\r\n        start_location=plan[index][index1-1].geometry.location\r\n        // travelPlan[0][index].pop(index1)\r\n      }\r\n      \r\n    }\r\n\r\n\r\n    if(index<travelDays-1){\r\n      if(index1==plan[index].length-1){\r\n        console.log(\"5\")\r\n        if(plan[index+1].length==0){\r\n          travelPlan[0][index].splice(index1,1)\r\n          travelPlan[1].pop(l-1)\r\n          return travelPlan\r\n        }\r\n        end_location=plan[index+1][0].geometry.location\r\n        travelPlan[0][index].splice(index1,1)\r\n        \r\n      }\r\n      else if(index1<plan[index].length-1){\r\n        console.log(\"6\")\r\n        end_location=plan[index][index1+1].geometry.location\r\n        travelPlan[0][index].splice(index1,1)\r\n        \r\n      }\r\n    }\r\n    else if(index==travelDays-1){\r\n       if(index1==plan[index].length-1){\r\n\r\n        console.log(\"7\")\r\n        travelPlan[0][index].splice(index1,1)\r\n          travelPlan[1].pop(l-1)\r\n          return travelPlan\r\n       }\r\n       else if (index1<plan[index].length-1){\r\n         console.log(\"8\")\r\n          end_location=plan[index][index1+1].geometry.location\r\n          travelPlan[0][index].splice(index1,1)\r\n        \r\n       }\r\n    }\r\n    \r\n\r\n    return client\r\n      .directions({params:{\r\n          origin:start_location,\r\n          destination:end_location,\r\n          optimizeWaypoints: true,\r\n          travelMode: 'DRIVING',\r\n          key: \"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\",\r\n\r\n        }})\r\n        .then((response) => {\r\n          const route = response.data.routes[0];\r\n          travelPlan[1].pop(l-1)\r\n          travelPlan[1][l-1]=route.legs[0]\r\n         \r\n          return travelPlan\r\n         \r\n\r\n        })\r\n         .catch((e) =>{ \r\n           console.log(e)\r\n        });\r\n}\r\n\r\nexport const DeleteDay=async(day, travelPlan)=>{\r\n  console.log(day)\r\n  const client = new Client({});\r\n  var start_location={}\r\n  var end_location={}\r\n\r\n  var remove_count=0\r\n\r\n  var pivot=0\r\n  for(let i=0;i<day-1;i++){\r\n    pivot=pivot+travelPlan[0][i].length\r\n  }\r\n  \r\n\r\n  var travelDays=travelPlan[0].length\r\n  if(day==travelDays){\r\n    remove_count=travelPlan[0][day-1].length\r\n    travelPlan[0].splice(day-1,1)\r\n    travelPlan[1].splice(pivot,remove_count)\r\n    return travelPlan\r\n  }\r\n\r\n  if(day<travelDays){\r\n    // travelPlan[0].splice(day-1,1)\r\n    start_location=travelPlan[0][day-2][travelPlan[0][day-2].length-1].geometry.location\r\n    console.log(travelPlan[0][day])\r\n    if(travelPlan[0][day].length==0){\r\n      travelPlan[0].splice(day-1,1)\r\n      travelPlan[1].splice(pivot,remove_count)\r\n      return travelPlan\r\n    }\r\n    end_location=travelPlan[0][day][0].geometry.location\r\n    remove_count=travelPlan[0][day-1].length\r\n    travelPlan[0].splice(day-1,1)\r\n    travelPlan[1].splice(pivot,remove_count)\r\n  }\r\n  return client\r\n      .directions({params:{\r\n          origin:start_location,\r\n          destination:end_location,\r\n          optimizeWaypoints: true,\r\n          travelMode: 'DRIVING',\r\n          key: \"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\",\r\n\r\n        }})\r\n        .then((response) => {\r\n          const route = response.data.routes[0];\r\n\r\n          travelPlan[1][pivot]=route.legs[0]\r\n         \r\n          return travelPlan\r\n         \r\n\r\n        })\r\n         .catch((e) =>{ \r\n           console.log(e)\r\n        });\r\n\r\n\r\n\r\n\r\n  return;\r\n\r\n}\r\n\r\n\r\nexport const findPois=async(day,travelPlan,allpois)=>{\r\n    const client = new Client({});\r\n    // console.log(allpois)\r\n    const allpoisDays=travelPlan[0].length\r\n    const num_pois_in_day=travelPlan[0][day-1].length\r\n    var start_location={}\r\n    var end_location={}\r\n    if(num_pois_in_day==0){\r\n      if(day==1){\r\n        start_location={lat:6.927079,lng:79.857750}\r\n      }\r\n      else{\r\n        start_location=travelPlan[0][day-2][travelPlan[0][day-2].length-1].geometry.location\r\n      }\r\n    }\r\n    else{\r\n       start_location=travelPlan[0][day-1][num_pois_in_day-1].geometry.location\r\n    }\r\n\r\n    \r\n    var l=0\r\n    for (let i=0; i<day-1;i++){\r\n      l+=travelPlan[0][i].length\r\n    }\r\n    console.log(travelPlan[1])\r\n\r\n    var remaining_time=32400\r\n\r\n    for(let i=0; i<travelPlan[0][day-1].length; i++){\r\n          remaining_time-=travelPlan[1][l+i].duration.value+3600\r\n    }\r\n    remaining_time-=3600\r\n    console.log(remaining_time)\r\n\r\n\r\n    var poisRoute=new Array()\r\n    var pois=new Array()\r\n    var poisRouteSuitable=new Array()\r\n    \r\n      for(var i=0; i<allpois.length;i++){\r\n        const waypts = [];\r\n        if(day<allpoisDays){\r\n          if(travelPlan[0][day].length==0){\r\n            end_location={lat:6.927079,lng:79.857750}\r\n          }\r\n          else{\r\n            end_location=travelPlan[0][day][0].geometry.location\r\n          }\r\n           waypts.push(allpois[i].geometry.location)\r\n        }else{\r\n          end_location=allpois[i].geometry.location\r\n        }\r\n        \r\n      client\r\n      .directions({params:{\r\n          \r\n          origin:start_location,\r\n          destination:end_location,\r\n          optimizeWaypoints: true,\r\n          travelMode: 'DRIVING',\r\n          waypoints:waypts,\r\n          key: \"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\",\r\n\r\n        }\r\n      })\r\n        .then((response) => {\r\n          const route = response.data.routes[0];\r\n          const poisLegs=[]\r\n          for (let i = 0; i < route.legs.length; i++) {\r\n            poisLegs.push(route.legs[i])\r\n          }\r\n          // console.log(poisLegs)  \r\n          poisRoute.push(poisLegs)\r\n        })\r\n         .catch((e) =>{ \r\n           console.log(e)\r\n        })   \r\n      }\r\n      await new Promise(r => setTimeout(r, 6000));\r\n      \r\n       for(let i=0; i<poisRoute.length;i++){\r\n        if(Array.isArray(poisRoute[i])){\r\n            var t=3600\r\n            for(let j=0; j<poisRoute[i].length;j++){\r\n                t+=poisRoute[i][j].duration.value\r\n            }\r\n            if(t<=remaining_time){\r\n              pois.push(allpois[i])\r\n              poisRouteSuitable.push(poisRoute[i])\r\n            }\r\n        }\r\n        else{\r\n          if(poisRoute[i].duration.value<=remaining_time){\r\n            pois.push(allpois[i])\r\n            poisRouteSuitable.push(poisRoute[i])\r\n          }\r\n        }\r\n        \r\n    }   \r\n     return [pois,poisRouteSuitable]\r\n    // return allpois\r\n}\r\n\r\n\r\nexport const addPoiToPlan=async(day,poi, route,travelPlan)=>{\r\n  var pivot=0\r\n  for(let i=0;i<day-1;i++){\r\n    pivot+=travelPlan[0][i].length\r\n  }\r\n  travelPlan[0][day-1].push(poi)\r\n  if(Array.isArray(route)){\r\n    if(route.length==1){\r\n      travelPlan[1].splice(pivot+1, 0, route[0])\r\n    }\r\n    else{\r\n      travelPlan[1].splice(pivot+1, 1)\r\n      travelPlan[1].splice(pivot+1, 0, route[0],route[1])\r\n    } \r\n  }\r\n  // else{\r\n  //   travelPlan[1].splice(pivot+1, 0, route)\r\n  // }\r\n  \r\n  return travelPlan\r\n\r\n}\r\n\r\nexport const AddDay=async(travelPlan)=>{\r\n  travelPlan[0].push([])\r\n  return travelPlan\r\n}\r\n\r\n\r\n   \r\nexport const switchPOI=async(index, index1, travelPlan=[[[],[]] ,[]],allpois)=>{\r\n  const client = new Client({});\r\n  var start_location={}\r\n  var end_location={}\r\n  \r\n  \r\n  var travelDays=travelPlan[0].length\r\n  var plan=travelPlan[0]\r\n\r\n  if(index>0){\r\n    if(index1>0){\r\n      console.log(\"1\")\r\n      start_location=plan[index][index1-1].geometry.location\r\n      // travelPlan[0][index].pop(index1)\r\n    }\r\n    else if(index1==0){\r\n      console.log(\"2\")\r\n      if(plan[index-1].length==0){\r\n        start_location={lat:6.927079,lng:79.857750}\r\n      }\r\n      else{\r\n        start_location=plan[index-1][plan[index-1].length-1].geometry.location\r\n      }\r\n      \r\n      // travelPlan[0][index].pop(index1)\r\n    }\r\n    \r\n  }\r\n  else if(index==0){\r\n    if(index1==0){\r\n      start_location={lat:6.927079,lng:79.857750}\r\n      // travelPlan[0][index].pop(index1)\r\n\r\n    }\r\n    else if(index1>0){\r\n      console.log(\"4\")\r\n      start_location=plan[index][index1-1].geometry.location\r\n      // travelPlan[0][index].pop(index1)\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  if(index<travelDays-1){\r\n    if(index1==plan[index].length-1){\r\n      console.log(\"5\")\r\n      if(plan[index+1].length==0){\r\n        end_location={lat:6.927079,lng:79.857750}\r\n      }else{\r\n        end_location=plan[index+1][0].geometry.location\r\n      }\r\n     \r\n      // travelPlan[0][index].splice(index1,1)\r\n      \r\n    }\r\n    else if(index1<plan[index].length-1){\r\n      console.log(\"6\")\r\n      console.log(plan[index])\r\n      console.log(index1)\r\n      end_location=plan[index][index1+1].geometry.location\r\n      \r\n      // travelPlan[0][index].splice(index1,1)\r\n      \r\n    }\r\n  }\r\n  else if(index==travelDays-1){\r\n     if(index1==plan[index].length-1){\r\n\r\n      console.log(\"7\")\r\n      // travelPlan[0][index].splice(index1,1)\r\n      // travelPlan[1].pop(l-1)\r\n      return findPois(index+1,travelPlan,allpois)\r\n     }\r\n     else if (index1<plan[index].length-1){\r\n       console.log(\"8\")\r\n        end_location=plan[index][index1+1].geometry.location\r\n        // travelPlan[0][index].splice(index1,1)\r\n      \r\n     }\r\n  }\r\n  \r\n\r\n  var remaining_time=32400\r\n\r\n  var pivot=0\r\n  for(let i=0;i<index;i++){\r\n    pivot+=travelPlan[0][i].length\r\n  }\r\n  \r\n  for(let i=0; i<travelPlan[0][index].length; i++){\r\n      if(index1!=i) remaining_time-=travelPlan[1][pivot+i].duration.value+3600\r\n        \r\n  }\r\n  remaining_time-=3600\r\n  // console.log(remaining_time)\r\n\r\n\r\n  var poisRoute=new Array()\r\n  var pois=new Array()\r\n  var poisRouteSuitable=new Array()\r\n    for(var i=0; i<allpois.length;i++){\r\n      const waypts = [allpois[i].geometry.location];\r\n      \r\n      \r\n    client\r\n    .directions({params:{\r\n        \r\n        origin:start_location,\r\n        destination:end_location,\r\n        optimizeWaypoints: true,\r\n        travelMode: 'DRIVING',\r\n        waypoints:waypts,\r\n        key: \"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\",\r\n\r\n      }\r\n    })\r\n      .then((response) => {\r\n        const route = response.data.routes[0];\r\n        // console.log(route)\r\n        const poisLegs=[]\r\n        for (let i = 0; i < route.legs.length; i++) {\r\n          poisLegs.push(route.legs[i])\r\n        }\r\n        // console.log(poisLegs)  \r\n        poisRoute.push(poisLegs)\r\n      })\r\n       .catch((e) =>{ \r\n         console.log(e)\r\n      })   \r\n    }\r\n    await new Promise(r => setTimeout(r, 6000));\r\n    \r\n     for(let i=0; i<poisRoute.length;i++){\r\n      if(Array.isArray(poisRoute[i])){\r\n          var t=3600\r\n          for(let j=0; j<poisRoute[i].length;j++){\r\n              t+=poisRoute[i][j].duration.value\r\n          }\r\n          if(t<=remaining_time){\r\n            pois.push(allpois[i])\r\n            poisRouteSuitable.push(poisRoute[i])\r\n          }\r\n      }\r\n      else{\r\n        if(poisRoute[i].duration.value<=remaining_time){\r\n          pois.push(allpois[i])\r\n          poisRouteSuitable.push(poisRoute[i])\r\n        }\r\n      }\r\n      \r\n  } \r\n  console.log(pois,poisRouteSuitable)  \r\n   return [pois,poisRouteSuitable]\r\n}\r\n\r\n\r\n\r\nexport const addPoiToPlan1=async(index,index1,poi, route,travelPlan)=>{\r\n  var k=0\r\n  var l=0\r\n  for(var i=0; i<=index;i++){\r\n    for (var j=0; j<travelPlan[i].length;j++){\r\n      var k=k+1\r\n      if(i==index && j==index1){\r\n          l=k\r\n      }\r\n    }\r\n  } \r\n\r\n \r\n  travelPlan[0][index][index1]=poi;\r\n  if(Array.isArray(route)){\r\n    if(route.length==1){\r\n      travelPlan[1].splice(l, 1)\r\n      travelPlan[1].splice(l, 0, route[0])\r\n    }\r\n    else{\r\n      travelPlan[1].splice(l, 1)\r\n      travelPlan[1].splice(l, 1)\r\n      travelPlan[1].splice(l, 0, route[0],route[1])\r\n    } \r\n  }\r\n  // else{\r\n  //   travelPlan[1].splice(pivot+1, 0, route)\r\n  // }\r\n  \r\n  return travelPlan\r\n\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\planCard,.js",["636"],"import {  useContext } from \"react\";\r\nimport { Flex, HStack, VStack } from \"@chakra-ui/layout\"\r\nimport { Text, Image, Heading , Button,} from \"@chakra-ui/react\"\r\nimport { TravelContext } from \"../../context/TravelContext\";\r\nimport { useHistory } from \"react-router\"\r\n\r\n\r\nexport const PlanCard=({_id=\"\",name,days,createdDate, travelPlan})=>{\r\n    const {state, dispatch}=useContext(TravelContext)\r\n    const history=useHistory()\r\n    return(\r\n       \r\n                    <Flex margin={5} borderWidth=\"1px\" borderRadius=\"lg\" p={5} maxWidth=\"container.md\" >\r\n                       <HStack>\r\n                       <Image src={\"https://images.unsplash.com/photo-1632429619634-3d97fc1693e9?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\"}  width=\"400px\" height=\"300px\" objectFit=\"cover\" borderRadius=\"lg\"  /> \r\n                       <VStack p={3} alignItems=\"start\" spacing={5}>\r\n                                <Heading as=\"h3\" size=\"lg\">\r\n                                    {name}\r\n                                </Heading>\r\n\r\n                                <Heading as=\"h5\" size=\"sm\">\r\n                                    {days} days\r\n                                </Heading>\r\n\r\n                                <Button colorScheme=\"teal\" variant=\"outline\" onClick={()=>{\r\n                                        dispatch({type:\"set_travelPlan\" , payload:{travelPlan:travelPlan}})\r\n                                        dispatch({type:\"set_planId\" , payload:{planId:_id}})\r\n                                        history.push(\"/travelPlan/viewMyTravelPlan\")\r\n\r\n                                }}>\r\n                                    View Plan\r\n                                </Button>\r\n\r\n                                <Text fontSize=\"sm\">created : {createdDate}</Text>\r\n                       </VStack>\r\n                       </HStack>\r\n\r\n                    </Flex>\r\n                    \r\n    )\r\n}","D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\placeCard.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\review.js",[],"D:\\sem 5 project travel guide app\\Smart-travel-guide-app\\webapp\\src\\components\\TravelPlanApp\\carousal.js",["637"],"import React, { useEffect,useState } from \"react\"\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\n\r\n\r\n\r\nexport const Carousal=({photos=[]})=>{\r\n    const [references, setReferences]=useState([])\r\n    useEffect(()=>{\r\n            setReferences(photos)\r\n    }, [photos])\r\n    return(\r\n        <Carousel>\r\n                \r\n                {\r\n                    references.map((reference)=>{\r\n                        return(\r\n                            <div >\r\n                            <img src={`https://maps.googleapis.com/maps/api/place/photo?maxwidth=800&photo_reference=${reference.photo_reference}&key=AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA`} \r\n                             />\r\n                            \r\n                        </div>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </Carousel>\r\n    )\r\n}\r\n",{"ruleId":"638","replacedBy":"639"},{"ruleId":"640","replacedBy":"641"},{"ruleId":"642","severity":1,"message":"643","line":1,"column":8,"nodeType":"644","messageId":"645","endLine":1,"endColumn":12},{"ruleId":"642","severity":1,"message":"646","line":11,"column":9,"nodeType":"644","messageId":"645","endLine":11,"endColumn":16},{"ruleId":"642","severity":1,"message":"647","line":1,"column":24,"nodeType":"644","messageId":"645","endLine":1,"endColumn":34},{"ruleId":"642","severity":1,"message":"648","line":2,"column":9,"nodeType":"644","messageId":"645","endLine":2,"endColumn":13},{"ruleId":"649","severity":1,"message":"650","line":11,"column":23,"nodeType":"651","messageId":"652","endLine":11,"endColumn":24,"suggestions":"653"},{"ruleId":"649","severity":1,"message":"650","line":11,"column":48,"nodeType":"651","messageId":"652","endLine":11,"endColumn":49,"suggestions":"654"},{"ruleId":"642","severity":1,"message":"655","line":1,"column":15,"nodeType":"644","messageId":"645","endLine":1,"endColumn":23},{"ruleId":"642","severity":1,"message":"647","line":1,"column":24,"nodeType":"644","messageId":"645","endLine":1,"endColumn":34},{"ruleId":"642","severity":1,"message":"656","line":7,"column":13,"nodeType":"644","messageId":"645","endLine":7,"endColumn":22},{"ruleId":"657","severity":1,"message":"658","line":27,"column":13,"nodeType":"659","endLine":27,"endColumn":108},{"ruleId":"660","severity":1,"message":"661","line":41,"column":51,"nodeType":"659","endLine":41,"endColumn":101},{"ruleId":"660","severity":1,"message":"661","line":42,"column":53,"nodeType":"659","endLine":42,"endColumn":103},{"ruleId":"660","severity":1,"message":"661","line":43,"column":52,"nodeType":"659","endLine":43,"endColumn":102},{"ruleId":"660","severity":1,"message":"661","line":95,"column":9,"nodeType":"659","endLine":95,"endColumn":197},{"ruleId":"662","severity":1,"message":"663","line":8,"column":25,"nodeType":"664","messageId":"665","endLine":8,"endColumn":26,"fix":"666"},{"ruleId":"657","severity":1,"message":"658","line":17,"column":13,"nodeType":"659","endLine":17,"endColumn":44},{"ruleId":"657","severity":1,"message":"658","line":19,"column":21,"nodeType":"659","endLine":19,"endColumn":32},{"ruleId":"657","severity":1,"message":"658","line":20,"column":21,"nodeType":"659","endLine":20,"endColumn":32},{"ruleId":"657","severity":1,"message":"658","line":21,"column":21,"nodeType":"659","endLine":21,"endColumn":58},{"ruleId":"642","severity":1,"message":"656","line":7,"column":13,"nodeType":"644","messageId":"645","endLine":7,"endColumn":22},{"ruleId":"660","severity":1,"message":"661","line":17,"column":21,"nodeType":"659","endLine":17,"endColumn":191},{"ruleId":"660","severity":1,"message":"661","line":19,"column":37,"nodeType":"659","endLine":19,"endColumn":222},{"ruleId":"657","severity":1,"message":"667","line":26,"column":21,"nodeType":"659","endLine":26,"endColumn":42},{"ruleId":"657","severity":1,"message":"658","line":29,"column":17,"nodeType":"659","endLine":29,"endColumn":188},{"ruleId":"642","severity":1,"message":"668","line":1,"column":24,"nodeType":"644","messageId":"645","endLine":1,"endColumn":33},{"ruleId":"642","severity":1,"message":"648","line":2,"column":9,"nodeType":"644","messageId":"645","endLine":2,"endColumn":13},{"ruleId":"649","severity":1,"message":"650","line":37,"column":23,"nodeType":"651","messageId":"652","endLine":37,"endColumn":24,"suggestions":"669"},{"ruleId":"649","severity":1,"message":"650","line":37,"column":48,"nodeType":"651","messageId":"652","endLine":37,"endColumn":49,"suggestions":"670"},{"ruleId":"638","replacedBy":"671"},{"ruleId":"640","replacedBy":"672"},{"ruleId":"673","severity":1,"message":"674","line":146,"column":24,"nodeType":"675","messageId":"676","endLine":146,"endColumn":41},{"ruleId":"642","severity":1,"message":"677","line":26,"column":10,"nodeType":"644","messageId":"645","endLine":26,"endColumn":15},{"ruleId":"678","severity":1,"message":"679","line":34,"column":5,"nodeType":"675","endLine":34,"endColumn":7,"suggestions":"680"},{"ruleId":"642","severity":1,"message":"677","line":33,"column":10,"nodeType":"644","messageId":"645","endLine":33,"endColumn":15},{"ruleId":"678","severity":1,"message":"679","line":41,"column":5,"nodeType":"675","endLine":41,"endColumn":7,"suggestions":"681"},{"ruleId":"642","severity":1,"message":"682","line":1,"column":8,"nodeType":"644","messageId":"645","endLine":1,"endColumn":14},{"ruleId":"642","severity":1,"message":"683","line":3,"column":10,"nodeType":"644","messageId":"645","endLine":3,"endColumn":15},{"ruleId":"642","severity":1,"message":"684","line":4,"column":10,"nodeType":"644","messageId":"645","endLine":4,"endColumn":14},{"ruleId":"642","severity":1,"message":"685","line":7,"column":8,"nodeType":"644","messageId":"645","endLine":7,"endColumn":15},{"ruleId":"662","severity":1,"message":"663","line":15,"column":42,"nodeType":"664","messageId":"665","endLine":15,"endColumn":43,"fix":"686"},{"ruleId":"678","severity":1,"message":"687","line":27,"column":5,"nodeType":"675","endLine":27,"endColumn":7,"suggestions":"688"},{"ruleId":"642","severity":1,"message":"689","line":5,"column":5,"nodeType":"644","messageId":"645","endLine":5,"endColumn":10},{"ruleId":"649","severity":1,"message":"650","line":49,"column":23,"nodeType":"651","messageId":"652","endLine":49,"endColumn":24,"suggestions":"690"},{"ruleId":"649","severity":1,"message":"650","line":49,"column":48,"nodeType":"651","messageId":"652","endLine":49,"endColumn":49,"suggestions":"691"},{"ruleId":"692","severity":1,"message":"693","line":190,"column":70,"nodeType":"694","messageId":"695","endLine":190,"endColumn":71},{"ruleId":"692","severity":1,"message":"693","line":217,"column":70,"nodeType":"694","messageId":"695","endLine":217,"endColumn":71},{"ruleId":"642","severity":1,"message":"696","line":4,"column":10,"nodeType":"644","messageId":"645","endLine":4,"endColumn":20},{"ruleId":"642","severity":1,"message":"697","line":10,"column":15,"nodeType":"644","messageId":"645","endLine":10,"endColumn":26},{"ruleId":"642","severity":1,"message":"698","line":10,"column":27,"nodeType":"644","messageId":"645","endLine":10,"endColumn":38},{"ruleId":"642","severity":1,"message":"699","line":43,"column":11,"nodeType":"644","messageId":"645","endLine":43,"endColumn":16},{"ruleId":"642","severity":1,"message":"700","line":43,"column":17,"nodeType":"644","messageId":"645","endLine":43,"endColumn":24},{"ruleId":"642","severity":1,"message":"701","line":48,"column":11,"nodeType":"644","messageId":"645","endLine":48,"endColumn":23},{"ruleId":"702","severity":1,"message":"703","line":50,"column":21,"nodeType":"704","messageId":"705","endLine":50,"endColumn":23},{"ruleId":"692","severity":1,"message":"693","line":78,"column":75,"nodeType":"694","messageId":"695","endLine":78,"endColumn":76},{"ruleId":"642","severity":1,"message":"706","line":2,"column":10,"nodeType":"644","messageId":"645","endLine":2,"endColumn":17},{"ruleId":"642","severity":1,"message":"707","line":3,"column":9,"nodeType":"644","messageId":"645","endLine":3,"endColumn":17},{"ruleId":"642","severity":1,"message":"708","line":3,"column":18,"nodeType":"644","messageId":"645","endLine":3,"endColumn":33},{"ruleId":"642","severity":1,"message":"709","line":3,"column":34,"nodeType":"644","messageId":"645","endLine":3,"endColumn":44},{"ruleId":"642","severity":1,"message":"710","line":4,"column":8,"nodeType":"644","messageId":"645","endLine":4,"endColumn":18},{"ruleId":"642","severity":1,"message":"711","line":5,"column":10,"nodeType":"644","messageId":"645","endLine":5,"endColumn":18},{"ruleId":"642","severity":1,"message":"712","line":7,"column":10,"nodeType":"644","messageId":"645","endLine":7,"endColumn":15},{"ruleId":"642","severity":1,"message":"713","line":8,"column":18,"nodeType":"644","messageId":"645","endLine":8,"endColumn":29},{"ruleId":"642","severity":1,"message":"714","line":8,"column":30,"nodeType":"644","messageId":"645","endLine":8,"endColumn":33},{"ruleId":"642","severity":1,"message":"715","line":9,"column":10,"nodeType":"644","messageId":"645","endLine":9,"endColumn":15},{"ruleId":"642","severity":1,"message":"716","line":9,"column":17,"nodeType":"644","messageId":"645","endLine":9,"endColumn":27},{"ruleId":"642","severity":1,"message":"717","line":12,"column":5,"nodeType":"644","messageId":"645","endLine":12,"endColumn":16},{"ruleId":"642","severity":1,"message":"718","line":13,"column":5,"nodeType":"644","messageId":"645","endLine":13,"endColumn":14},{"ruleId":"642","severity":1,"message":"719","line":14,"column":5,"nodeType":"644","messageId":"645","endLine":14,"endColumn":21},{"ruleId":"642","severity":1,"message":"720","line":15,"column":5,"nodeType":"644","messageId":"645","endLine":15,"endColumn":19},{"ruleId":"642","severity":1,"message":"721","line":15,"column":20,"nodeType":"644","messageId":"645","endLine":15,"endColumn":26},{"ruleId":"642","severity":1,"message":"722","line":23,"column":5,"nodeType":"644","messageId":"645","endLine":23,"endColumn":18},{"ruleId":"642","severity":1,"message":"723","line":28,"column":5,"nodeType":"644","messageId":"645","endLine":28,"endColumn":10},{"ruleId":"642","severity":1,"message":"724","line":29,"column":5,"nodeType":"644","messageId":"645","endLine":29,"endColumn":10},{"ruleId":"642","severity":1,"message":"725","line":30,"column":5,"nodeType":"644","messageId":"645","endLine":30,"endColumn":10},{"ruleId":"642","severity":1,"message":"689","line":31,"column":5,"nodeType":"644","messageId":"645","endLine":31,"endColumn":10},{"ruleId":"642","severity":1,"message":"726","line":32,"column":5,"nodeType":"644","messageId":"645","endLine":32,"endColumn":7},{"ruleId":"642","severity":1,"message":"727","line":33,"column":5,"nodeType":"644","messageId":"645","endLine":33,"endColumn":7},{"ruleId":"642","severity":1,"message":"728","line":34,"column":5,"nodeType":"644","messageId":"645","endLine":34,"endColumn":7},{"ruleId":"642","severity":1,"message":"729","line":35,"column":5,"nodeType":"644","messageId":"645","endLine":35,"endColumn":17},{"ruleId":"642","severity":1,"message":"730","line":40,"column":27,"nodeType":"644","messageId":"645","endLine":40,"endColumn":45},{"ruleId":"642","severity":1,"message":"731","line":42,"column":26,"nodeType":"644","messageId":"645","endLine":42,"endColumn":43},{"ruleId":"642","severity":1,"message":"732","line":43,"column":11,"nodeType":"644","messageId":"645","endLine":43,"endColumn":24},{"ruleId":"642","severity":1,"message":"733","line":43,"column":25,"nodeType":"644","messageId":"645","endLine":43,"endColumn":41},{"ruleId":"642","severity":1,"message":"734","line":44,"column":11,"nodeType":"644","messageId":"645","endLine":44,"endColumn":25},{"ruleId":"642","severity":1,"message":"735","line":44,"column":26,"nodeType":"644","messageId":"645","endLine":44,"endColumn":43},{"ruleId":"642","severity":1,"message":"736","line":45,"column":12,"nodeType":"644","messageId":"645","endLine":45,"endColumn":23},{"ruleId":"642","severity":1,"message":"737","line":45,"column":24,"nodeType":"644","messageId":"645","endLine":45,"endColumn":38},{"ruleId":"642","severity":1,"message":"738","line":46,"column":12,"nodeType":"644","messageId":"645","endLine":46,"endColumn":21},{"ruleId":"642","severity":1,"message":"739","line":46,"column":22,"nodeType":"644","messageId":"645","endLine":46,"endColumn":32},{"ruleId":"642","severity":1,"message":"740","line":47,"column":11,"nodeType":"644","messageId":"645","endLine":47,"endColumn":28},{"ruleId":"702","severity":1,"message":"741","line":60,"column":67,"nodeType":"704","messageId":"705","endLine":60,"endColumn":69},{"ruleId":"702","severity":1,"message":"741","line":69,"column":65,"nodeType":"704","messageId":"705","endLine":69,"endColumn":67},{"ruleId":"702","severity":1,"message":"741","line":78,"column":66,"nodeType":"704","messageId":"705","endLine":78,"endColumn":68},{"ruleId":"702","severity":1,"message":"741","line":88,"column":66,"nodeType":"704","messageId":"705","endLine":88,"endColumn":68},{"ruleId":"678","severity":1,"message":"742","line":111,"column":10,"nodeType":"675","endLine":111,"endColumn":12,"suggestions":"743"},{"ruleId":"642","severity":1,"message":"713","line":3,"column":18,"nodeType":"644","messageId":"645","endLine":3,"endColumn":29},{"ruleId":"642","severity":1,"message":"714","line":3,"column":30,"nodeType":"644","messageId":"645","endLine":3,"endColumn":33},{"ruleId":"642","severity":1,"message":"744","line":3,"column":34,"nodeType":"644","messageId":"645","endLine":3,"endColumn":39},{"ruleId":"642","severity":1,"message":"745","line":6,"column":11,"nodeType":"644","messageId":"645","endLine":6,"endColumn":26},{"ruleId":"642","severity":1,"message":"746","line":6,"column":27,"nodeType":"644","messageId":"645","endLine":6,"endColumn":35},{"ruleId":"642","severity":1,"message":"747","line":7,"column":11,"nodeType":"644","messageId":"645","endLine":7,"endColumn":15},{"ruleId":"642","severity":1,"message":"748","line":7,"column":16,"nodeType":"644","messageId":"645","endLine":7,"endColumn":23},{"ruleId":"642","severity":1,"message":"749","line":8,"column":11,"nodeType":"644","messageId":"645","endLine":8,"endColumn":17},{"ruleId":"642","severity":1,"message":"750","line":8,"column":18,"nodeType":"644","messageId":"645","endLine":8,"endColumn":27},{"ruleId":"678","severity":1,"message":"751","line":33,"column":9,"nodeType":"675","endLine":33,"endColumn":16,"suggestions":"752"},{"ruleId":"649","severity":1,"message":"650","line":37,"column":23,"nodeType":"651","messageId":"652","endLine":37,"endColumn":24,"suggestions":"753"},{"ruleId":"649","severity":1,"message":"650","line":37,"column":48,"nodeType":"651","messageId":"652","endLine":37,"endColumn":49,"suggestions":"754"},{"ruleId":"642","severity":1,"message":"647","line":1,"column":26,"nodeType":"644","messageId":"645","endLine":1,"endColumn":36},{"ruleId":"678","severity":1,"message":"687","line":39,"column":10,"nodeType":"675","endLine":39,"endColumn":12,"suggestions":"755"},{"ruleId":"642","severity":1,"message":"756","line":60,"column":7,"nodeType":"644","messageId":"645","endLine":60,"endColumn":12},{"ruleId":"642","severity":1,"message":"668","line":4,"column":10,"nodeType":"644","messageId":"645","endLine":4,"endColumn":19},{"ruleId":"662","severity":1,"message":"663","line":44,"column":33,"nodeType":"664","messageId":"665","endLine":44,"endColumn":34,"fix":"757"},{"ruleId":"662","severity":1,"message":"663","line":72,"column":37,"nodeType":"664","messageId":"665","endLine":72,"endColumn":38,"fix":"758"},{"ruleId":"702","severity":1,"message":"703","line":77,"column":41,"nodeType":"704","messageId":"705","endLine":77,"endColumn":43},{"ruleId":"662","severity":1,"message":"663","line":97,"column":37,"nodeType":"664","messageId":"665","endLine":97,"endColumn":38,"fix":"759"},{"ruleId":"642","severity":1,"message":"647","line":1,"column":26,"nodeType":"644","messageId":"645","endLine":1,"endColumn":36},{"ruleId":"678","severity":1,"message":"760","line":37,"column":8,"nodeType":"675","endLine":37,"endColumn":10,"suggestions":"761"},{"ruleId":"642","severity":1,"message":"756","line":59,"column":7,"nodeType":"644","messageId":"645","endLine":59,"endColumn":12},{"ruleId":"642","severity":1,"message":"647","line":1,"column":30,"nodeType":"644","messageId":"645","endLine":1,"endColumn":40},{"ruleId":"642","severity":1,"message":"711","line":8,"column":10,"nodeType":"644","messageId":"645","endLine":8,"endColumn":18},{"ruleId":"642","severity":1,"message":"722","line":15,"column":5,"nodeType":"644","messageId":"645","endLine":15,"endColumn":18},{"ruleId":"642","severity":1,"message":"762","line":41,"column":10,"nodeType":"644","messageId":"645","endLine":41,"endColumn":18},{"ruleId":"642","severity":1,"message":"763","line":1,"column":24,"nodeType":"644","messageId":"645","endLine":1,"endColumn":28},{"ruleId":"642","severity":1,"message":"747","line":9,"column":12,"nodeType":"644","messageId":"645","endLine":9,"endColumn":16},{"ruleId":"642","severity":1,"message":"764","line":9,"column":17,"nodeType":"644","messageId":"645","endLine":9,"endColumn":24},{"ruleId":"662","severity":1,"message":"663","line":20,"column":33,"nodeType":"664","messageId":"665","endLine":20,"endColumn":34,"fix":"765"},{"ruleId":"662","severity":1,"message":"663","line":37,"column":37,"nodeType":"664","messageId":"665","endLine":37,"endColumn":38,"fix":"766"},{"ruleId":"702","severity":1,"message":"703","line":41,"column":41,"nodeType":"704","messageId":"705","endLine":41,"endColumn":43},{"ruleId":"642","severity":1,"message":"763","line":1,"column":31,"nodeType":"644","messageId":"645","endLine":1,"endColumn":35},{"ruleId":"642","severity":1,"message":"648","line":2,"column":10,"nodeType":"644","messageId":"645","endLine":2,"endColumn":14},{"ruleId":"767","severity":1,"message":"768","line":32,"column":22,"nodeType":"659","endLine":32,"endColumn":475},{"ruleId":"642","severity":1,"message":"769","line":18,"column":3,"nodeType":"644","messageId":"645","endLine":18,"endColumn":11},{"ruleId":"642","severity":1,"message":"770","line":19,"column":3,"nodeType":"644","messageId":"645","endLine":19,"endColumn":12},{"ruleId":"642","severity":1,"message":"744","line":25,"column":3,"nodeType":"644","messageId":"645","endLine":25,"endColumn":8},{"ruleId":"642","severity":1,"message":"771","line":27,"column":40,"nodeType":"644","messageId":"645","endLine":27,"endColumn":48},{"ruleId":"642","severity":1,"message":"772","line":27,"column":49,"nodeType":"644","messageId":"645","endLine":27,"endColumn":61},{"ruleId":"642","severity":1,"message":"646","line":52,"column":11,"nodeType":"644","messageId":"645","endLine":52,"endColumn":18},{"ruleId":"773","severity":1,"message":"774","line":117,"column":56,"nodeType":"775","endLine":117,"endColumn":67},{"ruleId":"642","severity":1,"message":"776","line":1,"column":48,"nodeType":"644","messageId":"645","endLine":1,"endColumn":54},{"ruleId":"642","severity":1,"message":"777","line":4,"column":24,"nodeType":"644","messageId":"645","endLine":4,"endColumn":30},{"ruleId":"642","severity":1,"message":"778","line":4,"column":43,"nodeType":"644","messageId":"645","endLine":4,"endColumn":49},{"ruleId":"642","severity":1,"message":"779","line":4,"column":52,"nodeType":"644","messageId":"645","endLine":4,"endColumn":60},{"ruleId":"642","severity":1,"message":"780","line":4,"column":70,"nodeType":"644","messageId":"645","endLine":4,"endColumn":81},{"ruleId":"642","severity":1,"message":"781","line":4,"column":83,"nodeType":"644","messageId":"645","endLine":4,"endColumn":98},{"ruleId":"642","severity":1,"message":"782","line":4,"column":100,"nodeType":"644","messageId":"645","endLine":4,"endColumn":117},{"ruleId":"642","severity":1,"message":"783","line":4,"column":118,"nodeType":"644","messageId":"645","endLine":4,"endColumn":135},{"ruleId":"642","severity":1,"message":"784","line":4,"column":136,"nodeType":"644","messageId":"645","endLine":4,"endColumn":154},{"ruleId":"642","severity":1,"message":"785","line":4,"column":155,"nodeType":"644","messageId":"645","endLine":4,"endColumn":173},{"ruleId":"642","severity":1,"message":"786","line":4,"column":214,"nodeType":"644","messageId":"645","endLine":4,"endColumn":222},{"ruleId":"642","severity":1,"message":"682","line":10,"column":8,"nodeType":"644","messageId":"645","endLine":10,"endColumn":14},{"ruleId":"642","severity":1,"message":"646","line":15,"column":11,"nodeType":"644","messageId":"645","endLine":15,"endColumn":18},{"ruleId":"642","severity":1,"message":"787","line":16,"column":19,"nodeType":"644","messageId":"645","endLine":16,"endColumn":27},{"ruleId":"642","severity":1,"message":"788","line":67,"column":33,"nodeType":"644","messageId":"645","endLine":67,"endColumn":45},{"ruleId":"642","severity":1,"message":"787","line":143,"column":18,"nodeType":"644","messageId":"645","endLine":143,"endColumn":26},{"ruleId":"642","severity":1,"message":"789","line":148,"column":12,"nodeType":"644","messageId":"645","endLine":148,"endColumn":16},{"ruleId":"642","severity":1,"message":"790","line":148,"column":17,"nodeType":"644","messageId":"645","endLine":148,"endColumn":24},{"ruleId":"642","severity":1,"message":"791","line":2,"column":61,"nodeType":"644","messageId":"645","endLine":2,"endColumn":75},{"ruleId":"642","severity":1,"message":"792","line":2,"column":76,"nodeType":"644","messageId":"645","endLine":2,"endColumn":85},{"ruleId":"642","severity":1,"message":"793","line":2,"column":86,"nodeType":"644","messageId":"645","endLine":2,"endColumn":101},{"ruleId":"642","severity":1,"message":"794","line":2,"column":102,"nodeType":"644","messageId":"645","endLine":2,"endColumn":110},{"ruleId":"642","severity":1,"message":"795","line":2,"column":111,"nodeType":"644","messageId":"645","endLine":2,"endColumn":122},{"ruleId":"662","severity":1,"message":"663","line":14,"column":48,"nodeType":"664","messageId":"665","endLine":14,"endColumn":49,"fix":"796"},{"ruleId":"662","severity":1,"message":"663","line":15,"column":43,"nodeType":"664","messageId":"665","endLine":15,"endColumn":44,"fix":"797"},{"ruleId":"642","severity":1,"message":"778","line":4,"column":43,"nodeType":"644","messageId":"645","endLine":4,"endColumn":49},{"ruleId":"642","severity":1,"message":"779","line":4,"column":52,"nodeType":"644","messageId":"645","endLine":4,"endColumn":60},{"ruleId":"642","severity":1,"message":"798","line":11,"column":58,"nodeType":"644","messageId":"645","endLine":11,"endColumn":68},{"ruleId":"642","severity":1,"message":"799","line":11,"column":69,"nodeType":"644","messageId":"645","endLine":11,"endColumn":87},{"ruleId":"678","severity":1,"message":"800","line":45,"column":5,"nodeType":"675","endLine":45,"endColumn":12,"suggestions":"801"},{"ruleId":"773","severity":1,"message":"774","line":131,"column":77,"nodeType":"775","endLine":139,"endColumn":27},{"ruleId":"642","severity":1,"message":"787","line":283,"column":18,"nodeType":"644","messageId":"645","endLine":283,"endColumn":26},{"ruleId":"642","severity":1,"message":"789","line":288,"column":12,"nodeType":"644","messageId":"645","endLine":288,"endColumn":16},{"ruleId":"642","severity":1,"message":"790","line":288,"column":17,"nodeType":"644","messageId":"645","endLine":288,"endColumn":24},{"ruleId":"642","severity":1,"message":"677","line":11,"column":12,"nodeType":"644","messageId":"645","endLine":11,"endColumn":17},{"ruleId":"642","severity":1,"message":"802","line":16,"column":18,"nodeType":"644","messageId":"645","endLine":16,"endColumn":25},{"ruleId":"642","severity":1,"message":"803","line":17,"column":22,"nodeType":"644","messageId":"645","endLine":17,"endColumn":33},{"ruleId":"702","severity":1,"message":"703","line":218,"column":41,"nodeType":"704","messageId":"705","endLine":218,"endColumn":43},{"ruleId":"642","severity":1,"message":"804","line":6,"column":24,"nodeType":"644","messageId":"645","endLine":6,"endColumn":30},{"ruleId":"678","severity":1,"message":"805","line":23,"column":8,"nodeType":"675","endLine":23,"endColumn":15,"suggestions":"806"},{"ruleId":"642","severity":1,"message":"787","line":9,"column":19,"nodeType":"644","messageId":"645","endLine":9,"endColumn":27},{"ruleId":"662","severity":1,"message":"663","line":13,"column":58,"nodeType":"664","messageId":"665","endLine":13,"endColumn":59,"fix":"807"},{"ruleId":"702","severity":1,"message":"741","line":73,"column":34,"nodeType":"704","messageId":"705","endLine":73,"endColumn":36},{"ruleId":"702","severity":1,"message":"703","line":118,"column":53,"nodeType":"704","messageId":"705","endLine":118,"endColumn":55},{"ruleId":"702","severity":1,"message":"741","line":119,"column":75,"nodeType":"704","messageId":"705","endLine":119,"endColumn":77},{"ruleId":"642","severity":1,"message":"808","line":2,"column":29,"nodeType":"644","messageId":"645","endLine":2,"endColumn":43},{"ruleId":"642","severity":1,"message":"809","line":2,"column":53,"nodeType":"644","messageId":"645","endLine":2,"endColumn":61},{"ruleId":"642","severity":1,"message":"787","line":13,"column":19,"nodeType":"644","messageId":"645","endLine":13,"endColumn":27},{"ruleId":"678","severity":1,"message":"810","line":24,"column":9,"nodeType":"675","endLine":24,"endColumn":11,"suggestions":"811"},{"ruleId":"649","severity":1,"message":"650","line":40,"column":23,"nodeType":"651","messageId":"652","endLine":40,"endColumn":24,"suggestions":"812"},{"ruleId":"649","severity":1,"message":"650","line":40,"column":48,"nodeType":"651","messageId":"652","endLine":40,"endColumn":49,"suggestions":"813"},{"ruleId":"642","severity":1,"message":"814","line":2,"column":10,"nodeType":"644","messageId":"645","endLine":2,"endColumn":23},{"ruleId":"642","severity":1,"message":"712","line":5,"column":10,"nodeType":"644","messageId":"645","endLine":5,"endColumn":15},{"ruleId":"642","severity":1,"message":"787","line":14,"column":19,"nodeType":"644","messageId":"645","endLine":14,"endColumn":27},{"ruleId":"662","severity":1,"message":"663","line":30,"column":37,"nodeType":"664","messageId":"665","endLine":30,"endColumn":38,"fix":"815"},{"ruleId":"678","severity":1,"message":"816","line":45,"column":8,"nodeType":"675","endLine":45,"endColumn":10,"suggestions":"817"},{"ruleId":"662","severity":1,"message":"663","line":58,"column":37,"nodeType":"664","messageId":"665","endLine":58,"endColumn":38,"fix":"818"},{"ruleId":"662","severity":1,"message":"663","line":81,"column":37,"nodeType":"664","messageId":"665","endLine":81,"endColumn":38,"fix":"819"},{"ruleId":"642","severity":1,"message":"804","line":1,"column":15,"nodeType":"644","messageId":"645","endLine":1,"endColumn":21},{"ruleId":"642","severity":1,"message":"763","line":1,"column":29,"nodeType":"644","messageId":"645","endLine":1,"endColumn":33},{"ruleId":"642","severity":1,"message":"798","line":2,"column":58,"nodeType":"644","messageId":"645","endLine":2,"endColumn":68},{"ruleId":"642","severity":1,"message":"668","line":3,"column":18,"nodeType":"644","messageId":"645","endLine":3,"endColumn":27},{"ruleId":"642","severity":1,"message":"744","line":7,"column":26,"nodeType":"644","messageId":"645","endLine":7,"endColumn":31},{"ruleId":"642","severity":1,"message":"677","line":13,"column":10,"nodeType":"644","messageId":"645","endLine":13,"endColumn":15},{"ruleId":"820","severity":1,"message":"821","line":100,"column":46,"nodeType":"822","messageId":"823","endLine":100,"endColumn":48},{"ruleId":"642","severity":1,"message":"689","line":5,"column":5,"nodeType":"644","messageId":"645","endLine":5,"endColumn":10},{"ruleId":"642","severity":1,"message":"808","line":2,"column":29,"nodeType":"644","messageId":"645","endLine":2,"endColumn":43},{"ruleId":"642","severity":1,"message":"809","line":2,"column":53,"nodeType":"644","messageId":"645","endLine":2,"endColumn":61},{"ruleId":"678","severity":1,"message":"824","line":28,"column":9,"nodeType":"675","endLine":28,"endColumn":11,"suggestions":"825"},{"ruleId":"649","severity":1,"message":"650","line":33,"column":23,"nodeType":"651","messageId":"652","endLine":33,"endColumn":24,"suggestions":"826"},{"ruleId":"649","severity":1,"message":"650","line":33,"column":48,"nodeType":"651","messageId":"652","endLine":33,"endColumn":49,"suggestions":"827"},{"ruleId":"642","severity":1,"message":"804","line":6,"column":24,"nodeType":"644","messageId":"645","endLine":6,"endColumn":30},{"ruleId":"678","severity":1,"message":"828","line":25,"column":8,"nodeType":"675","endLine":25,"endColumn":15,"suggestions":"829"},{"ruleId":"662","severity":1,"message":"663","line":15,"column":42,"nodeType":"664","messageId":"665","endLine":15,"endColumn":43,"fix":"830"},{"ruleId":"678","severity":1,"message":"831","line":28,"column":5,"nodeType":"675","endLine":28,"endColumn":7,"suggestions":"832"},{"ruleId":"660","severity":1,"message":"661","line":33,"column":6,"nodeType":"659","endLine":33,"endColumn":35},{"ruleId":"642","severity":1,"message":"833","line":39,"column":7,"nodeType":"644","messageId":"645","endLine":39,"endColumn":16},{"ruleId":"660","severity":1,"message":"661","line":51,"column":29,"nodeType":"659","endLine":51,"endColumn":52},{"ruleId":"642","severity":1,"message":"804","line":2,"column":24,"nodeType":"644","messageId":"645","endLine":2,"endColumn":30},{"ruleId":"642","severity":1,"message":"646","line":10,"column":11,"nodeType":"644","messageId":"645","endLine":10,"endColumn":18},{"ruleId":"662","severity":1,"message":"663","line":42,"column":37,"nodeType":"664","messageId":"665","endLine":42,"endColumn":38,"fix":"834"},{"ruleId":"702","severity":1,"message":"703","line":47,"column":41,"nodeType":"704","messageId":"705","endLine":47,"endColumn":43},{"ruleId":"642","severity":1,"message":"683","line":4,"column":3,"nodeType":"644","messageId":"645","endLine":4,"endColumn":8},{"ruleId":"642","severity":1,"message":"835","line":5,"column":3,"nodeType":"644","messageId":"645","endLine":5,"endColumn":12},{"ruleId":"642","severity":1,"message":"836","line":6,"column":3,"nodeType":"644","messageId":"645","endLine":6,"endColumn":13},{"ruleId":"642","severity":1,"message":"837","line":7,"column":3,"nodeType":"644","messageId":"645","endLine":7,"endColumn":14},{"ruleId":"642","severity":1,"message":"838","line":9,"column":3,"nodeType":"644","messageId":"645","endLine":9,"endColumn":8},{"ruleId":"642","severity":1,"message":"839","line":12,"column":3,"nodeType":"644","messageId":"645","endLine":12,"endColumn":16},{"ruleId":"642","severity":1,"message":"840","line":13,"column":3,"nodeType":"644","messageId":"645","endLine":13,"endColumn":16},{"ruleId":"642","severity":1,"message":"841","line":14,"column":3,"nodeType":"644","messageId":"645","endLine":14,"endColumn":16},{"ruleId":"642","severity":1,"message":"842","line":14,"column":17,"nodeType":"644","messageId":"645","endLine":14,"endColumn":30},{"ruleId":"642","severity":1,"message":"843","line":17,"column":10,"nodeType":"644","messageId":"645","endLine":17,"endColumn":19},{"ruleId":"642","severity":1,"message":"844","line":17,"column":21,"nodeType":"644","messageId":"645","endLine":17,"endColumn":31},{"ruleId":"678","severity":1,"message":"687","line":108,"column":7,"nodeType":"675","endLine":108,"endColumn":12,"suggestions":"845"},{"ruleId":"660","severity":1,"message":"661","line":126,"column":15,"nodeType":"659","endLine":126,"endColumn":88},{"ruleId":"642","severity":1,"message":"677","line":8,"column":12,"nodeType":"644","messageId":"645","endLine":8,"endColumn":17},{"ruleId":"642","severity":1,"message":"646","line":11,"column":11,"nodeType":"644","messageId":"645","endLine":11,"endColumn":18},{"ruleId":"846","severity":1,"message":"847","line":26,"column":5,"nodeType":"848","messageId":"849","endLine":26,"endColumn":17},{"ruleId":"846","severity":1,"message":"847","line":53,"column":5,"nodeType":"848","messageId":"849","endLine":53,"endColumn":17},{"ruleId":"850","severity":1,"message":"851","line":8,"column":9,"nodeType":"644","messageId":"852","endLine":8,"endColumn":16},{"ruleId":"850","severity":1,"message":"853","line":14,"column":9,"nodeType":"644","messageId":"852","endLine":14,"endColumn":17},{"ruleId":"854","severity":1,"message":"855","line":37,"column":14,"nodeType":"856","messageId":"857","endLine":37,"endColumn":25},{"ruleId":"854","severity":1,"message":"855","line":38,"column":17,"nodeType":"856","messageId":"857","endLine":38,"endColumn":28},{"ruleId":"702","severity":1,"message":"741","line":46,"column":22,"nodeType":"704","messageId":"705","endLine":46,"endColumn":24},{"ruleId":"702","severity":1,"message":"741","line":53,"column":15,"nodeType":"704","messageId":"705","endLine":53,"endColumn":17},{"ruleId":"702","severity":1,"message":"741","line":67,"column":15,"nodeType":"704","messageId":"705","endLine":67,"endColumn":17},{"ruleId":"702","severity":1,"message":"741","line":190,"column":27,"nodeType":"704","messageId":"705","endLine":190,"endColumn":29},{"ruleId":"702","severity":1,"message":"741","line":191,"column":32,"nodeType":"704","messageId":"705","endLine":191,"endColumn":34},{"ruleId":"702","severity":1,"message":"741","line":192,"column":33,"nodeType":"704","messageId":"705","endLine":192,"endColumn":35},{"ruleId":"850","severity":1,"message":"858","line":12,"column":13,"nodeType":"644","messageId":"852","endLine":12,"endColumn":14},{"ruleId":"702","severity":1,"message":"741","line":13,"column":13,"nodeType":"704","messageId":"705","endLine":13,"endColumn":15},{"ruleId":"702","severity":1,"message":"741","line":13,"column":25,"nodeType":"704","messageId":"705","endLine":13,"endColumn":27},{"ruleId":"702","severity":1,"message":"741","line":29,"column":21,"nodeType":"704","messageId":"705","endLine":29,"endColumn":23},{"ruleId":"702","severity":1,"message":"741","line":31,"column":32,"nodeType":"704","messageId":"705","endLine":31,"endColumn":34},{"ruleId":"702","severity":1,"message":"741","line":42,"column":18,"nodeType":"704","messageId":"705","endLine":42,"endColumn":20},{"ruleId":"702","severity":1,"message":"741","line":43,"column":16,"nodeType":"704","messageId":"705","endLine":43,"endColumn":18},{"ruleId":"702","severity":1,"message":"741","line":58,"column":16,"nodeType":"704","messageId":"705","endLine":58,"endColumn":18},{"ruleId":"702","severity":1,"message":"741","line":60,"column":32,"nodeType":"704","messageId":"705","endLine":60,"endColumn":34},{"ruleId":"702","severity":1,"message":"741","line":76,"column":18,"nodeType":"704","messageId":"705","endLine":76,"endColumn":20},{"ruleId":"702","severity":1,"message":"741","line":77,"column":17,"nodeType":"704","messageId":"705","endLine":77,"endColumn":19},{"ruleId":"702","severity":1,"message":"741","line":131,"column":9,"nodeType":"704","messageId":"705","endLine":131,"endColumn":11},{"ruleId":"702","severity":1,"message":"741","line":142,"column":33,"nodeType":"704","messageId":"705","endLine":142,"endColumn":35},{"ruleId":"846","severity":1,"message":"847","line":177,"column":3,"nodeType":"848","messageId":"849","endLine":177,"endColumn":10},{"ruleId":"702","severity":1,"message":"741","line":189,"column":23,"nodeType":"704","messageId":"705","endLine":189,"endColumn":25},{"ruleId":"702","severity":1,"message":"741","line":190,"column":13,"nodeType":"704","messageId":"705","endLine":190,"endColumn":15},{"ruleId":"854","severity":1,"message":"855","line":217,"column":19,"nodeType":"856","messageId":"857","endLine":217,"endColumn":30},{"ruleId":"854","severity":1,"message":"855","line":218,"column":14,"nodeType":"856","messageId":"857","endLine":218,"endColumn":25},{"ruleId":"854","severity":1,"message":"855","line":219,"column":27,"nodeType":"856","messageId":"857","endLine":219,"endColumn":38},{"ruleId":"702","severity":1,"message":"741","line":224,"column":39,"nodeType":"704","messageId":"705","endLine":224,"endColumn":41},{"ruleId":"702","severity":1,"message":"741","line":293,"column":20,"nodeType":"704","messageId":"705","endLine":293,"endColumn":22},{"ruleId":"702","severity":1,"message":"741","line":331,"column":19,"nodeType":"704","messageId":"705","endLine":331,"endColumn":21},{"ruleId":"702","severity":1,"message":"741","line":333,"column":30,"nodeType":"704","messageId":"705","endLine":333,"endColumn":32},{"ruleId":"702","severity":1,"message":"741","line":344,"column":16,"nodeType":"704","messageId":"705","endLine":344,"endColumn":18},{"ruleId":"702","severity":1,"message":"741","line":345,"column":14,"nodeType":"704","messageId":"705","endLine":345,"endColumn":16},{"ruleId":"702","severity":1,"message":"741","line":360,"column":14,"nodeType":"704","messageId":"705","endLine":360,"endColumn":16},{"ruleId":"702","severity":1,"message":"741","line":362,"column":30,"nodeType":"704","messageId":"705","endLine":362,"endColumn":32},{"ruleId":"702","severity":1,"message":"741","line":381,"column":16,"nodeType":"704","messageId":"705","endLine":381,"endColumn":18},{"ruleId":"702","severity":1,"message":"741","line":382,"column":15,"nodeType":"704","messageId":"705","endLine":382,"endColumn":17},{"ruleId":"702","severity":1,"message":"703","line":406,"column":16,"nodeType":"704","messageId":"705","endLine":406,"endColumn":18},{"ruleId":"854","severity":1,"message":"855","line":413,"column":17,"nodeType":"856","messageId":"857","endLine":413,"endColumn":28},{"ruleId":"854","severity":1,"message":"855","line":414,"column":12,"nodeType":"856","messageId":"857","endLine":414,"endColumn":23},{"ruleId":"854","severity":1,"message":"855","line":415,"column":25,"nodeType":"856","messageId":"857","endLine":415,"endColumn":36},{"ruleId":"850","severity":1,"message":"858","line":478,"column":11,"nodeType":"644","messageId":"852","endLine":478,"endColumn":12},{"ruleId":"702","severity":1,"message":"741","line":479,"column":11,"nodeType":"704","messageId":"705","endLine":479,"endColumn":13},{"ruleId":"702","severity":1,"message":"741","line":479,"column":23,"nodeType":"704","messageId":"705","endLine":479,"endColumn":25},{"ruleId":"702","severity":1,"message":"741","line":488,"column":20,"nodeType":"704","messageId":"705","endLine":488,"endColumn":22},{"ruleId":"642","severity":1,"message":"677","line":9,"column":12,"nodeType":"644","messageId":"645","endLine":9,"endColumn":17},{"ruleId":"660","severity":1,"message":"661","line":20,"column":29,"nodeType":"659","endLine":21,"endColumn":32},"no-native-reassign",["859"],"no-negated-in-lhs",["860"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'useContext' is defined but never used.","'Link' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["861","862"],["863","864"],"'useState' is defined but never used.","'instances' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"865","text":"866"},"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.",["867","868"],["869","870"],["859"],["860"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["871"],["872"],"'NavBar' is defined but never used.","'CCard' is defined but never used.","'Fade' is defined but never used.","'Widgets' is defined but never used.",{"range":"873","text":"874"},"React Hook useEffect has a missing dependency: 'pid'. Either include it or remove the dependency array.",["875"],"'Tfoot' is defined but never used.",["876","877"],["878","879"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'CContainer' is defined but never used.","'Questionset' is assigned a value but never used.","'setQuestion' is assigned a value but never used.","'item2' is assigned a value but never used.","'setitem' is assigned a value but never used.","'deleteoption' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useMemo' is defined but never used.","'useTable' is defined but never used.","'useGlobalFilter' is defined but never used.","'useFilters' is defined but never used.","'ReactTable' is defined but never used.","'ViewIcon' is defined but never used.","'Input' is defined but never used.","'ButtonGroup' is defined but never used.","'Box' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'Select' is defined but never used.","'PopoverFooter' is defined but never used.","'Table' is defined but never used.","'Thead' is defined but never used.","'Tbody' is defined but never used.","'Tr' is defined but never used.","'Th' is defined but never used.","'Td' is defined but never used.","'TableCaption' is defined but never used.","'setfilterfirstname' is assigned a value but never used.","'setfilterlastname' is assigned a value but never used.","'filtercountry' is assigned a value but never used.","'setfiltercountry' is assigned a value but never used.","'filterreligion' is assigned a value but never used.","'setfilterreligion' is assigned a value but never used.","'Currentuser' is assigned a value but never used.","'setcurrentuser' is assigned a value but never used.","'isloading' is assigned a value but never used.","'setloading' is assigned a value but never used.","'filterbyfirstname' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'userlist'. Either include it or remove the dependency array.",["880"],"'Image' is defined but never used.","'travelplanconut' is assigned a value but never used.","'setcount' is assigned a value but never used.","'rate' is assigned a value but never used.","'setrate' is assigned a value but never used.","'review' is assigned a value but never used.","'setreview' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["881"],["882","883"],["884","885"],["886"],"'list1' is assigned a value but never used.",{"range":"887","text":"866"},{"range":"888","text":"889"},{"range":"890","text":"889"},"React Hook useEffect has a missing dependency: 'pid.pid'. Either include it or remove the dependency array.",["891"],"'viewitem' is assigned a value but never used.","'Text' is defined but never used.","'setRate' is assigned a value but never used.",{"range":"892","text":"866"},{"range":"893","text":"889"},"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'BoxProps' is defined but never used.","'FlexProps' is defined but never used.","'BellIcon' is defined but never used.","'SmallAddIcon' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useRef' is defined but never used.","'Button' is defined but never used.","'Avatar' is defined but never used.","'Skeleton' is defined but never used.","'AlertDialog' is defined but never used.","'AlertDialogBody' is defined but never used.","'AlertDialogFooter' is defined but never used.","'AlertDialogHeader' is defined but never used.","'AlertDialogContent' is defined but never used.","'AlertDialogOverlay' is defined but never used.","'useToast' is defined but never used.","'dispatch' is assigned a value but never used.","'accomodation' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'MenuItemOption' is defined but never used.","'MenuGroup' is defined but never used.","'MenuOptionGroup' is defined but never used.","'MenuIcon' is defined but never used.","'MenuCommand' is defined but never used.",{"range":"894","text":"895"},{"range":"896","text":"895"},"'InfoWindow' is defined but never used.","'DirectionsRenderer' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["897"],"'setDays' is assigned a value but never used.","'setReligion' is assigned a value but never used.","'VStack' is defined but never used.","React Hook useEffect has a missing dependency: 'day'. Either include it or remove the dependency array.",["898"],{"range":"899","text":"889"},"'InputLeftAddon' is defined but never used.","'Checkbox' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'state._id'. Either include them or remove the dependency array.",["900"],["901","902"],["903","904"],"'AiOutlineStar' is defined but never used.",{"range":"905","text":"889"},"React Hook useEffect has a missing dependency: 'state.planId'. Either include it or remove the dependency array.",["906"],{"range":"907","text":"889"},{"range":"908","text":"889"},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'history' and 'state'. Either include them or remove the dependency array.",["909"],["910","911"],["912","913"],"React Hook useEffect has missing dependencies: 'index' and 'index1'. Either include them or remove the dependency array.",["914"],{"range":"915","text":"874"},"React Hook useEffect has missing dependencies: 'ima' and 'pid'. Either include them or remove the dependency array.",["916"],"'Carousal1' is assigned a value but never used.",{"range":"917","text":"889"},"'CCardBody' is defined but never used.","'CCardGroup' is defined but never used.","'CCardHeader' is defined but never used.","'CLink' is defined but never used.","'CWidgetStatsC' is defined but never used.","'CWidgetStatsE' is defined but never used.","'CWidgetStatsF' is defined but never used.","'CWidgetStatsD' is defined but never used.","'CChartBar' is defined but never used.","'CChartLine' is defined but never used.",["918"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-redeclare","'climate' is already defined.","redeclared","'religion' is already defined.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'k' is already defined.","no-global-assign","no-unsafe-negation",{"messageId":"919","fix":"920","desc":"921"},{"messageId":"922","fix":"923","desc":"924"},{"messageId":"919","fix":"925","desc":"921"},{"messageId":"922","fix":"926","desc":"924"},[180,191],"\r\n        .",{"messageId":"919","fix":"927","desc":"921"},{"messageId":"922","fix":"928","desc":"924"},{"messageId":"919","fix":"929","desc":"921"},{"messageId":"922","fix":"930","desc":"924"},{"desc":"931","fix":"932"},{"desc":"931","fix":"933"},[529,537],"\r\n     .",{"desc":"934","fix":"935"},{"messageId":"919","fix":"936","desc":"921"},{"messageId":"922","fix":"937","desc":"924"},{"messageId":"919","fix":"938","desc":"921"},{"messageId":"922","fix":"939","desc":"924"},{"desc":"940","fix":"941"},{"desc":"942","fix":"943"},{"messageId":"919","fix":"944","desc":"921"},{"messageId":"922","fix":"945","desc":"924"},{"messageId":"919","fix":"946","desc":"921"},{"messageId":"922","fix":"947","desc":"924"},{"desc":"934","fix":"948"},[1460,1471],[2162,2177],"\r\n            .",[2943,2958],{"desc":"949","fix":"950"},[583,594],[1039,1054],[625,637],"\r\n         .",[670,682],{"desc":"951","fix":"952"},{"desc":"953","fix":"954"},[517,532],{"desc":"955","fix":"956"},{"messageId":"919","fix":"957","desc":"921"},{"messageId":"922","fix":"958","desc":"924"},{"messageId":"919","fix":"959","desc":"921"},{"messageId":"922","fix":"960","desc":"924"},[1224,1239],{"desc":"961","fix":"962"},[2002,2017],[2667,2682],{"desc":"942","fix":"963"},{"messageId":"919","fix":"964","desc":"921"},{"messageId":"922","fix":"965","desc":"924"},{"messageId":"919","fix":"966","desc":"921"},{"messageId":"922","fix":"967","desc":"924"},{"desc":"968","fix":"969"},[560,568],{"desc":"970","fix":"971"},[1337,1352],{"desc":"972","fix":"973"},"removeEscape",{"range":"974","text":"975"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"976","text":"977"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"978","text":"975"},{"range":"979","text":"977"},{"range":"980","text":"975"},{"range":"981","text":"977"},{"range":"982","text":"975"},{"range":"983","text":"977"},"Update the dependencies array to be: [dispatch, history]",{"range":"984","text":"985"},{"range":"986","text":"985"},"Update the dependencies array to be: [pid]",{"range":"987","text":"988"},{"range":"989","text":"975"},{"range":"990","text":"977"},{"range":"991","text":"975"},{"range":"992","text":"977"},"Update the dependencies array to be: [userlist]",{"range":"993","text":"994"},"Update the dependencies array to be: [history, state]",{"range":"995","text":"996"},{"range":"997","text":"975"},{"range":"998","text":"977"},{"range":"999","text":"975"},{"range":"1000","text":"977"},{"range":"1001","text":"988"},"Update the dependencies array to be: [pid.pid]",{"range":"1002","text":"1003"},"Update the dependencies array to be: [dispatch, state]",{"range":"1004","text":"1005"},"Update the dependencies array to be: [day, state]",{"range":"1006","text":"1007"},"Update the dependencies array to be: [history, state._id]",{"range":"1008","text":"1009"},{"range":"1010","text":"975"},{"range":"1011","text":"977"},{"range":"1012","text":"975"},{"range":"1013","text":"977"},"Update the dependencies array to be: [state.planId]",{"range":"1014","text":"1015"},{"range":"1016","text":"996"},{"range":"1017","text":"975"},{"range":"1018","text":"977"},{"range":"1019","text":"975"},{"range":"1020","text":"977"},"Update the dependencies array to be: [index, index1, state]",{"range":"1021","text":"1022"},"Update the dependencies array to be: [ima, pid]",{"range":"1023","text":"1024"},"Update the dependencies array to be: [pid, url]",{"range":"1025","text":"1026"},[430,431],"",[430,430],"\\",[455,456],[455,455],[1171,1172],[1171,1171],[1196,1197],[1196,1196],[1341,1343],"[dispatch, history]",[1547,1549],[781,783],"[pid]",[1306,1307],[1306,1306],[1331,1332],[1331,1331],[3769,3771],"[userlist]",[805,812],"[history, state]",[881,882],[881,881],[906,907],[906,906],[1492,1494],[1533,1535],"[pid.pid]",[2070,2077],"[dispatch, state]",[928,935],"[day, state]",[827,829],"[history, state._id]",[1235,1236],[1235,1235],[1260,1261],[1260,1260],[1623,1625],"[state.planId]",[917,919],[972,973],[972,972],[997,998],[997,997],[986,993],"[index, index1, state]",[838,840],"[ima, pid]",[2778,2783],"[pid, url]"]