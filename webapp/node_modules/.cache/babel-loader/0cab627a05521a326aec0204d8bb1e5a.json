{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 5 project travel guide app\\\\Smart-travel-guide-app\\\\adminportal\\\\src\\\\screens\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport M from 'materialize-css';\nimport NavBar from '../components/navbar';\nimport { chakra, Box, useColorModeValue, SimpleGrid, GridItem, Stack, FormControl, FormLabel, Input, Button, Heading } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const history = useHistory();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPasword] = useState(\"\");\n  const [email, setEmail] = useState(\"\"); // useEffect(()=>{\n  //     if(url){\n  //         uploadFields()\n  //     }\n  // },[url])\n  // const uploadPic = ()=>{\n  //     const data = new FormData()\n  //     data.append(\"file\",image)\n  //     data.append(\"upload_preset\",\"new-insta\")\n  //     data.append(\"cloud_name\",\"cnq\")\n  //     fetch(\"https://api.cloudinary.com/v1_1/cnq/image/upload\",{\n  //         method:\"post\",\n  //         body:data\n  //     })\n  //     .then(res=>res.json())\n  //     .then(data=>{\n  //        setUrl(data.url)\n  //     })\n  //     .catch(err=>{\n  //         console.log(err)\n  //     })\n  // }\n\n  const postData = () => {\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      M.toast({\n        html: \"invalid email\",\n        classes: \"#c62828 red darken-3\"\n      });\n      return;\n    }\n\n    fetch(\"/admin/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstname: firstName,\n        lastname: lastName,\n        dob,\n        username,\n        password,\n        email\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"#c62828 red darken-3\"\n        });\n      } else {\n        M.toast({\n          html: data.message,\n          classes: \"#43a047 green darken-1\"\n        });\n        history.push('/admin/viewAdmins');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NavBar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: useColorModeValue(\"gray.50\", \"inherit\"),\n        p: 10,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          visibility: {\n            base: \"hidden\",\n            sm: \"visible\"\n          },\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            py: 5,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              borderTop: \"solid 1px\",\n              borderTopColor: useColorModeValue(\"gray.200\", \"whiteAlpha.200\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: [10, 0],\n          children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            display: {\n              base: \"initial\",\n              md: \"grid\"\n            },\n            columns: {\n              md: 3\n            },\n            spacing: {\n              md: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              mt: [5, null, 0],\n              colSpan: {\n                md: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(chakra.form, {\n                method: \"POST\",\n                shadow: \"base\",\n                rounded: [null, \"md\"],\n                overflow: {\n                  sm: \"hidden\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  px: 4,\n                  py: 5,\n                  p: [null, 6],\n                  bg: useColorModeValue(\"white\", \"gray.700\"),\n                  spacing: 6,\n                  children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n                    columns: 6,\n                    spacing: 6,\n                    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                      as: GridItem,\n                      colSpan: [6, 3],\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        htmlFor: \"first_name\",\n                        fontSize: \"sm\",\n                        fontWeight: \"md\",\n                        color: useColorModeValue(\"gray.700\", \"gray.50\"),\n                        children: \"First name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        name: \"first_name\",\n                        id: \"first_name\",\n                        autoComplete: \"given-name\",\n                        mt: 1,\n                        focusBorderColor: \"brand.400\",\n                        shadow: \"sm\",\n                        size: \"sm\",\n                        w: \"full\",\n                        rounded: \"md\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      as: GridItem,\n                      colSpan: [6, 3],\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        htmlFor: \"last_name\",\n                        fontSize: \"sm\",\n                        fontWeight: \"md\",\n                        color: useColorModeValue(\"gray.700\", \"gray.50\"),\n                        children: \"Last name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        name: \"last_name\",\n                        id: \"last_name\",\n                        autoComplete: \"family-name\",\n                        mt: 1,\n                        focusBorderColor: \"brand.400\",\n                        shadow: \"sm\",\n                        size: \"sm\",\n                        w: \"full\",\n                        rounded: \"md\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      as: GridItem,\n                      colSpan: [6, 3],\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        htmlFor: \"email_address\",\n                        fontSize: \"sm\",\n                        fontWeight: \"md\",\n                        color: useColorModeValue(\"gray.700\", \"gray.50\"),\n                        children: \"Email address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        name: \"email_address\",\n                        id: \"email_address\",\n                        autoComplete: \"email\",\n                        mt: 1,\n                        focusBorderColor: \"brand.400\",\n                        shadow: \"sm\",\n                        size: \"sm\",\n                        w: \"full\",\n                        rounded: \"md\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      as: GridItem,\n                      colSpan: (6, 3),\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        htmlFor: \"password\",\n                        fontSize: \"sm\",\n                        fontWeight: \"md\",\n                        color: useColorModeValue(\"gray.700\", \"gray.50\"),\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"password\",\n                        name: \"password\",\n                        id: \"password\",\n                        autoComplete: \"email\",\n                        mt: 1,\n                        focusBorderColor: \"brand.400\",\n                        shadow: \"sm\",\n                        size: \"sm\",\n                        w: \"full\",\n                        rounded: \"md\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      as: GridItem,\n                      colSpan: (6, 3),\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        htmlFor: \"dob\",\n                        fontSize: \"sm\",\n                        fontWeight: \"md\",\n                        color: useColorModeValue(\"gray.700\", \"gray.50\"),\n                        children: \"Birthday\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"date\",\n                        name: \"Date of Birth\",\n                        id: \"dob\",\n                        autoComplete: \"dob\",\n                        mt: 1,\n                        focusBorderColor: \"brand.400\",\n                        shadow: \"sm\",\n                        size: \"sm\",\n                        w: \"full\",\n                        rounded: \"md\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  px: {\n                    base: 4,\n                    sm: 6\n                  },\n                  py: 3,\n                  bg: useColorModeValue(\"gray.50\", \"gray.900\"),\n                  textAlign: \"right\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    colorScheme: \"blue\",\n                    _focus: {\n                      shadow: \"\"\n                    },\n                    fontWeight: \"md\",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          visibility: {\n            base: \"hidden\",\n            sm: \"visible\"\n          },\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            py: 5,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              borderTop: \"solid 1px\",\n              borderTopColor: useColorModeValue(\"gray.200\", \"whiteAlpha.200\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"TKO9njPmslP2/e9jOS+HgA0njMA=\", false, function () {\n  return [useHistory, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c = SignUp;\nexport default SignUp; // <div className=\"mycard\">\n//           <div className=\"card auth-card input-field\">\n//             <h2>Travel Guide App</h2>\n//             <input\n//             type=\"text\"\n//             placeholder=\"first name\"\n//             value={firstName}\n//             onChange={(e)=>setFirstName(e.target.value)}\n//             />\n//             <input\n//             type=\"text\"\n//             placeholder=\"last name\"\n//             value={lastName}\n//             onChange={(e)=>setLastName(e.target.value)}\n//             />\n//             <input\n//             type=\"date\"\n//             placeholder=\"DOB\"\n//             value={dob}\n//             onChange={(e)=>setDob(e.target.value)}\n//             />\n//             <input\n//             type=\"text\"\n//             placeholder=\"email\"\n//             value={email}\n//             onChange={(e)=>setEmail(e.target.value)}\n//             />\n//             <input\n//             type=\"text\"\n//             placeholder=\"username\"\n//             value={username}\n//             onChange={(e)=>setUsername(e.target.value)}\n//             />\n//             <input\n//             type=\"password\"\n//             placeholder=\"password\"\n//             value={password}\n//             onChange={(e)=>setPasword(e.target.value)}\n//             />\n//             {/* <div className=\"file-field input-field\">\n//             <div className=\"btn #64b5f6 blue darken-1\">\n//                 <span>Upload pic</span>\n//                 <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\n//             </div>\n//             <div className=\"file-path-wrapper\">\n//                 <input className=\"file-path validate\" type=\"text\" />\n//             </div>\n//             </div> */}\n//             <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>postData()}>\n//                 Add\n//             </button>\n//         </div>\n//       </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/screens/Register.js"],"names":["React","useState","useEffect","Link","useHistory","M","NavBar","chakra","Box","useColorModeValue","SimpleGrid","GridItem","Stack","FormControl","FormLabel","Input","Button","Heading","SignUp","history","firstName","setFirstName","lastName","setLastName","dob","setDob","username","setUsername","password","setPasword","email","setEmail","postData","test","toast","html","classes","fetch","method","headers","body","JSON","stringify","firstname","lastname","then","res","json","data","error","message","push","catch","err","console","log","base","sm","md","shadow"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport NavBar from '../components/navbar'\r\nimport {\r\n    chakra,\r\n    Box,\r\n    useColorModeValue,\r\n    SimpleGrid,\r\n    GridItem,\r\n    Stack,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    Heading,\r\n    \r\n  } from \"@chakra-ui/react\";\r\nconst SignUp  = ()=>{\r\n    const history = useHistory()\r\n    const [firstName,setFirstName] = useState(\"\")\r\n    const [lastName,setLastName] = useState(\"\")\r\n    const [dob, setDob]=useState(\"\")\r\n    const [username,setUsername]=useState(\"\")\r\n    const [password,setPasword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    \r\n\r\n    // useEffect(()=>{\r\n    //     if(url){\r\n    //         uploadFields()\r\n    //     }\r\n    // },[url])\r\n    // const uploadPic = ()=>{\r\n    //     const data = new FormData()\r\n    //     data.append(\"file\",image)\r\n    //     data.append(\"upload_preset\",\"new-insta\")\r\n    //     data.append(\"cloud_name\",\"cnq\")\r\n    //     fetch(\"https://api.cloudinary.com/v1_1/cnq/image/upload\",{\r\n    //         method:\"post\",\r\n    //         body:data\r\n    //     })\r\n    //     .then(res=>res.json())\r\n    //     .then(data=>{\r\n    //        setUrl(data.url)\r\n    //     })\r\n    //     .catch(err=>{\r\n    //         console.log(err)\r\n    //     })\r\n    // }\r\n    const postData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/admin/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                firstname:firstName,\r\n                lastname:lastName,\r\n                dob,\r\n                username,\r\n                password,\r\n                email,\r\n            \r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/admin/viewAdmins')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n\r\n   return (\r\n      <>\r\n      \r\n      <NavBar>\r\n                    <Box bg={useColorModeValue(\"gray.50\", \"inherit\")} p={10}>\r\n                    \r\n                    <Box visibility={{ base: \"hidden\", sm: \"visible\" }} aria-hidden=\"true\">\r\n                        <Box py={5}>\r\n                        <Box\r\n                            borderTop=\"solid 1px\"\r\n                            borderTopColor={useColorModeValue(\"gray.200\", \"whiteAlpha.200\")}\r\n                        ></Box>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box mt={[10, 0]}>\r\n                        <Heading></Heading>\r\n                        <SimpleGrid\r\n                        display={{ base: \"initial\", md: \"grid\" }}\r\n                        columns={{ md: 3 }}\r\n                        spacing={{ md: 6 }}\r\n                        >\r\n                        \r\n                        <GridItem mt={[5, null, 0]} colSpan={{ md: 2 }}>\r\n                            <chakra.form\r\n\r\n                            method=\"POST\"\r\n                            shadow=\"base\"\r\n                            rounded={[null, \"md\"]}\r\n                            overflow={{ sm: \"hidden\" }}\r\n                            >\r\n                            <Stack\r\n                                px={4}\r\n                                py={5}\r\n                                p={[null, 6]}\r\n                                bg={useColorModeValue(\"white\", \"gray.700\")}\r\n                                spacing={6}\r\n                            >\r\n                                <SimpleGrid columns={6} spacing={6}>\r\n                                <FormControl as={GridItem} colSpan={[6, 3]}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"first_name\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    First name\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"text\"\r\n                                    name=\"first_name\"\r\n                                    id=\"first_name\"\r\n                                    autoComplete=\"given-name\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl as={GridItem} colSpan={[6, 3]}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"last_name\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Last name\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"text\"\r\n                                    name=\"last_name\"\r\n                                    id=\"last_name\"\r\n                                    autoComplete=\"family-name\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl as={GridItem} colSpan={[6, 3]}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"email_address\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Email address\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"text\"\r\n                                    name=\"email_address\"\r\n                                    id=\"email_address\"\r\n                                    autoComplete=\"email\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl as={GridItem} colSpan={6,3}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"password\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Password\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"email\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                \r\n\r\n                                <FormControl as={GridItem} colSpan={6,3}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"dob\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Birthday\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"date\"\r\n                                    name=\"Date of Birth\"\r\n                                    id=\"dob\"\r\n                                    autoComplete=\"dob\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                \r\n                                </SimpleGrid>\r\n                            </Stack>\r\n                            <Box\r\n                                px={{ base: 4, sm: 6 }}\r\n                                py={3}\r\n                                bg={useColorModeValue(\"gray.50\", \"gray.900\")}\r\n                                textAlign=\"right\"\r\n                            >\r\n                                <Button\r\n                                type=\"submit\"\r\n                                colorScheme=\"blue\"\r\n                                _focus={{ shadow: \"\" }}\r\n                                fontWeight=\"md\"\r\n                                >\r\n                                Save\r\n                                </Button>\r\n                            </Box>\r\n                            </chakra.form>\r\n                        </GridItem>\r\n                        </SimpleGrid>\r\n                    </Box>\r\n\r\n                    <Box visibility={{ base: \"hidden\", sm: \"visible\" }} aria-hidden=\"true\">\r\n                        <Box py={5}>\r\n                        <Box\r\n                            borderTop=\"solid 1px\"\r\n                            borderTopColor={useColorModeValue(\"gray.200\", \"whiteAlpha.200\")}\r\n                        ></Box>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    \r\n                    </Box>\r\n      </NavBar>\r\n      \r\n      \r\n      </>\r\n   )\r\n}\r\n\r\n\r\nexport default SignUp\r\n\r\n\r\n// <div className=\"mycard\">\r\n//           <div className=\"card auth-card input-field\">\r\n//             <h2>Travel Guide App</h2>\r\n//             <input\r\n//             type=\"text\"\r\n//             placeholder=\"first name\"\r\n//             value={firstName}\r\n//             onChange={(e)=>setFirstName(e.target.value)}\r\n//             />\r\n//             <input\r\n//             type=\"text\"\r\n//             placeholder=\"last name\"\r\n//             value={lastName}\r\n//             onChange={(e)=>setLastName(e.target.value)}\r\n//             />\r\n//             <input\r\n//             type=\"date\"\r\n//             placeholder=\"DOB\"\r\n//             value={dob}\r\n//             onChange={(e)=>setDob(e.target.value)}\r\n//             />\r\n//             <input\r\n//             type=\"text\"\r\n//             placeholder=\"email\"\r\n//             value={email}\r\n//             onChange={(e)=>setEmail(e.target.value)}\r\n//             />\r\n//             <input\r\n//             type=\"text\"\r\n//             placeholder=\"username\"\r\n//             value={username}\r\n//             onChange={(e)=>setUsername(e.target.value)}\r\n//             />\r\n//             <input\r\n//             type=\"password\"\r\n//             placeholder=\"password\"\r\n//             value={password}\r\n//             onChange={(e)=>setPasword(e.target.value)}\r\n//             />\r\n//             {/* <div className=\"file-field input-field\">\r\n//             <div className=\"btn #64b5f6 blue darken-1\">\r\n//                 <span>Upload pic</span>\r\n//                 <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n//             </div>\r\n//             <div className=\"file-path-wrapper\">\r\n//                 <input className=\"file-path validate\" type=\"text\" />\r\n//             </div>\r\n//             </div> */}\r\n//             <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>postData()}>\r\n//                 Add\r\n//             </button>\r\n           \r\n             \r\n               \r\n         \r\n            \r\n    \r\n//         </div>\r\n//       </div>"]},"metadata":{},"sourceType":"module"}