{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 5 project travel guide app\\\\Smart-travel-guide-app\\\\adminportal\\\\src\\\\components\\\\description.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport M from 'materialize-css';\nimport { Textarea } from \"@chakra-ui/react\";\nimport { Button } from '@chakra-ui/button';\nimport { Flex } from '@chakra-ui/layout';\nimport { EditIcon, CloseIcon, CheckIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Description = ({\n  des,\n  pid\n}) => {\n  _s();\n\n  useEffect(() => setDescription1(des), [des]);\n  const [description1, setDescription1] = useState(\"\");\n  const [edit, setEdit] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n\n  const updateDescription = () => {\n    setLoading(true);\n    fetch(\"/admin/descriptionUpdate\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        description: description1,\n        pid: pid\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.message) {\n        setDescription1(data.result.description);\n        M.toast({\n          html: data.message,\n          classes: \"#c62828 red darken-3\"\n        });\n        setLoading(false);\n        setEdit(true);\n      }\n\n      if (data.error) {\n        M.toast({\n          html: data.message,\n          classes: \"#c62828 red darken-3\"\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      padding: 5,\n      children: [/*#__PURE__*/_jsxDEV(Textarea, {\n        style: {\n          marginTop: 15,\n          padding: 10\n        },\n        value: description1,\n        placeholder: \"type description here\",\n        isDisabled: setEdit,\n        onChange: e => {\n          setDescription1(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: \"10\",\n        children: edit ? /*#__PURE__*/_jsxDEV(Button, {\n          leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 34\n          }, this),\n          colorScheme: \"teal\",\n          variant: \"solid\",\n          onClick: () => setEdit(false),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            leftIcon: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this),\n            isLoading: isLoading,\n            loadingText: \"saving\",\n            colorScheme: \"teal\",\n            variant: \"solid\",\n            onClick: () => updateDescription(),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 8\n          }, this), !isLoading ? /*#__PURE__*/_jsxDEV(Button, {\n            leftIcon: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 40\n            }, this),\n            colorScheme: \"teal\",\n            variant: \"solid\",\n            onClick: () => setEdit(true),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Description, \"82ryfT+8h5uNhxmeMPzJ9WNM/Y0=\");\n\n_c = Description;\n\nvar _c;\n\n$RefreshReg$(_c, \"Description\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/components/description.js"],"names":["React","useState","useEffect","M","Textarea","Button","Flex","EditIcon","CloseIcon","CheckIcon","Description","des","pid","setDescription1","description1","edit","setEdit","isLoading","setLoading","updateDescription","fetch","method","headers","body","JSON","stringify","description","then","res","json","data","console","log","message","result","toast","html","classes","error","catch","err","marginTop","padding","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport M from 'materialize-css'\r\nimport { Textarea } from \"@chakra-ui/react\"\r\nimport { Button } from '@chakra-ui/button'\r\nimport {  Flex   } from '@chakra-ui/layout'\r\nimport {  EditIcon, CloseIcon , CheckIcon} from '@chakra-ui/icons'\r\n\r\n\r\n\r\nexport const Description=({des, pid})=>{\r\n    useEffect(()=>\r\n      setDescription1(des),[des])\r\n  \r\n  \r\n    const [description1, setDescription1]=useState(\"\")\r\n    const [edit, setEdit]=useState(true)\r\n    const [isLoading,setLoading]=useState(false)\r\n  \r\n    \r\n  \r\n    const updateDescription=()=>{\r\n        setLoading(true)\r\n  \r\n        fetch(\"/admin/descriptionUpdate\",{\r\n          method:\"post\",\r\n          headers:{\r\n              \"Content-Type\":\"application/json\",\r\n          },\r\n          body:JSON.stringify({\r\n              description:description1,\r\n              pid:pid,\r\n          })\r\n      }).then(res=>res.json())\r\n      .then(data=>{\r\n        console.log(data)\r\n        if(data.message){\r\n            setDescription1(data.result.description)\r\n  \r\n            M.toast({html: data.message,classes:\"#c62828 red darken-3\"})\r\n            setLoading(false)\r\n            setEdit(true)\r\n  \r\n  \r\n        }\r\n        if (data.error){\r\n          M.toast({html: data.message,classes:\"#c62828 red darken-3\"})\r\n        }\r\n        \r\n      }).catch(err=>{\r\n          console.log(err)\r\n      })\r\n    }\r\n  \r\n    return(\r\n      <>\r\n      <Flex flexDirection=\"column\" justifyContent=\"center\" padding={5}>\r\n      <Textarea style={{marginTop:15, padding:10}} value={description1} placeholder=\"type description here\" isDisabled={setEdit} onChange={(e)=>{ setDescription1(e.target.value); }}></Textarea>\r\n      \r\n      <Flex flexDirection=\"row\" justifyContent=\"space-between\" padding=\"10\" >\r\n     \r\n      { edit ? <Button leftIcon={<EditIcon /> } colorScheme=\"teal\" variant=\"solid\" onClick={()=>setEdit(false)}>\r\n       Edit\r\n      </Button> : \r\n      <>\r\n       <Button \r\n      leftIcon={<CheckIcon /> }\r\n      isLoading={isLoading}\r\n      loadingText=\"saving\" colorScheme=\"teal\" variant=\"solid\" onClick={()=>updateDescription()}>\r\n       Save\r\n      </Button>\r\n  \r\n      {!isLoading ?  <Button leftIcon={<CloseIcon /> } colorScheme=\"teal\" variant=\"solid\" onClick={()=>setEdit(true)}>\r\n       Cancel\r\n      </Button> : <></>}\r\n      \r\n      </>\r\n      \r\n      \r\n      } \r\n      </Flex>\r\n  \r\n      </Flex>\r\n      </>\r\n    )\r\n   \r\n  }\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}