{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 5 project travel guide app\\\\Smart-travel-guide-app\\\\adminportal\\\\src\\\\screens\\\\TravelPlanApp\\\\Myplans.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport { Flex, HStack, VStack } from \"@chakra-ui/layout\";\nimport { Button, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay } from \"@chakra-ui/react\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { useHistory } from \"react-router\";\nimport { PlanCard } from \"../../components/TravelPlanApp/planCard,\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MyPlans = () => {\n  _s();\n\n  const [plans, setPlans] = useState([]);\n  const history = useHistory();\n  const [pid, setPID] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onClose = () => setIsOpen(false);\n\n  const cancelRef = useRef();\n  useEffect(() => {\n    fetch('/user/getTravelPlans').then(res => res.json()).then(result => {\n      console.log(result);\n      setPlans(result.myPlans);\n    });\n  }, []);\n\n  const deleteAleart = planId => {\n    console.log(planId);\n    setIsOpen(true);\n    setPID(planId);\n  };\n\n  const deletePlan = () => {\n    fetch('/user/deleteTravelPlan', {\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        planId: pid\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.data) {\n        setIsOpen(false);\n        setPlans;\n      }\n\n      console.log(result);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AlertDialog, {\n      isOpen: isOpen,\n      leastDestructiveRef: cancelRef,\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n        children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n            fontSize: \"lg\",\n            fontWeight: \"bold\",\n            children: \"Delete Travel Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n            children: \"Are you sure? You can't undo this action afterwards.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              ref: cancelRef,\n              onClick: onClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: () => {\n                deletePlan();\n              },\n              ml: 3,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: plans.map((plan, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            p: 3,\n            children: /*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                colorScheme: \"red\",\n                onClick: () => {\n                  deleteAleart(plan._id);\n                },\n                children: /*#__PURE__*/_jsxDEV(AiOutlineDelete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 32\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(PlanCard, {\n                _id: plan._id,\n                name: plan.name ? plan.name : `My plan ${index + 1}`,\n                days: plan.travelPlan[0].length,\n                createdDate: plan.createdAt,\n                travelPlan: plan.travelPlan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 26\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(MyPlans, \"RZI5I3yHMfc6JFwwsbS652m27Cs=\", false, function () {\n  return [useHistory];\n});\n\n_c = MyPlans;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPlans\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/screens/TravelPlanApp/Myplans.js"],"names":["useState","useRef","useEffect","Flex","HStack","VStack","Button","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","AiOutlineDelete","useHistory","PlanCard","MyPlans","plans","setPlans","history","pid","setPID","isOpen","setIsOpen","onClose","cancelRef","fetch","then","res","json","result","console","log","myPlans","deleteAleart","planId","deletePlan","method","headers","body","JSON","stringify","data","catch","e","map","plan","index","_id","name","travelPlan","length","createdAt"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { Flex, HStack, VStack } from \"@chakra-ui/layout\"\r\nimport { Button, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay,} from \"@chakra-ui/react\"\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { useHistory } from \"react-router\"\r\nimport { PlanCard } from \"../../components/TravelPlanApp/planCard,\";\r\n\r\nexport const MyPlans=()=>{\r\n    const [plans,setPlans]=useState([])\r\n    const history=useHistory()\r\n    const [pid,setPID]=useState(\"\")\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const cancelRef = useRef()\r\n    \r\n   \r\n\r\n    useEffect(()=>{\r\n\r\n        fetch('/user/getTravelPlans').then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setPlans(result.myPlans)\r\n        })\r\n\r\n     },[])\r\n\r\n     const deleteAleart=(planId)=>{\r\n            console.log(planId)\r\n            setIsOpen(true)\r\n            setPID(planId)\r\n     }\r\n     const deletePlan=()=>{\r\n        fetch('/user/deleteTravelPlan',{\r\n            method:\"delete\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                planId:pid})\r\n            }).then(res=>res.json()).\r\n            then(result=>{\r\n                if(result.data){\r\n                    setIsOpen(false)\r\n                    setPlans\r\n                }\r\n                \r\n                console.log(result)\r\n            })\r\n            .catch((e)=>{\r\n                console.log(e)\r\n            })\r\n        \r\n     }\r\n\r\n    return(\r\n        <>\r\n                <AlertDialog\r\n                isOpen={isOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n            >\r\n                <AlertDialogOverlay>\r\n                <AlertDialogContent>\r\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                    Delete Travel Plan\r\n                    </AlertDialogHeader>\r\n\r\n                    <AlertDialogBody>\r\n                    Are you sure? You can't undo this action afterwards.\r\n                    </AlertDialogBody>\r\n\r\n                    <AlertDialogFooter>\r\n                    <Button ref={cancelRef} onClick={onClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button colorScheme=\"red\" onClick={()=>{\r\n                        deletePlan();\r\n                    }} ml={3}>\r\n                        Delete\r\n                    </Button>\r\n                    </AlertDialogFooter>\r\n                </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n            </AlertDialog>\r\n        \r\n            <>\r\n            \r\n            {plans.map((plan,index)=>{\r\n                    return(\r\n                        <>\r\n                         <Flex flexDirection=\"column\" alignItems=\"center\" p={3}>\r\n                            <HStack>\r\n\r\n                            <Button colorScheme=\"red\" onClick={()=>{\r\n                                deleteAleart(plan._id)\r\n                                \r\n                            }}><AiOutlineDelete /></Button>\r\n                                  <PlanCard _id={plan._id} name={plan.name ? plan.name : `My plan ${index+1}`} days={plan.travelPlan[0].length} createdDate={plan.createdAt} travelPlan={plan.travelPlan}/>\r\n\r\n                            </HStack>\r\n                         </Flex>\r\n                        </>\r\n                    )\r\n            })}\r\n            \r\n            \r\n            </>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}