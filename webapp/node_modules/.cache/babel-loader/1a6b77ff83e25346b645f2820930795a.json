{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 5 project travel guide app\\\\Smart-travel-guide-app\\\\adminportal\\\\src\\\\screens\\\\testPage.js\";\n// import React, { useState, useRef,useEffect } from 'react'\n// import 'photoswipe/dist/photoswipe.css'\n// import 'photoswipe/dist/default-skin/default-skin.css'\n// import M from 'materialize-css'\n// import PhotoswipeUIDefault from 'photoswipe/dist/photoswipe-ui-default'\n// import { CustomGallery, Item, DefaultLayout } from 'react-photoswipe-gallery'\n// import { Button } from '@chakra-ui/button'\n// import { Box, Flex } from '@chakra-ui/layout'\n// import NavBar from '../components/navbar'\n// import { DeleteIcon,ArrowUpIcon } from '@chakra-ui/icons'\n// export const TestPage = () => {\n//   const [ima,setIma]=useState([])\n//   useEffect(()=>{\n//      fetch(\"/admin/getProvinceData/p1\").\n//      then(res=>res.json())\n//      .then(data=>{\n//         console.log(data.images)\n//         setIma(data.images)\n//      }).catch(err=>{\n//          console.log(err)\n//      })\n//   },[])\n//   return (\n//    <NavBar>\n//      <>\n//      <Galary imarr={ima} pid=\"p1\" />\n//      </>\n//    </NavBar>\n//   )\n// }\n// const Galary=({pid,imarr,...props})=>{\n//   useEffect(()=>setImages(imarr), [imarr])\n//   const [images,setImages]=useState(imarr)\n//   const layoutRef = useRef()\n//   const inputRef = useRef()\n//   const [isLoading,setLoading]=useState(false)\n//   const [url,setUrl]=useState(\"\")\n//   const deleteImage=(image)=>{\n//     fetch(\"/admin/deleteProvinceImage\",{\n//       method:\"post\",\n//       headers:{\n//           \"Content-Type\":\"application/json\",\n//       },\n//       body:JSON.stringify({\n//           image:image,\n//           pid:pid,\n//       })\n//   }).then(res=>res.json())\n//   .then(data=>{\n//     console.log(data)\n//     if(data.message){\n//         M.toast({html: data.message,classes:\"#c62828 red darken-3\"})\n//         setImages(data.result.images)\n//     }\n//     if (data.error){\n//       M.toast({html: data.message,classes:\"#c62828 red darken-3\"})\n//     }\n//   }).catch(err=>{\n//       console.log(err)\n//   })\n// }\n//   const postDetails = (image)=>{\n//     setLoading(true)\n//     console.log(image)\n//     const data = new FormData()\n//     data.append(\"file\",image)\n//     data.append(\"upload_preset\",\"employeeApp\")\n//     data.append(\"cloud_name\",\"myimagcloud\")\n//     fetch(\"https://api.cloudinary.com/v1_1/myimagcloud/image/upload\",{\n//         method:\"post\",\n//         body:data\n//     })\n//     .then(res=>res.json())\n//     .then(data=>{\n//        setUrl(data.url)\n//     })\n//     .catch(err=>{\n//         console.log(err)\n//     })\n//   }\n//   useEffect(()=>{\n//     if(url){\n//      fetch(\"/admin/addImgtoProvinceData\",{\n//          method:\"post\",\n//          headers:{\n//              \"Content-Type\":\"application/json\",\n//          },\n//          body:JSON.stringify({\n//              image:url,\n//              pid:pid,\n//              name:\"\",\n//              description:\"\"\n//          })\n//      }).then(res=>res.json())\n//      .then(data=>{\n//         console.log(data)\n//         if(data.message){\n//           setImages(data.result.images)\n//            M.toast({html: data.message,classes:\"#c62828 red darken-3\"})\n//            setLoading(false)\n//         }\n//      }).catch(err=>{\n//          console.log(err)\n//      })\n//   }\n//   },[url])\n//   return(\n//     <Flex flexDirection=\"column\" alignItems=\"center\">\n//     <Flex flexDirection=\"row\" overflowX=\"scroll\" margin=\"5\">\n//     <CustomGallery layoutRef={layoutRef} ui={PhotoswipeUIDefault}>\n//       {images.map((image,index)=>{\n//          return(\n//           <Item key={index}\n//           original={image}\n//           thumbnail={image}\n//           width=\"1024\"\n//           height=\"768\"\n//         >\n//           {({ ref, open }) => (\n//            <>\n//             <img ref={ref} onClick={open} src={image}  width=\"200px\" height=\"200px\"/>\n//             <Button onClick={()=>{deleteImage()}}><DeleteIcon/></Button>\n//            </>\n//           )}\n//         </Item>\n//          )\n//       })}\n//     </CustomGallery>\n//     <DefaultLayout\n//       shareButton={false}\n//       fullscreenButton={true}\n//       zoomButton={true}\n//       ref={layoutRef}\n//     />\n//     </Flex>\n//     <Button\n//     isLoading={isLoading}\n//     loadingText=\"Uploading\"\n//     colorScheme=\"teal\"\n//     variant=\"outline\"\n//     rightIcon={<ArrowUpIcon/>}\n//     onClick={()=>inputRef.current.click()}\n//   >\n//     Upload\n//   </Button>\n//   <input  ref={inputRef} type=\"file\" style={{display:\"none\"}} onChange={(e)=>postDetails(e.target.files[0])}/>\n//     </Flex>\n//   )\n// }\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TestPage = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      google: this.props.google,\n      zoom: 14,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'Current location'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InfoWindow, {\n        onClose: this.onInfoWindowClose,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: this.state.selectedPlace.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = TestPage;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY\"\n})();\n\nvar _c;\n\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/screens/testPage.js"],"names":["Map","InfoWindow","Marker","GoogleApiWrapper","TestPage","props","google","onMarkerClick","onInfoWindowClose","state","selectedPlace","name","apiKey"],"mappingsaC,UAAb,EAAyBC,MAAzB,EAAiCC,gBAAjC,QAAwD,mBAAxD;;;AACA,OAAO,MAAMC,QAAQ,GAAC,MAAI;AACxB,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAAxB;AAAgC,MAAA,IAAI,EAAE,EAAtC;AAAA,8BAEA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,aAAtB;AACQ,QAAA,IAAI,EAAE;AADd;AAAA;AAAA;AAAA;AAAA,cAFA,eAKA,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKC,iBAA1B;AAAA,+BACI;AAAA,iCACE;AAAA,sBAAK,KAAKC,KAAL,CAAWC,aAAX,CAAyBC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD,CAjBM;KAAMP,Q;AAmBb,eAAeD,gBAAgB,CAAC;AAC9BS,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,EAAf","sourcesContent":["// import React, { useState, useRef,useEffect } from 'react'\r\n// import 'photoswipe/dist/photoswipe.css'\r\n// import 'photoswipe/dist/default-skin/default-skin.css'\r\n// import M from 'materialize-css'\r\n\r\n// import PhotoswipeUIDefault from 'photoswipe/dist/photoswipe-ui-default'\r\n// import { CustomGallery, Item, DefaultLayout } from 'react-photoswipe-gallery'\r\n// import { Button } from '@chakra-ui/button'\r\n// import { Box, Flex } from '@chakra-ui/layout'\r\n// import NavBar from '../components/navbar'\r\n// import { DeleteIcon,ArrowUpIcon } from '@chakra-ui/icons'\r\n// export const TestPage = () => {\r\n//   const [ima,setIma]=useState([])\r\n//   useEffect(()=>{\r\n    \r\n//      fetch(\"/admin/getProvinceData/p1\").\r\n//      then(res=>res.json())\r\n//      .then(data=>{\r\n//         console.log(data.images)\r\n//         setIma(data.images)\r\n       \r\n//      }).catch(err=>{\r\n//          console.log(err)\r\n//      })\r\n  \r\n//   },[])\r\n          \r\n//   return (\r\n//    <NavBar>\r\n//      <>\r\n//      <Galary imarr={ima} pid=\"p1\" />\r\n//      </>\r\n//    </NavBar>\r\n//   )\r\n// }\r\n// const Galary=({pid,imarr,...props})=>{\r\n//   useEffect(()=>setImages(imarr), [imarr])\r\n\r\n//   const [images,setImages]=useState(imarr)\r\n//   const layoutRef = useRef()\r\n//   const inputRef = useRef()\r\n\r\n\r\n//   const [isLoading,setLoading]=useState(false)\r\n//   const [url,setUrl]=useState(\"\")\r\n\r\n\r\n//   const deleteImage=(image)=>{\r\n//     fetch(\"/admin/deleteProvinceImage\",{\r\n//       method:\"post\",\r\n//       headers:{\r\n//           \"Content-Type\":\"application/json\",\r\n//       },\r\n//       body:JSON.stringify({\r\n//           image:image,\r\n//           pid:pid,\r\n//       })\r\n//   }).then(res=>res.json())\r\n//   .then(data=>{\r\n//     console.log(data)\r\n//     if(data.message){\r\n//         M.toast({html: data.message,classes:\"#c62828 red darken-3\"})\r\n//         setImages(data.result.images)\r\n\r\n//     }\r\n//     if (data.error){\r\n//       M.toast({html: data.message,classes:\"#c62828 red darken-3\"})\r\n//     }\r\n    \r\n//   }).catch(err=>{\r\n//       console.log(err)\r\n//   })\r\n// }\r\n\r\n//   const postDetails = (image)=>{\r\n//     setLoading(true)\r\n//     console.log(image)\r\n//     const data = new FormData()\r\n//     data.append(\"file\",image)\r\n//     data.append(\"upload_preset\",\"employeeApp\")\r\n//     data.append(\"cloud_name\",\"myimagcloud\")\r\n//     fetch(\"https://api.cloudinary.com/v1_1/myimagcloud/image/upload\",{\r\n//         method:\"post\",\r\n//         body:data\r\n//     })\r\n//     .then(res=>res.json())\r\n//     .then(data=>{\r\n//        setUrl(data.url)\r\n//     })\r\n//     .catch(err=>{\r\n//         console.log(err)\r\n//     })\r\n  \r\n  \r\n//   }\r\n//   useEffect(()=>{\r\n//     if(url){\r\n//      fetch(\"/admin/addImgtoProvinceData\",{\r\n//          method:\"post\",\r\n//          headers:{\r\n//              \"Content-Type\":\"application/json\",\r\n//          },\r\n//          body:JSON.stringify({\r\n//              image:url,\r\n//              pid:pid,\r\n//              name:\"\",\r\n//              description:\"\"\r\n//          })\r\n//      }).then(res=>res.json())\r\n//      .then(data=>{\r\n//         console.log(data)\r\n//         if(data.message){\r\n//           setImages(data.result.images)\r\n//            M.toast({html: data.message,classes:\"#c62828 red darken-3\"})\r\n//            setLoading(false)\r\n           \r\n\r\n//         }\r\n       \r\n//      }).catch(err=>{\r\n//          console.log(err)\r\n//      })\r\n//   }\r\n//   },[url])\r\n\r\n\r\n//   return(\r\n//     <Flex flexDirection=\"column\" alignItems=\"center\">\r\n//     <Flex flexDirection=\"row\" overflowX=\"scroll\" margin=\"5\">\r\n//     <CustomGallery layoutRef={layoutRef} ui={PhotoswipeUIDefault}>\r\n\r\n//       {images.map((image,index)=>{\r\n//          return(\r\n//           <Item key={index}\r\n//           original={image}\r\n//           thumbnail={image}\r\n//           width=\"1024\"\r\n//           height=\"768\"\r\n//         >\r\n//           {({ ref, open }) => (\r\n//            <>\r\n//             <img ref={ref} onClick={open} src={image}  width=\"200px\" height=\"200px\"/>\r\n//             <Button onClick={()=>{deleteImage()}}><DeleteIcon/></Button>\r\n//            </>\r\n//           )}\r\n//         </Item>\r\n//          )\r\n//       })}\r\n   \r\n//     </CustomGallery>\r\n\r\n//     <DefaultLayout\r\n//       shareButton={false}\r\n//       fullscreenButton={true}\r\n//       zoomButton={true}\r\n//       ref={layoutRef}\r\n//     />\r\n       \r\n//     </Flex>\r\n  \r\n//     <Button\r\n//     isLoading={isLoading}\r\n//     loadingText=\"Uploading\"\r\n//     colorScheme=\"teal\"\r\n//     variant=\"outline\"\r\n//     rightIcon={<ArrowUpIcon/>}\r\n//     onClick={()=>inputRef.current.click()}\r\n    \r\n    \r\n//   >\r\n//     Upload\r\n//   </Button>\r\n//   <input  ref={inputRef} type=\"file\" style={{display:\"none\"}} onChange={(e)=>postDetails(e.target.files[0])}/>\r\n//     </Flex>\r\n    \r\n//   )\r\n// }\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nexport const TestPage=()=>{\r\n  return(\r\n    <>\r\n      <Map google={this.props.google} zoom={14}>\r\n \r\n      <Marker onClick={this.onMarkerClick}\r\n              name={'Current location'} />\r\n\r\n      <InfoWindow onClose={this.onInfoWindowClose}>\r\n          <div>\r\n            <h1>{this.state.selectedPlace.name}</h1>\r\n          </div>\r\n      </InfoWindow>\r\n      </Map>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY\"\r\n})()"]},"metadata":{},"sourceType":"module"}