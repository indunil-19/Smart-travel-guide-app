{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 5 project travel guide app\\\\Smart-travel-guide-app\\\\adminportal\\\\src\\\\screens\\\\testPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Input, InputGroup, Stack, InputLeftElement, FormControl, Button, Heading, Box, Alert, AlertIcon, InputRightElement, FormHelperText } from \"@chakra-ui/react\";\nimport { EmailIcon, LockIcon } from \"@chakra-ui/icons\"; // import { isRequired, ValidateEmail } from '../../utils/validation';\n// import { authenticationService } from \"../../services/authenticationService\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TestPage = () => {\n  _s();\n\n  const [hasError, setHasError] = useState(false);\n  const [show, setShow] = useState(false);\n  const [validation, setValidation] = useState({\n    validation: [false, false],\n    errorMessage: ['', '']\n  });\n  const [data, setData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleLoginFail = () => {\n    setHasError(true);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    try {\n      authenticationService.login(data).then(result => {\n        if (result.success) {\n          handleLoginSuccess();\n        } else {\n          handleLoginFail();\n        }\n      });\n    } catch (error) {}\n  };\n\n  const handleChange = event => {\n    var value = event.target.value;\n    var name = event.target.name;\n\n    if (name === 'email') {\n      ValidateEmail(value, validation, setValidation, 0, 'email');\n    } else if (name === 'password') {\n      isRequired(value, validation, setValidation, 1, 'password');\n    }\n\n    setData({ ...data,\n      [event.target.name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    border: \"1px\",\n    borderColor: \"gray.200\",\n    p: ['5px', '15px', '25px'],\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h4\",\n      size: \"md\",\n      textAlign: \"center\",\n      pb: \"20px\",\n      pt: \"5px\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), hasError ? /*#__PURE__*/_jsxDEV(Alert, {\n      status: \"error\",\n      mb: \"20px\",\n      children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), \"Error while Login!!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n              children: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              \"data-testid\": \"email\",\n              type: \"email\",\n              value: data.email,\n              placeholder: \"Email\",\n              \"aria-label\": \"Email\",\n              name: \"email\",\n              onChange: event => handleChange(event),\n              isInvalid: validation.validation[0],\n              errorBorderColor: validation.validation[0] ? \"green.300\" : \"crimson\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            color: validation.validation[0] ? \"green.300\" : \"crimson\",\n            children: validation.errorMessage[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n              children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              \"data-testid\": \"password\",\n              type: show ? \"text\" : \"password\",\n              value: data.password,\n              placeholder: \"Password\",\n              \"aria-label\": \"Password\",\n              name: \"password\",\n              onChange: event => handleChange(event),\n              isInvalid: validation.validation[1],\n              errorBorderColor: validation.validation[1] ? \"green.300\" : \"crimson\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n              width: \"4.5rem\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                h: \"1.75rem\",\n                size: \"sm\",\n                onClick: () => setShow(!show),\n                children: show ? \"Hide\" : \"Show\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            color: validation.validation[0] ? \"green.300\" : \"crimson\",\n            children: validation.errorMessage[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          \"data-testid\": \"login\",\n          colorScheme: \"teal\",\n          type: \"button\",\n          onClick: handleSubmit,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestPage, \"hRvvEiBFC12rl7zawDm5BaKIJIU=\");\n\n_c = TestPage;\n\nfunction LoginForm({\n  handleLoginSuccess\n}) {}\n\n_c2 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TestPage\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/screens/testPage.js"],"names":["React","useState","Input","InputGroup","Stack","InputLeftElement","FormControl","Button","Heading","Box","Alert","AlertIcon","InputRightElement","FormHelperText","EmailIcon","LockIcon","TestPage","hasError","setHasError","show","setShow","validation","setValidation","errorMessage","data","setData","email","password","handleLoginFail","handleSubmit","event","preventDefault","authenticationService","login","then","result","success","handleLoginSuccess","error","handleChange","value","target","name","ValidateEmail","isRequired","LoginForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Input, InputGroup, Stack, InputLeftElement, FormControl, Button, Heading, Box, Alert, AlertIcon, InputRightElement, FormHelperText } from \"@chakra-ui/react\";\r\nimport { EmailIcon, LockIcon } from \"@chakra-ui/icons\";\r\n// import { isRequired, ValidateEmail } from '../../utils/validation';\r\n// import { authenticationService } from \"../../services/authenticationService\";\r\n\r\n\r\n\r\nexport const TestPage=()=>{\r\n    const [hasError, setHasError] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [validation, setValidation] = useState({\r\n        validation: [false, false],\r\n        errorMessage: ['', '']\r\n    });\r\n\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleLoginFail=()=>{\r\n        setHasError(true);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            authenticationService.login(data)\r\n                .then((result) => {\r\n                    if (result.success) {\r\n                        handleLoginSuccess();\r\n                    } else {\r\n                        handleLoginFail();\r\n                    }\r\n                });\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        var value = event.target.value;\r\n        var name = event.target.name;\r\n\r\n        if (name === 'email') {\r\n            ValidateEmail(value, validation, setValidation, 0, 'email');\r\n        }\r\n        else if (name === 'password') {\r\n            isRequired(value, validation, setValidation, 1, 'password');\r\n        }\r\n\r\n\r\n        setData({ ...data, [event.target.name]: value })\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <Box border=\"1px\" borderColor=\"gray.200\" p={['5px', '15px', '25px']}>\r\n            <Heading as=\"h4\" size=\"md\" textAlign='center' pb='20px' pt='5px'>\r\n                Log In\r\n            </Heading>\r\n            {hasError ? <Alert status=\"error\" mb='20px' >\r\n                <AlertIcon />\r\n                Error while Login!!\r\n            </Alert> : null}\r\n            <form action='submit'>\r\n                <Stack spacing={3}>\r\n\r\n                    <FormControl isRequired>\r\n                        <InputGroup>\r\n                            <InputLeftElement children={<EmailIcon />} />\r\n                            <Input\r\n                                data-testid = \"email\"\r\n                                type='email'\r\n                                value={data.email}\r\n                                placeholder='Email'\r\n                                aria-label='Email'\r\n                                name='email'\r\n                                onChange={(event) => handleChange(event)}\r\n                                isInvalid={validation.validation[0]}\r\n                                errorBorderColor={validation.validation[0] ? \"green.300\":\"crimson\"} />\r\n\r\n                        </InputGroup>\r\n                        <FormHelperText color={validation.validation[0] ? \"green.300\":\"crimson\"}>{validation.errorMessage[0]}</FormHelperText>\r\n\r\n                    </FormControl>\r\n\r\n\r\n                    <FormControl isRequired>\r\n                        <InputGroup>\r\n                            <InputLeftElement children={<LockIcon />} />\r\n                            <Input\r\n                                data-testid = \"password\"\r\n                                type={show ? \"text\" : \"password\"}\r\n                                value={data.password}\r\n                                placeholder='Password'\r\n                                aria-label='Password'\r\n                                name='password'\r\n                                onChange={(event) => handleChange(event)}\r\n                                isInvalid={validation.validation[1]}\r\n                                errorBorderColor={validation.validation[1] ? \"green.300\":\"crimson\"}\r\n                            />\r\n                            <InputRightElement width=\"4.5rem\">\r\n                                <Button h=\"1.75rem\" size=\"sm\" onClick={() => setShow(!show)}>\r\n                                    {show ? \"Hide\" : \"Show\"}\r\n                                </Button>\r\n                            </InputRightElement>\r\n\r\n                        </InputGroup>\r\n                        <FormHelperText color={validation.validation[0] ? \"green.300\":\"crimson\"}>{validation.errorMessage[1]}</FormHelperText>\r\n\r\n                    </FormControl>\r\n\r\n\r\n                    <Button data-testid = \"login\" colorScheme='teal' type=\"button\" onClick={handleSubmit}>Log In</Button>\r\n\r\n                </Stack>\r\n            </form>\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction LoginForm({ handleLoginSuccess}) {\r\n\r\n    \r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}