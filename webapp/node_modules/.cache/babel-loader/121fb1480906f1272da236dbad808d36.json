{"ast":null,"code":"const {\n  Client\n} = require(\"@googlemaps/google-maps-services-js\");\n\nexport const DeletePOI = async (index, index1, travelPlan) => {\n  const start_location = {};\n  console.log(index, index1, travelPlan);\n\n  if (index == 0 && index1 == 0) {\n    start_location = {\n      lat: 6.927079,\n      lng: 79.857750\n    };\n  } else if (index1 == 0) {\n    start_location = travelPlan[index - 1][-1].geometry.location;\n  } else {\n    start_location = travelPlan[index][index1 - 1].geometry.location;\n  }\n\n  return client.directions({\n    params: {\n      origin: {\n        lat: 6.927079,\n        lng: 79.857750\n      },\n      destination: {\n        lat: 6.927079,\n        lng: 79.857750\n      },\n      optimizeWaypoints: true,\n      waypoints: waypts,\n      travelMode: 'DRIVING',\n      key: \"AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY\"\n    }\n  }).then(response => {\n    const route = response.data.routes[0];\n    let day1 = [];\n    let day2 = [];\n    let day3 = [];\n    let time = 0;\n\n    for (let i = 0; i < route.legs.length - 1; i++) {\n      time = time + route.legs[i].duration.value + 3600;\n      if (time < 32400) day1.push(pois[route.waypoint_order[i]]);else if (time < 64800) day2.push(pois[route.waypoint_order[i]]);else if (time < 97200) day3.push(pois[route.waypoint_order[i]]);\n    }\n\n    if (number_of_days == 1) return [[day1], route.legs];else if (number_of_days == 2) return [[day1, day2], route.legs];else if (number_of_days == 3) return [[day1, day2, day3], route.legs];else return [[], []];\n  }).catch(e => {\n    console.log(e);\n  });\n  return;\n};\n_c = DeletePOI;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeletePOI\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/services/EditPlanServices.js"],"names":["Client","require","DeletePOI","index","index1","travelPlan","start_location","console","log","lat","lng","geometry","location","client","directions","params","origin","destination","optimizeWaypoints","waypoints","waypts","travelMode","key","then","response","route","data","routes","day1","day2","day3","time","i","legs","length","duration","value","push","pois","waypoint_order","number_of_days","catch","e"],"mappings":"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","sourcesContent":["const {Client} = require(\"@googlemaps/google-maps-services-js\");\r\n\r\n   \r\nexport const DeletePOI=async(index, index1, travelPlan)=>{\r\n    const start_location={}\r\n    \r\n    console.log(index,index1,travelPlan)\r\n    if (index==0 && index1==0){\r\n        start_location={lat:6.927079,lng:79.857750}\r\n\r\n\r\n    }else if (index1==0){\r\n        start_location=travelPlan[index-1][-1].geometry.location\r\n    }\r\n    else{\r\n        start_location=travelPlan[index][index1-1].geometry.location\r\n    }\r\n\r\n    return client\r\n      .directions({params:{\r\n          origin:{lat:6.927079,lng:79.857750},\r\n          destination:{lat:6.927079,lng:79.857750},\r\n          optimizeWaypoints: true,\r\n          waypoints: waypts,\r\n          travelMode: 'DRIVING',\r\n          key: \"AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY\",\r\n\r\n        }})\r\n        .then((response) => {\r\n          const route = response.data.routes[0];\r\n          \r\n          let day1=[]\r\n          let day2=[]\r\n          let day3=[]\r\n          let time=0\r\n\r\n           for (let i = 0; i < route.legs.length-1; i++) {\r\n             time=time+route.legs[i].duration.value+3600\r\n             if(time<32400) day1.push(pois[route.waypoint_order[i]])\r\n             else if(time<64800) day2.push(pois[route.waypoint_order[i]])\r\n             else if(time<97200)  day3.push(pois[route.waypoint_order[i]])\r\n          \r\n         }\r\n\r\n\r\n         if(number_of_days==1) return [[day1],route.legs]\r\n         else if(number_of_days==2) return [[day1,day2],route.legs]\r\n         else if (number_of_days==3) return [[day1,day2,day3],route.legs]\r\n         else return [[],[]]\r\n\r\n        })\r\n         .catch((e) =>{ \r\n           console.log(e)\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    return ;\r\n   \r\n\r\n}"]},"metadata":{},"sourceType":"module"}