{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 5 project travel guide app\\\\Smart-travel-guide-app\\\\adminportal\\\\src\\\\screens\\\\shredPlans.js\",\n    _s = $RefreshSig$();\n\nimport NavBar from \"../components/navbar\";\nimport { Select } from \"@chakra-ui/select\";\nimport { InputGroup } from \"@chakra-ui/input\";\nimport { Flex, HStack, Text } from \"@chakra-ui/layout\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { BiSearch } from \"react-icons/bi\";\nimport { PlanCard } from \"../components/AdminComponents/planCard\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { MdPublic } from \"react-icons/md\";\nimport { Button, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SharedPlan = () => {\n  _s();\n\n  const [rate, setRate] = useState(\"\");\n  const [plans, setPlans] = useState([]);\n  const [pid, setPID] = useState(\"\"); // useEffect(()=>{\n  //     getSharedPlans()\n  // },[])\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onClose = () => setIsOpen(false);\n\n  const cancelRef = useRef();\n\n  const getSharedPlans = () => {\n    fetch('/admin/getsharedPlans', {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        rate: rate\n      })\n    }).then(res => res.json()).then(data => {\n      setPlans(data.myPlans);\n      console.log(data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const deleteAleart = planId => {\n    console.log(planId);\n    setIsOpen(true);\n    setPID(planId);\n  };\n\n  const publicAleart = planId => {\n    console.log(planId);\n    setIsOpen(true);\n    setPID(planId);\n  };\n\n  const deletePlan = () => {\n    fetch('/admin/deleteTravelPlan', {\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        planId: pid\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.data) {\n        setIsOpen(false);\n        const newPlans = plans.filter(plan => {\n          return plan._id != result.data._id;\n        });\n        setPlans(newPlans);\n      }\n\n      console.log(result);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AlertDialog, {\n      isOpen: isOpen,\n      leastDestructiveRef: cancelRef,\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n        children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n            fontSize: \"lg\",\n            fontWeight: \"bold\",\n            children: \"Delete Travel Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n            children: \"Are you sure? You can't undo this action afterwards.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              ref: cancelRef,\n              onClick: onClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: () => {\n                deletePlan();\n              },\n              ml: 3,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(HStack, {\n          width: \"full\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"select rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: \"5\",\n              onChange: e => setRate(e.target.value),\n              value: rate,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"teal\",\n            size: \"xs\",\n            leftIcon: /*#__PURE__*/_jsxDEV(BiSearch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 60\n            }, this),\n            p: 4,\n            onClick: () => getSharedPlans(),\n            children: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: plans && plans.map((plan, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              p: 3,\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"red\",\n                  onClick: () => {\n                    deleteAleart(plan._id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(AiOutlineDelete, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"blue\",\n                  onClick: () => {\n                    publicAleart(plan._id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(MdPublic, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(PlanCard, {\n                  _id: plan._id,\n                  name: plan.name ? plan.name : `My plan ${index + 1}`,\n                  days: plan.travelPlan[0].length,\n                  createdDate: plan.createdAt,\n                  travelPlan: plan.travelPlan\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 26\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SharedPlan, \"nSWOH0U4O9gxRTGlPdZFA86j/yE=\");\n\n_c = SharedPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"SharedPlan\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/screens/shredPlans.js"],"names":["NavBar","Select","InputGroup","Flex","HStack","Text","useEffect","useState","useRef","BiSearch","PlanCard","AiOutlineDelete","MdPublic","Button","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","SharedPlan","rate","setRate","plans","setPlans","pid","setPID","isOpen","setIsOpen","onClose","cancelRef","getSharedPlans","fetch","method","headers","body","JSON","stringify","then","res","json","data","myPlans","console","log","catch","e","deleteAleart","planId","publicAleart","deletePlan","result","newPlans","filter","plan","_id","target","value","map","index","name","travelPlan","length","createdAt"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,mBAAnC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,wCAAzB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,eAA9B,EAA+CC,iBAA/C,EAAkEC,iBAAlE,EAAqFC,kBAArF,EAAyGC,kBAAzG,QAAmI,kBAAnI;;;AAGA,OAAO,MAAMC,UAAU,GAAC,MAAI;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAef,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACgB,KAAD,EAAOC,QAAP,IAAiBjB,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACkB,GAAD,EAAKC,MAAL,IAAanB,QAAQ,CAAC,EAAD,CAA3B,CAHwB,CAKxB;AACA;AACA;;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMsB,OAAO,GAAG,MAAMD,SAAS,CAAC,KAAD,CAA/B;;AACA,QAAME,SAAS,GAAGtB,MAAM,EAAxB;;AAGA,QAAMuB,cAAc,GAAC,MAAI;AACrBC,IAAAA,KAAK,CAAC,uBAAD,EAAyB;AAC1BC,MAAAA,MAAM,EAAC,MADmB;AAE1BC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX,OAFkB;AAK1BC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CACD;AACIhB,QAAAA,IAAI,EAACA;AADT,OADC;AALqB,KAAzB,CAAL,CAWGiB,IAXH,CAWQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAXb,EAYAF,IAZA,CAYKG,IAAI,IAAE;AACPjB,MAAAA,QAAQ,CAACiB,IAAI,CAACC,OAAN,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,KAfD,EAeGI,KAfH,CAeSC,CAAC,IAAE;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH,KAjBD;AAkBH,GAnBD;;AAqBA,QAAMC,YAAY,GAAEC,MAAD,IAAU;AACzBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACApB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,IAAAA,MAAM,CAACsB,MAAD,CAAN;AACH,GAJD;;AAKA,QAAMC,YAAY,GAAED,MAAD,IAAU;AACzBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACApB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,IAAAA,MAAM,CAACsB,MAAD,CAAN;AACH,GAJD;;AAMA,QAAME,UAAU,GAAC,MAAI;AACjBlB,IAAAA,KAAK,CAAC,yBAAD,EAA2B;AAC5BC,MAAAA,MAAM,EAAC,QADqB;AAE5BC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX,OAFoB;AAK5BC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBW,QAAAA,MAAM,EAACvB;AADS,OAAf;AALuB,KAA3B,CAAL,CAOOa,IAPP,CAOYC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAPjB,EAQIF,IARJ,CAQSa,MAAM,IAAE;AACT,UAAGA,MAAM,CAACV,IAAV,EAAe;AACXb,QAAAA,SAAS,CAAC,KAAD,CAAT;AACA,cAAMwB,QAAQ,GAAC7B,KAAK,CAAC8B,MAAN,CAAaC,IAAI,IAAE;AAC9B,iBAAOA,IAAI,CAACC,GAAL,IAAWJ,MAAM,CAACV,IAAP,CAAYc,GAA9B;AACH,SAFc,CAAf;AAGA/B,QAAAA,QAAQ,CAAC4B,QAAD,CAAR;AACH;;AAEDT,MAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AACH,KAlBL,EAmBKN,KAnBL,CAmBYC,CAAD,IAAK;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH,KArBL;AAuBH,GAxBD;;AA0BA,sBACI;AAAA,4BAEA,QAAC,WAAD;AACQ,MAAA,MAAM,EAAEnB,MADhB;AAEQ,MAAA,mBAAmB,EAAEG,SAF7B;AAGQ,MAAA,OAAO,EAAED,OAHjB;AAAA,6BAKQ,QAAC,kBAAD;AAAA,+BACA,QAAC,kBAAD;AAAA,kCACI,QAAC,iBAAD;AAAmB,YAAA,QAAQ,EAAC,IAA5B;AAAiC,YAAA,UAAU,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI,QAAC,iBAAD;AAAA,oCACA,QAAC,MAAD;AAAQ,cAAA,GAAG,EAAEC,SAAb;AAAwB,cAAA,OAAO,EAAED,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAIA,QAAC,MAAD;AAAQ,cAAA,WAAW,EAAC,KAApB;AAA0B,cAAA,OAAO,EAAE,MAAI;AACnCqB,gBAAAA,UAAU;AACb,eAFD;AAEG,cAAA,EAAE,EAAE,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YAFA,eA+BA,QAAC,MAAD;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,aAAa,EAAC,QAApB;AAA6B,QAAA,UAAU,EAAC,QAAxC;AAAA,+BACA,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA,kCACA,QAAC,UAAD;AAAA,oCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,YAAY,EAAC,GAArB;AAAyB,cAAA,QAAQ,EAAGJ,CAAD,IAAKxB,OAAO,CAACwB,CAAC,CAACU,MAAF,CAASC,KAAV,CAA/C;AAAiE,cAAA,KAAK,EAAEpC,IAAxE;AAAA,sCACA;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,eAGA;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHA,eAIA;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJA,eAKA;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAWI,QAAC,MAAD;AAAQ,YAAA,WAAW,EAAC,MAApB;AAA2B,YAAA,IAAI,EAAC,IAAhC;AAAqC,YAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,oBAA/C;AAA4D,YAAA,CAAC,EAAE,CAA/D;AAAkE,YAAA,OAAO,EAAE,MAAIU,cAAc,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,eAqBA;AAAA,kBACCR,KAAK,IAAIA,KAAK,CAACmC,GAAN,CAAU,CAACJ,IAAD,EAAMK,KAAN,KAAc;AACtB,8BACI;AAAA,mCACC,QAAC,IAAD;AAAM,cAAA,aAAa,EAAC,QAApB;AAA6B,cAAA,UAAU,EAAC,QAAxC;AAAiD,cAAA,CAAC,EAAE,CAApD;AAAA,qCACG,QAAC,MAAD;AAAA,wCAEA,QAAC,MAAD;AAAQ,kBAAA,WAAW,EAAC,KAApB;AAA0B,kBAAA,OAAO,EAAE,MAAI;AAC1BZ,oBAAAA,YAAY,CAACO,IAAI,CAACC,GAAN,CAAZ;AACZ,mBAFD;AAAA,yCAEG,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,wBAFA,eAQA,QAAC,MAAD;AAAQ,kBAAA,WAAW,EAAC,MAApB;AAA2B,kBAAA,OAAO,EAAE,MAAI;AAC5BN,oBAAAA,YAAY,CAACK,IAAI,CAACC,GAAN,CAAZ;AACX,mBAFD;AAAA,yCAEG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,wBARA,eAYA,QAAC,QAAD;AAAU,kBAAA,GAAG,EAAED,IAAI,CAACC,GAApB;AAAyB,kBAAA,IAAI,EAAED,IAAI,CAACM,IAAL,GAAYN,IAAI,CAACM,IAAjB,GAAyB,WAAUD,KAAK,GAAC,CAAE,EAA1E;AAA6E,kBAAA,IAAI,EAAEL,IAAI,CAACO,UAAL,CAAgB,CAAhB,EAAmBC,MAAtG;AAA8G,kBAAA,WAAW,EAAER,IAAI,CAACS,SAAhI;AAA2I,kBAAA,UAAU,EAAET,IAAI,CAACO;AAA5J;AAAA;AAAA;AAAA;AAAA,wBAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADD,2BADJ;AAqBX,SAtBS;AADV,uBArBA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BA;AAAA,kBADJ;AAmGH,CA1KM;;GAAMzC,U;;KAAAA,U","sourcesContent":["import NavBar from \"../components/navbar\"\r\nimport { Select } from \"@chakra-ui/select\"\r\nimport { InputGroup } from \"@chakra-ui/input\"\r\nimport { Flex, HStack, Text } from \"@chakra-ui/layout\"\r\nimport { useEffect, useState,useRef } from \"react\"\r\nimport { BiSearch } from \"react-icons/bi\"\r\nimport { PlanCard } from \"../components/AdminComponents/planCard\"\r\nimport { AiOutlineDelete } from \"react-icons/ai\"\r\nimport { MdPublic } from \"react-icons/md\"\r\nimport { Button, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay,} from \"@chakra-ui/react\"\r\n\r\n\r\nexport const SharedPlan=()=>{\r\n    const [rate,setRate]=useState(\"\")\r\n    const [plans,setPlans]=useState([])\r\n    const [pid,setPID]=useState(\"\")\r\n\r\n    // useEffect(()=>{\r\n    //     getSharedPlans()\r\n    // },[])\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const cancelRef = useRef()\r\n\r\n\r\n    const getSharedPlans=()=>{\r\n        fetch('/admin/getsharedPlans',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify(\r\n                {\r\n                    rate:rate,\r\n\r\n                }\r\n            )\r\n        }).then(res=>res.json()).\r\n        then(data=>{\r\n            setPlans(data.myPlans)\r\n            console.log(data)\r\n        }).catch(e=>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    const deleteAleart=(planId)=>{\r\n        console.log(planId)\r\n        setIsOpen(true)\r\n        setPID(planId)\r\n    }\r\n    const publicAleart=(planId)=>{\r\n        console.log(planId)\r\n        setIsOpen(true)\r\n        setPID(planId)\r\n    }\r\n\r\n    const deletePlan=()=>{\r\n        fetch('/admin/deleteTravelPlan',{\r\n            method:\"delete\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                planId:pid})\r\n            }).then(res=>res.json()).\r\n            then(result=>{\r\n                if(result.data){\r\n                    setIsOpen(false)\r\n                    const newPlans=plans.filter(plan=>{\r\n                        return plan._id !=result.data._id                            \r\n                    })\r\n                    setPlans(newPlans)\r\n                }\r\n                \r\n                console.log(result)\r\n            })\r\n            .catch((e)=>{\r\n                console.log(e)\r\n            })\r\n        \r\n    }\r\n\r\n    return(\r\n        <>\r\n\r\n        <AlertDialog\r\n                isOpen={isOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n            >\r\n                <AlertDialogOverlay>\r\n                <AlertDialogContent>\r\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                    Delete Travel Plan\r\n                    </AlertDialogHeader>\r\n\r\n                    <AlertDialogBody>\r\n                    Are you sure? You can't undo this action afterwards.\r\n                    </AlertDialogBody>\r\n\r\n                    <AlertDialogFooter>\r\n                    <Button ref={cancelRef} onClick={onClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button colorScheme=\"red\" onClick={()=>{\r\n                        deletePlan();\r\n                    }} ml={3}>\r\n                        Delete\r\n                    </Button>\r\n                    </AlertDialogFooter>\r\n                </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n        </AlertDialog>\r\n        \r\n        <NavBar>\r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n        <HStack width=\"full\">\r\n        <InputGroup>\r\n            <Text>select rate</Text>\r\n            <Select defaultValue=\"5\" onChange={(e)=>setRate(e.target.value)} value={rate}>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"4\">4</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"1\">1</option>\r\n            </Select>\r\n            </InputGroup>\r\n            <Button colorScheme=\"teal\" size=\"xs\" leftIcon={<BiSearch/>} p={4} onClick={()=>getSharedPlans()}>\r\n                search\r\n            </Button>\r\n        </HStack>\r\n        </Flex>\r\n\r\n\r\n\r\n        <>\r\n        {plans && plans.map((plan,index)=>{\r\n                    return(\r\n                        <>\r\n                         <Flex flexDirection=\"column\" alignItems=\"center\" p={3}>\r\n                            <HStack>\r\n\r\n                            <Button colorScheme=\"red\" onClick={()=>{\r\n                                         deleteAleart(plan._id)\r\n                            }}><AiOutlineDelete /></Button>\r\n\r\n\r\n\r\n                            <Button colorScheme=\"blue\" onClick={()=>{\r\n                                        publicAleart(plan._id)\r\n                            }}><MdPublic /></Button>\r\n                        \r\n                            <PlanCard _id={plan._id} name={plan.name ? plan.name : `My plan ${index+1}`} days={plan.travelPlan[0].length} createdDate={plan.createdAt} travelPlan={plan.travelPlan} />\r\n\r\n                            </HStack>\r\n                         </Flex>\r\n                        </>\r\n                    )\r\n        })}\r\n\r\n        </>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </NavBar>\r\n\r\n        \r\n        \r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}