{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 5 project travel guide app\\\\Smart-travel-guide-app\\\\adminportal\\\\src\\\\screens\\\\TravelPlanApp\\\\customPlan.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Flex } from '@chakra-ui/layout';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport { useState, useEffect } from \"react\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CustomPlan = () => {\n  _s();\n\n  const [place, setPlace] = useState({});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        width: \"50%\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          apiKey: \"AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY\",\n          onPlaceSelected: place => {\n            console.log(place);\n            setPlace(place.geometry.location);\n          },\n          options: {\n            types: ['geocode', 'establishment'],\n            componentRestrictions: {\n              country: \"LK\"\n            },\n            fields: [\"ALL\"]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GMAP, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CustomPlan, \"MFhsaiQM77fQ8v1zWD71JLGm9B8=\");\n\n_c = CustomPlan;\nexport const Map = () => {\n  _s2();\n\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 8,\n      defaultCenter: {\n        lat: 7.291418,\n        lng: 80.636696\n      } // defaultOptions={{ styles: mapStyles }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s2(Map, \"6dOGeNFz7lEsAiwKPNBpp5+ZTyc=\");\n\n_c2 = Map;\n\nconst MapWrapped = ({\n  c\n}) => withScriptjs(withGoogleMap(Map));\n\n_c3 = MapWrapped;\nexport function GMAP() {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    width: \"100%\",\n    height: \"100vh\",\n    flexDirection: \"column\",\n    mx: \"auto\",\n    my: \"2\",\n    boxShadow: \"dark-lg\",\n    children: /*#__PURE__*/_jsxDEV(MapWrapped, {\n      c: 4,\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY`,\n      loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 27\n      }, this),\n      containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }, this),\n      mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_c4 = GMAP;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CustomPlan\");\n$RefreshReg$(_c2, \"Map\");\n$RefreshReg$(_c3, \"MapWrapped\");\n$RefreshReg$(_c4, \"GMAP\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/screens/TravelPlanApp/customPlan.js"],"names":["Flex","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","useState","useEffect","Autocomplete","CustomPlan","place","setPlace","console","log","geometry","location","types","componentRestrictions","country","fields","Map","open","setOpen","lat","lng","MapWrapped","c","GMAP","height"],"mappings":"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","sourcesContent":["import { Flex } from '@chakra-ui/layout';\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\r\nimport {useState,useEffect} from \"react\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\n\r\n\r\nexport const CustomPlan=()=>{\r\n    const [place,setPlace]=useState({})\r\n    return(\r\n        <>\r\n        <Flex  flexDirection=\"row\">\r\n            <Flex width=\"50%\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n\r\n\r\n            <Autocomplete\r\n                apiKey={\"AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY\"}\r\n\r\n\r\n                onPlaceSelected={(place) => {\r\n                    console.log(place);\r\n                    setPlace(place.geometry.location)\r\n                }}\r\n\r\n            \r\n\r\n                options={{\r\n                    types: ['geocode' , 'establishment'],\r\n                    componentRestrictions: { country: \"LK\" },\r\n                    fields:[\"ALL\"]\r\n                  }}\r\n                />\r\n                                \r\n            </Flex>\r\n\r\n        \r\n             <GMAP />\r\n            \r\n\r\n        </Flex>\r\n        \r\n    \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Map=()=>{\r\n  const [open,setOpen]=useState(false);\r\n \r\n  \r\n    return(\r\n        <>\r\n\r\n    <GoogleMap\r\n      defaultZoom={8}\r\n      defaultCenter={{ lat: 7.291418, lng:80.636696}}\r\n      // defaultOptions={{ styles: mapStyles }}\r\n    >\r\n\r\n\r\n        {/* <Marker position={} /> */}\r\n\r\n\r\n\r\n    </GoogleMap>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst MapWrapped=({c}) => withScriptjs(withGoogleMap(Map));\r\n\r\n\r\nexport  function GMAP() {\r\n    return (\r\n        <Flex width=\"100%\" height=\"100vh\" flexDirection=\"column\" mx=\"auto\" my=\"2\" boxShadow=\"dark-lg\">\r\n        <MapWrapped c={4}\r\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY`}\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `100%` }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n      </Flex>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}