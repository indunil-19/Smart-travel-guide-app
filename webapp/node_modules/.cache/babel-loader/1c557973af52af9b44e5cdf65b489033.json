{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 5 project travel guide app\\\\Smart-travel-guide-app\\\\adminportal\\\\src\\\\screens\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom'; // import M from 'materialize-css'\n\nimport NavBar from '../components/navbar';\nimport { Box, useColorModeValue, SimpleGrid, GridItem, Stack, FormControl, FormLabel, Input, Button, Heading } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const history = useHistory();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [password, setPasword] = useState(\"\");\n  const [email, setEmail] = useState(\"\"); // useEffect(()=>{\n  //     if(url){\n  //         uploadFields()\n  //     }\n  // },[url])\n  // const uploadPic = ()=>{\n  //     const data = new FormData()\n  //     data.append(\"file\",image)\n  //     data.append(\"upload_preset\",\"new-insta\")\n  //     data.append(\"cloud_name\",\"cnq\")\n  //     fetch(\"https://api.cloudinary.com/v1_1/cnq/image/upload\",{\n  //         method:\"post\",\n  //         body:data\n  //     })\n  //     .then(res=>res.json())\n  //     .then(data=>{\n  //        setUrl(data.url)\n  //     })\n  //     .catch(err=>{\n  //         console.log(err)\n  //     })\n  // }\n\n  const postData = () => {\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      M.toast({\n        html: \"invalid email\",\n        classes: \"#c62828 red darken-3\"\n      });\n      return;\n    }\n\n    fetch(\"/admin/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstname: firstName,\n        lastname: lastName,\n        dob,\n        password,\n        email\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {//   M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n      } else {\n        //    M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\n        history.push('/admin/viewAdmins');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NavBar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: useColorModeValue(\"gray.50\", \"inherit\"),\n        p: 10,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          visibility: {\n            base: \"hidden\",\n            sm: \"visible\"\n          },\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            py: 5,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              borderTop: \"solid 1px\",\n              borderTopColor: useColorModeValue(\"gray.200\", \"whiteAlpha.200\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              children: \"Fill the form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: [10, 0],\n          children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            display: {\n              base: \"initial\",\n              md: \"grid\"\n            },\n            columns: {\n              md: 3\n            },\n            spacing: {\n              md: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              mt: [5, null, 0],\n              colSpan: {\n                md: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                px: 4,\n                py: 5,\n                p: [null, 6],\n                bg: useColorModeValue(\"white\", \"gray.700\"),\n                spacing: 6,\n                children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n                  columns: 6,\n                  spacing: 6,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    as: GridItem,\n                    colSpan: [6, 3],\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      htmlFor: \"first_name\",\n                      fontSize: \"sm\",\n                      fontWeight: \"md\",\n                      color: useColorModeValue(\"gray.700\", \"gray.50\"),\n                      children: \"First name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"text\",\n                      name: \"first_name\",\n                      id: \"first_name\",\n                      autoComplete: \"given-name\",\n                      mt: 1,\n                      focusBorderColor: \"brand.400\",\n                      shadow: \"sm\",\n                      size: \"sm\",\n                      w: \"full\",\n                      rounded: \"md\",\n                      value: firstName,\n                      onChange: e => setFirstName(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    as: GridItem,\n                    colSpan: [6, 3],\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      htmlFor: \"last_name\",\n                      fontSize: \"sm\",\n                      fontWeight: \"md\",\n                      color: useColorModeValue(\"gray.700\", \"gray.50\"),\n                      children: \"Last name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"text\",\n                      name: \"last_name\",\n                      id: \"last_name\",\n                      autoComplete: \"family-name\",\n                      mt: 1,\n                      focusBorderColor: \"brand.400\",\n                      shadow: \"sm\",\n                      size: \"sm\",\n                      w: \"full\",\n                      rounded: \"md\",\n                      value: lastName,\n                      onChange: e => setLastName(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    as: GridItem,\n                    colSpan: [6, 3],\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      htmlFor: \"email_address\",\n                      fontSize: \"sm\",\n                      fontWeight: \"md\",\n                      color: useColorModeValue(\"gray.700\", \"gray.50\"),\n                      children: \"Email address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"text\",\n                      name: \"email_address\",\n                      id: \"email_address\",\n                      autoComplete: \"email\",\n                      mt: 1,\n                      focusBorderColor: \"brand.400\",\n                      shadow: \"sm\",\n                      size: \"sm\",\n                      w: \"full\",\n                      rounded: \"md\",\n                      value: email,\n                      onChange: e => setEmail(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    as: GridItem,\n                    colSpan: (6, 3),\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      htmlFor: \"password\",\n                      fontSize: \"sm\",\n                      fontWeight: \"md\",\n                      color: useColorModeValue(\"gray.700\", \"gray.50\"),\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"password\",\n                      name: \"password\",\n                      id: \"password\",\n                      autoComplete: \"email\",\n                      mt: 1,\n                      focusBorderColor: \"brand.400\",\n                      shadow: \"sm\",\n                      size: \"sm\",\n                      w: \"full\",\n                      rounded: \"md\",\n                      value: password,\n                      onChange: e => setPasword(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    as: GridItem,\n                    colSpan: (6, 3),\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      htmlFor: \"dob\",\n                      fontSize: \"sm\",\n                      fontWeight: \"md\",\n                      color: useColorModeValue(\"gray.700\", \"gray.50\"),\n                      children: \"Birthday\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"date\",\n                      name: \"Date of Birth\",\n                      id: \"dob\",\n                      autoComplete: \"dob\",\n                      mt: 1,\n                      focusBorderColor: \"brand.400\",\n                      shadow: \"sm\",\n                      size: \"sm\",\n                      w: \"full\",\n                      rounded: \"md\",\n                      value: dob,\n                      onChange: e => setDob(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                px: {\n                  base: 4,\n                  sm: 6\n                },\n                py: 3,\n                bg: useColorModeValue(\"gray.50\", \"gray.900\"),\n                textAlign: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"blue\",\n                  _focus: {\n                    shadow: \"\"\n                  },\n                  fontWeight: \"md\",\n                  onClick: () => postData(),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          visibility: {\n            base: \"hidden\",\n            sm: \"visible\"\n          },\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            py: 5,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              borderTop: \"solid 1px\",\n              borderTopColor: useColorModeValue(\"gray.200\", \"whiteAlpha.200\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"jVLXI2vtg0Eg74qnf+9ldn7fKpQ=\", false, function () {\n  return [useHistory, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/screens/Register.js"],"names":["React","useState","useEffect","Link","useHistory","NavBar","Box","useColorModeValue","SimpleGrid","GridItem","Stack","FormControl","FormLabel","Input","Button","Heading","SignUp","history","firstName","setFirstName","lastName","setLastName","dob","setDob","password","setPasword","email","setEmail","postData","test","M","toast","html","classes","fetch","method","headers","body","JSON","stringify","firstname","lastname","then","res","json","data","error","push","catch","err","console","log","base","sm","md","e","target","value","shadow"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\n// import M from 'materialize-css'\r\nimport NavBar from '../components/navbar'\r\nimport {\r\n    Box,\r\n    useColorModeValue,\r\n    SimpleGrid,\r\n    GridItem,\r\n    Stack,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    Heading,\r\n    \r\n  } from \"@chakra-ui/react\";\r\nconst SignUp  = ()=>{\r\n    const history = useHistory()\r\n    const [firstName,setFirstName] = useState(\"\")\r\n    const [lastName,setLastName] = useState(\"\")\r\n    const [dob, setDob]=useState(\"\")\r\n    const [password,setPasword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    \r\n\r\n    // useEffect(()=>{\r\n    //     if(url){\r\n    //         uploadFields()\r\n    //     }\r\n    // },[url])\r\n    // const uploadPic = ()=>{\r\n    //     const data = new FormData()\r\n    //     data.append(\"file\",image)\r\n    //     data.append(\"upload_preset\",\"new-insta\")\r\n    //     data.append(\"cloud_name\",\"cnq\")\r\n    //     fetch(\"https://api.cloudinary.com/v1_1/cnq/image/upload\",{\r\n    //         method:\"post\",\r\n    //         body:data\r\n    //     })\r\n    //     .then(res=>res.json())\r\n    //     .then(data=>{\r\n    //        setUrl(data.url)\r\n    //     })\r\n    //     .catch(err=>{\r\n    //         console.log(err)\r\n    //     })\r\n    // }\r\n    const postData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/admin/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                firstname:firstName,\r\n                lastname:lastName,\r\n                dob,\r\n                password,\r\n                email,\r\n            \r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n            //   M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n            //    M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/admin/viewAdmins')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n\r\n   return (\r\n      <>\r\n      \r\n      <NavBar>\r\n                    <Box bg={useColorModeValue(\"gray.50\", \"inherit\")} p={10}>\r\n                    \r\n                    <Box visibility={{ base: \"hidden\", sm: \"visible\" }} aria-hidden=\"true\">\r\n                        <Box py={5}>\r\n                        <Box\r\n                            borderTop=\"solid 1px\"\r\n                            borderTopColor={useColorModeValue(\"gray.200\", \"whiteAlpha.200\")}\r\n                        ></Box>\r\n                        <Heading>Fill the form</Heading>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box mt={[10, 0]}>\r\n                        \r\n                        <SimpleGrid\r\n                        display={{ base: \"initial\", md: \"grid\" }}\r\n                        columns={{ md: 3 }}\r\n                        spacing={{ md: 6 }}\r\n                        >\r\n                        \r\n                        <GridItem mt={[5, null, 0]} colSpan={{ md: 2 }}>\r\n                            \r\n                            <Stack\r\n                                px={4}\r\n                                py={5}\r\n                                p={[null, 6]}\r\n                                bg={useColorModeValue(\"white\", \"gray.700\")}\r\n                                spacing={6}\r\n                            >\r\n                                <SimpleGrid columns={6} spacing={6}>\r\n                                <FormControl as={GridItem} colSpan={[6, 3]}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"first_name\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    First name\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"text\"\r\n                                    name=\"first_name\"\r\n                                    id=\"first_name\"\r\n                                    autoComplete=\"given-name\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    value={firstName}\r\n                                    onChange={(e)=>setFirstName(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl as={GridItem} colSpan={[6, 3]}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"last_name\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Last name\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"text\"\r\n                                    name=\"last_name\"\r\n                                    id=\"last_name\"\r\n                                    autoComplete=\"family-name\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    value={lastName}\r\n                                    onChange={(e)=>setLastName(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl as={GridItem} colSpan={[6, 3]}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"email_address\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Email address\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"text\"\r\n                                    name=\"email_address\"\r\n                                    id=\"email_address\"\r\n                                    autoComplete=\"email\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    value={email}\r\n                                    onChange={(e)=>setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl as={GridItem} colSpan={6,3}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"password\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Password\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"email\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    value={password}\r\n                                    onChange={(e)=>setPasword(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                \r\n\r\n                                <FormControl as={GridItem} colSpan={6,3}>\r\n                                    <FormLabel\r\n                                    htmlFor=\"dob\"\r\n                                    fontSize=\"sm\"\r\n                                    fontWeight=\"md\"\r\n                                    color={useColorModeValue(\"gray.700\", \"gray.50\")}\r\n                                    >\r\n                                    Birthday\r\n                                    </FormLabel>\r\n                                    <Input\r\n                                    type=\"date\"\r\n                                    name=\"Date of Birth\"\r\n                                    id=\"dob\"\r\n                                    autoComplete=\"dob\"\r\n                                    mt={1}\r\n                                    focusBorderColor=\"brand.400\"\r\n                                    shadow=\"sm\"\r\n                                    size=\"sm\"\r\n                                    w=\"full\"\r\n                                    rounded=\"md\"\r\n                                    value={dob}\r\n                                    onChange={(e)=>setDob(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                \r\n                                </SimpleGrid>\r\n                            </Stack>\r\n                            <Box\r\n                                px={{ base: 4, sm: 6 }}\r\n                                py={3}\r\n                                bg={useColorModeValue(\"gray.50\", \"gray.900\")}\r\n                                textAlign=\"right\"\r\n                            >\r\n                                <Button\r\n                            \r\n                                colorScheme=\"blue\"\r\n                                _focus={{ shadow: \"\" }}\r\n                                fontWeight=\"md\"\r\n                                onClick={()=>postData()}\r\n                                >\r\n                                Save\r\n                                </Button>\r\n                            </Box>\r\n                           \r\n                        </GridItem>\r\n                        </SimpleGrid>\r\n                    </Box>\r\n\r\n                    <Box visibility={{ base: \"hidden\", sm: \"visible\" }} aria-hidden=\"true\">\r\n                        <Box py={5}>\r\n                        <Box\r\n                            borderTop=\"solid 1px\"\r\n                            borderTopColor={useColorModeValue(\"gray.200\", \"whiteAlpha.200\")}\r\n                        ></Box>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    \r\n                    </Box>\r\n      </NavBar>\r\n      \r\n      \r\n      </>\r\n   )\r\n}\r\n\r\n\r\nexport default SignUp\r\n"]},"metadata":{},"sourceType":"module"}