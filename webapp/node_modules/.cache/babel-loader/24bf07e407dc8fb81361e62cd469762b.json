{"ast":null,"code":"const {\n  Client\n} = require(\"@googlemaps/google-maps-services-js\");\n\nexport const DeletePOI = async (index, index1, travelPlan) => {\n  const client = new Client({});\n  const start_location = {};\n  const end_location = {};\n  console.log(index, index1, travelPlan);\n  const travelDays = travelPlan[0].length;\n  const plan = travelPlan[0];\n\n  if (index > 0) {\n    if (index1 > 0) {\n      start_location = plan[index][index1 - 1];\n    } else if (index1 == 0) {\n      start_location = plan[index - 1][plan[index - 1].length - 1];\n    }\n  } else if (index == 0) {\n    if (index1 == 0) {\n      start_location = {\n        lat: 6.927079,\n        lng: 79.857750\n      };\n    } else if (index1 > 0) {\n      start_location = plan[index][index1 - 1];\n    }\n  }\n\n  if (index < travelDays - 1) {\n    if (index1 == plan[index].length - 1) {\n      end_location = plan[index + 1][1];\n    } else if (index1 < plan[index].length - 1) end_location = plan[index][index1 + 1];\n  } else if (index == travelDays - 1) {\n    if (index1 == plan[index].length - 1) {\n      return;\n    }\n\n    if (index1 < plan[index].length - 1) {\n      end_location == plan[index][index1 + 1];\n    }\n  }\n\n  return client.directions({\n    params: {\n      origin: start_location.geometry.location,\n      destination: end_location.geometry.location,\n      optimizeWaypoints: true,\n      travelMode: 'DRIVING',\n      key: \"AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY\"\n    }\n  }).then(response => {\n    const route = response.data.routes[0];\n    console.log(route);\n  }).catch(e => {\n    console.log(e);\n  });\n};\n_c = DeletePOI;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeletePOI\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/services/EditPlanServices.js"],"names":["Client","require","DeletePOI","index","index1","travelPlan","client","start_location","end_location","console","log","travelDays","length","plan","lat","lng","directions","params","origin","geometry","location","destination","optimizeWaypoints","travelMode","key","then","response","route","data","routes","catch","e"],"mappings":"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","sourcesContent":["const {Client} = require(\"@googlemaps/google-maps-services-js\");\r\n\r\n   \r\nexport const DeletePOI=async(index, index1, travelPlan)=>{\r\n    const client = new Client({});\r\n    const start_location={}\r\n    const end_location={}\r\n    \r\n    console.log(index,index1,travelPlan)\r\n    const travelDays=travelPlan[0].length\r\n    const plan=travelPlan[0]\r\n    if(index>0){\r\n      if(index1>0){\r\n        start_location=plan[index][index1-1]\r\n      }\r\n      else if(index1==0){\r\n        start_location=plan[index-1][plan[index-1].length-1]\r\n      }\r\n      \r\n    }\r\n    else if(index==0){\r\n      if(index1==0){\r\n        start_location={lat:6.927079,lng:79.857750}\r\n\r\n      }\r\n      else if(index1>0){\r\n        start_location=plan[index][index1-1]\r\n      }\r\n      \r\n    }\r\n\r\n\r\n    if(index<travelDays-1){\r\n      if(index1==plan[index].length-1){\r\n        end_location=plan[index+1][1]\r\n      }\r\n      else if(index1<plan[index].length-1)\r\n        end_location=plan[index][index1+1]\r\n    }\r\n    else if(index==travelDays-1){\r\n       if(index1==plan[index].length-1){\r\n          \r\n          return\r\n       }\r\n       if (index1<plan[index].length-1){\r\n         end_location==plan[index][index1+1]\r\n       }\r\n    }\r\n\r\n\r\n    return client\r\n      .directions({params:{\r\n          origin:start_location.geometry.location,\r\n          destination:end_location.geometry.location,\r\n          optimizeWaypoints: true,\r\n          travelMode: 'DRIVING',\r\n          key: \"AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY\",\r\n\r\n        }})\r\n        .then((response) => {\r\n          const route = response.data.routes[0];\r\n          console.log(route)\r\n         \r\n\r\n        })\r\n         .catch((e) =>{ \r\n           console.log(e)\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n \r\n   \r\n\r\n}"]},"metadata":{},"sourceType":"module"}