{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 5 project travel guide app\\\\Smart-travel-guide-app\\\\webapp\\\\src\\\\screens\\\\TravelPlanApp\\\\TravelPlan.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Box, Flex, HStack, Stack, VStack } from \"@chakra-ui/layout\";\nimport { Image, Heading, Button, Text, Badge, Avatar, Skeleton, Divider, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay, Tabs, TabList, TabPanels, Tab, TabPanel, useToast, Spinner } from \"@chakra-ui/react\";\nimport { IoLocationSharp } from \"react-icons/io5\";\nimport { MdDriveEta } from \"react-icons/md\";\nimport { TravelContext } from \"../../context/TravelContext\";\nimport { getTravelPlan } from \"../../services/TravelPlanService\";\nimport { PlaceCard } from \"../../components/TravelPlanApp/placeCard\";\nimport { FiEdit, FiSave } from \"react-icons/fi\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer, Polyline } from \"react-google-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TravelPlan = () => {\n  _s();\n\n  const toast = useToast();\n  const history = useHistory();\n  const {\n    state,\n    dispatch\n  } = useContext(TravelContext);\n  const [isloading, setLoading] = useState(false);\n  const [plan, setPlan] = useState([[], []]);\n  useEffect(() => {\n    if (state.travelPlan) {\n      setLoading(true);\n      setPlan(state.travelPlan);\n    } else {\n      setLoading(false); //  getTravelPlan(state.userPreferences.climate,state.userPreferences.provinces,state.userPreferences.days,state.userPreferences.religion,state.userPreferences.thingsLike,state.userPreferences.placesLike).then((r)=>{\n      //  console.log(r[0])\n      //  setPlan(r[0])\n      //  setLoading(true)\n      //  dispatch({type:\"set_travelPlan\" , payload:{travelPlan:r[0]}})\n      //  dispatch({type:\"set_pois\" , payload:{allpois:r[1]}})\n      //  console.log(r[0][0][0].photos[0].photo_reference)\n      // \"wet\",[],\"2\",\"buddhsism\",[],[\"ancient\", \"natural\", \"parks\"]\n      // state.userPreferences.climate,state.userPreferences.provinces,state.userPreferences.days,state.userPreferences.religion,state.userPreferences.thingsLike,state.userPreferences.placesLike\n      // })\n    }\n  }, [state]);\n  var i = 0;\n  var accomodation = \"\";\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onClose = () => setIsOpen(false);\n\n  const cancelRef = useRef();\n\n  const savePlan = () => {\n    fetch('/user/saveTravelPlan', {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        travelPlan: state.travelPlan\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        toast({\n          title: data.error,\n          position: \"top-right\",\n          status: \"error\",\n          duration: 4000,\n          isClosable: true\n        });\n      } else {\n        toast({\n          title: data.message,\n          position: \"top-right\",\n          status: \"success\",\n          duration: 4000,\n          isClosable: true\n        });\n        history.push(\"/travelPlan/myplans\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const updatePlan = () => {\n    fetch('/user/updateTravelPlan', {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        planId: state.planId,\n        travelPlan: state.travelPlan\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      history.push(\"/travelPlan/myplans\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(AlertDialog, {\n        isOpen: isOpen,\n        leastDestructiveRef: cancelRef,\n        onClose: onClose,\n        children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n          children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n              fontSize: \"lg\",\n              fontWeight: \"bold\",\n              children: [state.planId ? \"update\" : \"save\", \" Travel Plan\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n              children: [\"Do you want to \", state.planId ? \"update\" : \"save\", \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                ref: cancelRef,\n                onClick: onClose,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                colorScheme: \"blue\",\n                onClick: onClose,\n                ml: 3,\n                onClick: () => {\n                  if (state.planId) {\n                    updatePlan();\n                  } else {\n                    savePlan();\n                  }\n                },\n                children: \"save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false), !isloading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      thickness: \"4px\",\n      speed: \"0.65s\",\n      emptyColor: \"gray.200\",\n      color: \"blue.500\",\n      size: \"xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Tabs, {\n      variant: \"soft-rounded\",\n      colorScheme: \"teal\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        boxShadow: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: \"https://www.thexpressng.com/wp-content/uploads/2019/03/SriLanka_Slider.jpg\",\n          height: \"400px\",\n          width: \"100%\",\n          objectFit: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          marginTop: \"-350px\",\n          boxShadow: \"dark-lg\",\n          borderRadius: \"5px\",\n          padding: \"10px\",\n          marginBottom: \"300px\",\n          children: [plan[0].length, \" Day Trip in \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 4,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(TabList, {\n            m: \"5px\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              children: \"Travel Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              children: \"Travel Route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n        children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(IoLocationSharp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 20\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Badge, {\n                size: \"15\",\n                children: \"9.00 a.m\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 39\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"3xl\",\n                children: \"Start from colombo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 73\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: plan[0] && plan[0].map((Item = [], index) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    color: \"white\",\n                    backgroundColor: \"black\",\n                    padding: 3,\n                    children: [\"Day \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 28\n                  }, this), Item.map((subItem, index) => {\n                    i = i + 1;\n                    accomodation = subItem.geometry.location;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(Card, {\n                        name: subItem.name,\n                        photo: subItem.photos[0].photo_reference,\n                        address: subItem.formatted_address,\n                        rating: subItem.rating,\n                        index: i,\n                        distance: plan[1][i - 1].distance.text,\n                        duration: plan[1][i - 1].duration.text,\n                        place_id: subItem.place_id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false);\n                  }), /*#__PURE__*/_jsxDEV(Button, {\n                    colorScheme: \"teal\",\n                    variant: \"solid\",\n                    m: 15,\n                    width: \"50%\",\n                    onClick: () => {\n                      dispatch({\n                        type: \"accomodation_location\",\n                        payload: {\n                          accomodation_location: accomodation\n                        }\n                      });\n                      history.push('/travelPlan/nearbyhotels');\n                    },\n                    children: \"Find Accomodations\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 28\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                    orientation: \"horizontal\",\n                    mb: 2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true);\n              })\n            }, void 0, false), /*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(IoLocationSharp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 20\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Badge, {\n                size: \"15\",\n                children: \"6.00 p.m\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 39\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"3xl\",\n                children: [\"End - \", plan[1].length ? plan[1][plan[1].length - 1].end_address : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 73\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            position: \"fixed\",\n            bottom: \"0\",\n            right: \"0\",\n            p: 3,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"teal\",\n              size: \"lg\",\n              borderRadius: \"50%\",\n              onClick: () => {\n                history.push(\"/travelPlan/editPlan\");\n              },\n              children: /*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"teal\",\n              size: \"lg\",\n              borderRadius: \"50%\",\n              onClick: () => {\n                setIsOpen(true);\n              },\n              children: /*#__PURE__*/_jsxDEV(FiSave, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(Route, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TravelPlan, \"Anorh6M7CADI479e6HYU7vI487k=\", false, function () {\n  return [useToast, useHistory];\n});\n\n_c = TravelPlan;\n\nconst Card = ({\n  distance,\n  duration,\n  photo,\n  index,\n  name,\n  address,\n  types = [],\n  rating,\n  place_id\n}) => {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"10px\",\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      h: \"100px\",\n      p: 4,\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"vertical\",\n        variant: \"dashed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        children: [/*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(MdDriveEta, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 41\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"2xl\",\n            children: [distance, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 57\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Badge, {\n          size: \"15\",\n          children: duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(PlaceCard, {\n      photo: photo,\n      index: index,\n      name: name,\n      address: address,\n      types: types,\n      rating: rating,\n      place_id: place_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Card;\n\nconst Map = () => {\n  _s2();\n\n  const {\n    state,\n    dispatch\n  } = useContext(TravelContext);\n  const [plan, setPlan] = useState([[[]], []]);\n  useEffect(() => {\n    setPlan(state.travelPlan);\n  }, [state.travelPlan]);\n  const [open, setOpen] = useState(false);\n  var i = 0;\n  const path = [{\n    lat: 6.927079,\n    lng: 79.857750\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 8,\n      defaultCenter: {\n        lat: 7.291418,\n        lng: 80.636696\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: 6.927079,\n          lng: 79.857750\n        },\n        label: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), plan && plan[0].map((item = [], index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: item.map((subitem, index) => {\n            i = i + 1;\n            path.push(subitem.geometry.location);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Marker, {\n                position: subitem.geometry.location,\n                label: `${i}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 29\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false);\n      }), /*#__PURE__*/_jsxDEV(Polyline, {\n        path: path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(Map, \"v+NhDG8MLQA30tZYx4OTPbWggSM=\");\n\n_c3 = Map;\nconst MapWrapped = withScriptjs(_c4 = withGoogleMap(Map));\n_c5 = MapWrapped;\n\nconst Route = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      width: \"80%\",\n      height: \"100vh\",\n      flexDirection: \"column\",\n      mx: \"auto\",\n      my: \"2\",\n      boxShadow: \"dark-lg\",\n      children: /*#__PURE__*/_jsxDEV(MapWrapped, {\n        googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA`,\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 27\n        }, this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c6 = Route;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"TravelPlan\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Map\");\n$RefreshReg$(_c4, \"MapWrapped$withScriptjs\");\n$RefreshReg$(_c5, \"MapWrapped\");\n$RefreshReg$(_c6, \"Route\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/webapp/src/screens/TravelPlanApp/TravelPlan.js"],"names":["React","useContext","useEffect","useState","useRef","useHistory","Box","Flex","HStack","Stack","VStack","Image","Heading","Button","Text","Badge","Avatar","Skeleton","Divider","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","Tabs","TabList","TabPanels","Tab","TabPanel","useToast","Spinner","IoLocationSharp","MdDriveEta","TravelContext","getTravelPlan","PlaceCard","FiEdit","FiSave","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","DirectionsRenderer","Polyline","TravelPlan","toast","history","state","dispatch","isloading","setLoading","plan","setPlan","travelPlan","i","accomodation","isOpen","setIsOpen","onClose","cancelRef","savePlan","fetch","method","headers","body","JSON","stringify","then","res","json","data","error","title","position","status","duration","isClosable","message","push","catch","err","console","log","updatePlan","planId","length","map","Item","index","subItem","geometry","location","name","photos","photo_reference","formatted_address","rating","distance","text","place_id","type","payload","accomodation_location","end_address","Card","photo","address","types","Map","open","setOpen","path","lat","lng","item","subitem","MapWrapped","Route","height"],"mappings":"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","sourcesContent":["import React , {useContext,useEffect,useState, useRef}from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { Box, Flex ,HStack,Stack, VStack} from \"@chakra-ui/layout\"\r\nimport { Image,Heading,Button,Text,Badge, Avatar , Skeleton ,Divider,AlertDialog, AlertDialogBody, AlertDialogFooter,AlertDialogHeader,AlertDialogContent,AlertDialogOverlay,Tabs, TabList, TabPanels, Tab, TabPanel,useToast,Spinner} from \"@chakra-ui/react\"\r\nimport {IoLocationSharp} from \"react-icons/io5\"\r\nimport {MdDriveEta} from \"react-icons/md\"\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport { getTravelPlan } from \"../../services/TravelPlanService\"\r\nimport { PlaceCard } from \"../../components/TravelPlanApp/placeCard\"\r\nimport { FiEdit, FiSave} from \"react-icons/fi\";\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow,DirectionsRenderer,Polyline } from \"react-google-maps\"\r\n\r\n\r\n\r\nexport const TravelPlan=()=>{\r\n    const toast=useToast()\r\n    const history=useHistory()\r\n    const {state, dispatch}=useContext(TravelContext)\r\n    const [isloading,setLoading]=useState(false)\r\n    const [plan,setPlan]=useState([[], []])\r\n    useEffect( ()=>{ \r\n\r\n        if(state.travelPlan){\r\n            setLoading(true)\r\n            setPlan(state.travelPlan)\r\n           \r\n            \r\n        }\r\n        else{\r\n            setLoading(false)\r\n        //  getTravelPlan(state.userPreferences.climate,state.userPreferences.provinces,state.userPreferences.days,state.userPreferences.religion,state.userPreferences.thingsLike,state.userPreferences.placesLike).then((r)=>{\r\n        //  console.log(r[0])\r\n        //  setPlan(r[0])\r\n        //  setLoading(true)\r\n        //  dispatch({type:\"set_travelPlan\" , payload:{travelPlan:r[0]}})\r\n        //  dispatch({type:\"set_pois\" , payload:{allpois:r[1]}})\r\n         \r\n         \r\n        //  console.log(r[0][0][0].photos[0].photo_reference)\r\n        // \"wet\",[],\"2\",\"buddhsism\",[],[\"ancient\", \"natural\", \"parks\"]\r\n        // state.userPreferences.climate,state.userPreferences.provinces,state.userPreferences.days,state.userPreferences.religion,state.userPreferences.thingsLike,state.userPreferences.placesLike\r\n    // })\r\n}\r\n } ,[state] )\r\n    var i=0;\r\n    var accomodation=\"\"\r\n\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const cancelRef = useRef()\r\n\r\n\r\n    const savePlan=()=>{\r\n        fetch('/user/saveTravelPlan',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                travelPlan:state.travelPlan\r\n            })\r\n        }).then(res=>res.json()).then((data)=>{\r\n                if(data.error){\r\n                    toast({\r\n                        title: data.error,\r\n                        position:\"top-right\",\r\n                        status:\"error\",\r\n                        duration: 4000,\r\n                        isClosable: true,\r\n                      })\r\n                }\r\n                else{\r\n                    toast({\r\n                        title: data.message,\r\n                        position:\"top-right\",\r\n                        status:\"success\",\r\n                        duration: 4000,\r\n                        isClosable: true,\r\n                      })\r\n                    history.push(\"/travelPlan/myplans\")\r\n                }\r\n                \r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const updatePlan=()=>{\r\n        fetch('/user/updateTravelPlan',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                planId:state.planId,\r\n                travelPlan:state.travelPlan\r\n            })\r\n        }).then(res=>res.json()).then((data)=>{\r\n                console.log(data)\r\n                history.push(\"/travelPlan/myplans\")\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n                <>\r\n                \r\n                <AlertDialog\r\n                    isOpen={isOpen}\r\n                    leastDestructiveRef={cancelRef}\r\n                    onClose={onClose}\r\n                >\r\n                    <AlertDialogOverlay>\r\n                    <AlertDialogContent>\r\n                        <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                        {state.planId ? \"update\" : \"save\"} Travel Plan\r\n                        </AlertDialogHeader>\r\n\r\n                        <AlertDialogBody>\r\n                        Do you want to {state.planId ? \"update\" : \"save\"}?\r\n                        </AlertDialogBody>\r\n\r\n                        <AlertDialogFooter>\r\n                        <Button ref={cancelRef} onClick={onClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button colorScheme=\"blue\" onClick={onClose} ml={3} onClick={()=>{\r\n                                if(state.planId){\r\n                                    updatePlan();\r\n                                }\r\n                                else{\r\n                                    savePlan();\r\n                                }\r\n                                        \r\n                        }}>\r\n                            save\r\n                        </Button>\r\n                        </AlertDialogFooter>\r\n                    </AlertDialogContent>\r\n                    </AlertDialogOverlay>\r\n                </AlertDialog>\r\n                </>\r\n\r\n\r\n         {!isloading? \r\n                \r\n                <Spinner\r\n                thickness=\"4px\"\r\n                speed=\"0.65s\"\r\n                emptyColor=\"gray.200\"\r\n                color=\"blue.500\"\r\n                size=\"xl\"\r\n               \r\n                />:\r\n\r\n         <Tabs variant=\"soft-rounded\" colorScheme=\"teal\">\r\n         <Flex alignItems=\"center\" flexDirection=\"column\" boxShadow=\"lg\">\r\n             <Image src=\"https://www.thexpressng.com/wp-content/uploads/2019/03/SriLanka_Slider.jpg\"   height=\"400px\" width=\"100%\" objectFit=\"cover\"/>\r\n             <Heading  marginTop=\"-350px\" boxShadow=\"dark-lg\" borderRadius=\"5px\" padding=\"10px\" marginBottom=\"300px\">{plan[0].length} Day Trip in </Heading>\r\n             <Stack direction=\"row\" spacing={4} align=\"center\">                    \r\n                    <TabList m=\"5px\">\r\n                        <Tab>Travel Plan</Tab>\r\n                        <Tab>Travel Route</Tab>\r\n                    </TabList>\r\n             </Stack>\r\n        </Flex>\r\n\r\n        <TabPanels>\r\n        <TabPanel>\r\n\r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n        \r\n\r\n            <HStack> \r\n                   <IoLocationSharp/> <Badge size=\"15\">9.00 a.m</Badge> <Text fontSize=\"3xl\">Start from colombo</Text>                  \r\n            </HStack>\r\n         \r\n\r\n            <>\r\n                    { (plan[0]) &&\r\n                    plan[0].map((Item=[], index)=>{\r\n                        \r\n                        return (\r\n                        <>\r\n                           <Box color=\"white\" backgroundColor=\"black\" padding={3} >Day {index+1}</Box>\r\n                        {\r\n                            Item.map( (subItem, index,)=>{\r\n                                i=i+1\r\n                                accomodation=subItem.geometry.location\r\n                                return(\r\n                                <> \r\n\r\n                                <Card name={subItem.name} photo={subItem.photos[0].photo_reference} address={subItem.formatted_address} rating={subItem.rating} index={i} distance={plan[1][i-1].distance.text} duration={plan[1][i-1].duration.text}  place_id={subItem.place_id}/>\r\n                                </>\r\n                                )\r\n                            })\r\n                        }\r\n                           <Button colorScheme=\"teal\" variant=\"solid\" m={15} width=\"50%\" onClick={()=>{\r\n                                            dispatch({type:\"accomodation_location\", payload:{\r\n                                                accomodation_location:accomodation\r\n                                            }})\r\n                                            history.push('/travelPlan/nearbyhotels')\r\n                                        }}>\r\n                                Find Accomodations\r\n                           </Button>\r\n                           <Divider orientation=\"horizontal\" mb={2} />\r\n                        </>\r\n                        \r\n                        \r\n                    )\r\n                    })}             \r\n             </>\r\n                 \r\n\r\n\r\n            <HStack> \r\n                   <IoLocationSharp/> <Badge size=\"15\">6.00 p.m</Badge> <Text fontSize=\"3xl\">End - {plan[1].length ? plan[1][plan[1].length-1].end_address : \"\"}</Text>                  \r\n            </HStack>\r\n\r\n\r\n            \r\n\r\n\r\n\r\n        </Flex>\r\n\r\n        <VStack position=\"fixed\" bottom=\"0\" right=\"0\" p={3} >\r\n        <Button colorScheme=\"teal\" size=\"lg\" borderRadius=\"50%\" onClick={()=>{\r\n            history.push(\"/travelPlan/editPlan\")\r\n        }}>\r\n            <FiEdit/>\r\n        </Button>\r\n\r\n        <Button colorScheme=\"teal\" size=\"lg\" borderRadius=\"50%\" onClick={()=>{\r\n             setIsOpen(true)\r\n\r\n        }}>\r\n            <FiSave />\r\n        </Button>\r\n        </VStack>\r\n        </TabPanel>\r\n\r\n\r\n\r\n        <TabPanel>\r\n\r\n           <Route />\r\n        </TabPanel>\r\n        </TabPanels>\r\n        </Tabs>\r\n\r\n        }\r\n\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\nconst Card=({distance,duration,photo,index,name,address, types=[], rating, place_id})=>{\r\n\r\n    return(\r\n        <Flex flexDirection=\"column\" alignItems=\"center\" padding=\"10px\">\r\n                        <HStack  h=\"100px\" p={4}>\r\n                            <Divider orientation=\"vertical\"   variant=\"dashed\" />\r\n                            <VStack>\r\n                                <HStack>< MdDriveEta /> <Text fontSize=\"2xl\">{distance} </Text> </HStack>\r\n                                <Badge size=\"15\">{duration}</Badge>\r\n                            </VStack>\r\n\r\n                        </HStack>\r\n                        <PlaceCard  photo={photo} index={index} name={name} address={address} types={types} rating={rating} place_id={place_id}/>\r\n        </Flex>\r\n    )\r\n}\r\nconst Map=()=>{\r\n    const {state,dispatch}=useContext(TravelContext)\r\n    const [plan,setPlan]=useState([[[]],[]])\r\n    useEffect(()=>{\r\n        setPlan(state.travelPlan)\r\n    },[state.travelPlan])\r\n    const [open,setOpen]=useState(false);\r\n\r\n    var i=0;\r\n    const path=[{lat:6.927079,lng:79.857750}]\r\n      return(\r\n          <>\r\n  \r\n      <GoogleMap\r\n        defaultZoom={8}\r\n        defaultCenter={{ lat: 7.291418, lng:80.636696}}\r\n      >\r\n     {/* {plan?\r\n     <DirectionsRenderer directions={ plan[1][1] } />\r\n     :<> </>\r\n    } */}\r\n        <Marker position={{lat:6.927079,lng:79.857750}} label={\"start\"} />\r\n        {plan && plan[0].map((item=[],index)=>{\r\n            return(\r\n                <>\r\n                    {item.map((subitem,index)=>{\r\n                        i=i+1\r\n                        path.push(subitem.geometry.location)\r\n                        return(\r\n                            <>\r\n                            <Marker position={subitem.geometry.location} label={`${i}`} />\r\n                            \r\n                            </>\r\n                        )\r\n                    })}\r\n                </>\r\n            )\r\n        })\r\n\r\n        }\r\n\r\n        <Polyline   path={path}/>\r\n\r\n      \r\n    \r\n      </GoogleMap>\r\n          \r\n          </>\r\n    )\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\n\r\nconst Route=()=>{\r\n    return(\r\n        <>\r\n        <Flex width=\"80%\" height=\"100vh\" flexDirection=\"column\" mx=\"auto\" my=\"2\" boxShadow=\"dark-lg\">\r\n        <MapWrapped\r\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA`}\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `100%` }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n        </Flex>    \r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}