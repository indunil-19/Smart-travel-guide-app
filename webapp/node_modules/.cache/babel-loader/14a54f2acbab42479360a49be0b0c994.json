{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 5 project travel guide app\\\\Smart-travel-guide-app\\\\adminportal\\\\src\\\\screens\\\\TravelPlanApp\\\\customPlan.js\",\n    _s = $RefreshSig$();\n\nimport { Flex, VStack, HStack, Text } from '@chakra-ui/layout';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport { useState, useEffect, useContext, useH } from \"react\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport { TravelContext } from \"../../context/TravelContext\";\nimport { Button, Heading, Image } from \"@chakra-ui/react\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { calculateAndDisplayRoute } from '../../services/TravelPlanService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CustomPlan = () => {\n  _s();\n\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const {\n    state,\n    dispatch\n  } = useContext(TravelContext);\n  const [display, setDisplay] = useState({});\n  const [p, setP] = useState([]);\n  const places = new Array();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      width: \"100%\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        style: {\n          width: \"40%\",\n          height: \"30px\",\n          padding: \"5px\",\n          margin: \"15px\",\n          background: \"grey\",\n          borderRadius: \"5px\",\n          color: \"white\"\n        },\n        apiKey: \"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\",\n        onPlaceSelected: place => {\n          if (place.geometry.location) {\n            console.log(place);\n            setP(p => [...p, place]);\n          }\n        },\n        options: {\n          types: ['geocode', 'establishment'],\n          componentRestrictions: {\n            country: \"LK\"\n          },\n          fields: [\"ALL\"]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }, this), p.map((i, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(HStack, {\n          p: 3,\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h5\",\n            size: \"md\",\n            children: [index + 1, \"  \", i.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              console.log(index);\n              setP(p.filter((item, index1) => {\n                if (index1 !== index) return item;\n              }));\n            },\n            children: /*#__PURE__*/_jsxDEV(MdDeleteForever, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }), p.length ? /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"teal\",\n      variant: \"outline\",\n      onClick: () => {\n        calculateAndDisplayRoute(p).then(r => {\n          dispatch({\n            type: \"set_travelPlan\",\n            payload: {\n              travelPlan: r[0]\n            }\n          });\n          dispatch({\n            type: \"set_pois\",\n            payload: {\n              allpois: r[1]\n            }\n          });\n          history.push(\"/travelPlan/travelPlan\");\n        });\n      },\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n};\n\n_s(CustomPlan, \"2B6eD5Z2/0viCImIZ8v3nWgTDiw=\", true);\n\n_c = CustomPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomPlan\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/screens/TravelPlanApp/customPlan.js"],"names":["Flex","VStack","HStack","Text","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","useState","useEffect","useContext","useH","Autocomplete","TravelContext","Button","Heading","Image","MdDeleteForever","calculateAndDisplayRoute","CustomPlan","history","useHistory","open","setOpen","state","dispatch","display","setDisplay","p","setP","places","Array","width","height","padding","margin","background","borderRadius","color","place","geometry","location","console","log","types","componentRestrictions","country","fields","map","i","index","name","filter","item","index1","length","then","r","type","payload","travelPlan","allpois","push"],"mappings":";;;AAAA,SAASA,IAAT,EAAcC,MAAd,EAAqBC,MAArB,EAA4BC,IAA5B,QAAwC,mBAAxC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,EAAyDC,UAAzD,QAA2E,mBAA3E;AACA,SAAQC,QAAR,EAAiBC,SAAjB,EAA2BC,UAA3B,EAAsCC,IAAtC,QAAiD,OAAjD;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAAyBC,KAAzB,QAAwC,kBAAxC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,wBAAT,QAAyC,kCAAzC;;;AAEA,OAAO,MAAMC,UAAU,GAAC,MAAI;AAAA;;AAC1B,QAAMC,OAAO,GAACC,UAAU,EAAxB;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAef,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM;AAACgB,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAkBf,UAAU,CAACG,aAAD,CAAlC;AACA,QAAM,CAACa,OAAD,EAASC,UAAT,IAAqBnB,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAM,CAACoB,CAAD,EAAGC,IAAH,IAASrB,QAAQ,CAAC,EAAD,CAAvB;AACA,QAAMsB,MAAM,GAAC,IAAIC,KAAJ,EAAb;AAME,sBACI;AAAA,4BACD,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAmB,MAAA,UAAU,EAAC,QAA9B;AAAuC,MAAA,aAAa,EAAC,QAArD;AAA8D,MAAA,cAAc,EAAC,QAA7E;AAAA,6BAEC,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC,KAAP;AAAcC,UAAAA,MAAM,EAAC,MAArB;AAA6BC,UAAAA,OAAO,EAAC,KAArC;AAA4CC,UAAAA,MAAM,EAAC,MAAnD;AAA0DC,UAAAA,UAAU,EAAC,MAArE;AAA6EC,UAAAA,YAAY,EAAC,KAA1F;AAAiGC,UAAAA,KAAK,EAAC;AAAvG,SAArB;AACA,QAAA,MAAM,EAAE,yCADR;AAGA,QAAA,eAAe,EAAGC,KAAD,IAAW;AAC1B,cAAGA,KAAK,CAACC,QAAN,CAAeC,QAAlB,EAA2B;AACzBC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAV,YAAAA,IAAI,CAACD,CAAC,IAAE,CAAC,GAAGA,CAAJ,EAAMW,KAAN,CAAJ,CAAJ;AACD;AAIF,SAXD;AAaA,QAAA,OAAO,EAAE;AACLK,UAAAA,KAAK,EAAE,CAAC,SAAD,EAAa,eAAb,CADF;AAELC,UAAAA,qBAAqB,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAFlB;AAGLC,UAAAA,MAAM,EAAC,CAAC,KAAD;AAHF;AAbT;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,YADC,EA2BCnB,CAAC,CAACoB,GAAF,CAAM,CAACC,CAAD,EAAGC,KAAH,KAAW;AAEhB,0BACE;AAAA,+BACA,QAAC,MAAD;AAAQ,UAAA,CAAC,EAAE,CAAX;AAAA,kCACA,QAAC,OAAD;AAAS,YAAA,EAAE,EAAC,IAAZ;AAAiB,YAAA,IAAI,EAAC,IAAtB;AAAA,uBACKA,KAAK,GAAC,CADX,EAEK,IAFL,EAGKD,CAAC,CAACE,IAHP;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAOA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAI;AACfT,cAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACArB,cAAAA,IAAI,CAACD,CAAC,CAACwB,MAAF,CAAS,CAACC,IAAD,EAAMC,MAAN,KAAe;AACxB,oBAAGA,MAAM,KAAIJ,KAAb,EAAqB,OAAOG,IAAP;AACzB,eAFI,CAAD,CAAJ;AAGA,aALN;AAAA,mCAMK,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AANL;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,uBADF;AAqBD,KAvBA,CA3BD,EAwDEzB,CAAC,CAAC2B,MAAF,gBAEA,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,MAApB;AAA2B,MAAA,OAAO,EAAC,SAAnC;AAA6C,MAAA,OAAO,EACnD,MAAI;AACHrC,QAAAA,wBAAwB,CAACU,CAAD,CAAxB,CAA4B4B,IAA5B,CAAiCC,CAAC,IAAE;AAClChC,UAAAA,QAAQ,CAAC;AAACiC,YAAAA,IAAI,EAAC,gBAAN;AAAyBC,YAAAA,OAAO,EAAC;AAACC,cAAAA,UAAU,EAACH,CAAC,CAAC,CAAD;AAAb;AAAjC,WAAD,CAAR;AACAhC,UAAAA,QAAQ,CAAC;AAACiC,YAAAA,IAAI,EAAC,UAAN;AAAmBC,YAAAA,OAAO,EAAC;AAACE,cAAAA,OAAO,EAACJ,CAAC,CAAC,CAAD;AAAV;AAA3B,WAAD,CAAR;AACArC,UAAAA,OAAO,CAAC0C,IAAR,CAAa,wBAAb;AAED,SALD;AAMA,OARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,gBAcF,qCAtEA;AAAA,kBADJ;AA6EH,CA1FM;;GAAM3C,U;;KAAAA,U","sourcesContent":["import { Flex,VStack,HStack,Text,} from '@chakra-ui/layout';\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\r\nimport {useState,useEffect,useContext,useH} from \"react\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport { Button, Heading,Image   } from \"@chakra-ui/react\"\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\nimport { calculateAndDisplayRoute } from '../../services/TravelPlanService';\r\n\r\nexport const CustomPlan=()=>{\r\n  const history=useHistory()\r\n  const [open,setOpen]=useState(false);\r\n  const {state, dispatch}=useContext(TravelContext)\r\n  const [display,setDisplay]=useState({})\r\n\r\n  const [p,setP]=useState([])\r\n  const places=new Array()\r\n\r\n  \r\n\r\n    \r\n    \r\n    return(\r\n        <>\r\n       <Flex width=\"100%\" alignItems=\"center\" flexDirection=\"column\" justifyContent=\"center\">\r\n                  \r\n        <Autocomplete style={{width:\"40%\" ,height:\"30px\", padding:\"5px\", margin:\"15px\",background:\"grey\", borderRadius:\"5px\", color:\"white\"}}\r\n        apiKey={\"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\"}\r\n\r\n        onPlaceSelected={(place) => {\r\n          if(place.geometry.location){\r\n            console.log(place)\r\n            setP(p=>[...p,place])\r\n          }\r\n          \r\n\r\n\r\n        }}\r\n\r\n        options={{\r\n            types: ['geocode' , 'establishment'],\r\n            componentRestrictions: { country: \"LK\" },\r\n            fields:[\"ALL\"]\r\n        }}\r\n        >\r\n        </Autocomplete>\r\n\r\n           \r\n      </Flex>\r\n     \r\n        {p.map((i,index)=>{\r\n          \r\n          return(\r\n            <>\r\n            <HStack p={3}>\r\n            <Heading as=\"h5\" size=\"md\">\r\n                {index+1}\r\n                {\"  \"}\r\n                {i.name}\r\n            </Heading>\r\n\r\n            <Button onClick={()=>{\r\n                  console.log(index)\r\n                  setP(p.filter((item,index1)=>{\r\n                       if(index1 !==index)  return item\r\n                  }))\r\n                 }}>\r\n                 <MdDeleteForever />\r\n            </Button>\r\n            </HStack>\r\n            </>\r\n          )\r\n         \r\n        })}\r\n\r\n\r\n\r\n\r\n        {\r\n          p.length ?\r\n\r\n          <Button colorScheme=\"teal\" variant=\"outline\" onClick={\r\n           ()=>{\r\n            calculateAndDisplayRoute(p).then(r=>{\r\n              dispatch({type:\"set_travelPlan\" , payload:{travelPlan:r[0]}})\r\n              dispatch({type:\"set_pois\" , payload:{allpois:r[1]}})\r\n              history.push(\"/travelPlan/travelPlan\")\r\n\r\n            })\r\n           }\r\n          }>\r\n          submit\r\n        </Button> :\r\n        <></>\r\n\r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}