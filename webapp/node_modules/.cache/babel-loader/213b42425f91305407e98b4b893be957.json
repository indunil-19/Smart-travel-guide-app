{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem 5 project travel guide app\\\\Smart-travel-guide-app\\\\webapp\\\\src\\\\screens\\\\TravelPlanApp\\\\customPlan.js\",\n    _s = $RefreshSig$();\n\nimport { Flex, VStack, HStack, Text } from '@chakra-ui/layout';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport { useState, useEffect, useContext, useRef } from \"react\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport { useHistory } from \"react-router\";\nimport { TravelContext } from \"../../context/TravelContext\";\nimport { Button, Heading, Image, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay } from \"@chakra-ui/react\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { calculateAndDisplayRoute } from '../../services/TravelPlanService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CustomPlanInner = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    state,\n    dispatch\n  } = useContext(TravelContext);\n  const [p, setP] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onClose = () => setIsOpen(false);\n\n  const cancelRef = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AlertDialog, {\n      isOpen: isOpen,\n      leastDestructiveRef: cancelRef,\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n        children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n            fontSize: \"lg\",\n            fontWeight: \"bold\",\n            children: \"Places error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n            children: \"you can't add more than 24 places to your plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              ref: cancelRef,\n              onClick: onClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      width: \"100%\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        style: {\n          width: \"40%\",\n          height: \"30px\",\n          padding: \"5px\",\n          margin: \"15px\",\n          background: \"grey\",\n          borderRadius: \"5px\",\n          color: \"white\"\n        },\n        apiKey: \"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\",\n        onPlaceSelected: place => {\n          if (place.length > 24) {\n            setIsOpen(true);\n          }\n\n          if (place.geometry.location) {\n            // console.log(place.photos[0].getUrl())\n            setP(p => [...p, place]);\n          }\n        },\n        options: {\n          types: ['geocode', 'establishment'],\n          componentRestrictions: {\n            country: \"LK\"\n          },\n          fields: [\"ALL\"]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      children: [p.map((i, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            p: 3,\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              as: \"h5\",\n              size: \"md\",\n              children: [index + 1, \".  \", i.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                console.log(index);\n                setP(p.filter((item, index1) => {\n                  if (index1 !== index) return item;\n                }));\n              },\n              children: /*#__PURE__*/_jsxDEV(MdDeleteForever, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      }), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        defaultZoom: 8,\n        defaultCenter: {\n          lat: 7.291418,\n          lng: 80.636696\n        },\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: 6.927079,\n            lng: 79.857750\n          },\n          label: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), plan && plan[0].map((item = [], index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: item.map((subitem, index) => {\n              i = i + 1;\n              path.push(subitem.geometry.location);\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Marker, {\n                  position: subitem.geometry.location,\n                  label: `${i}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false);\n        }), /*#__PURE__*/_jsxDEV(Polyline, {\n          path: path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), p.length ? /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"teal\",\n        variant: \"outline\",\n        onClick: () => {\n          calculateAndDisplayRoute(p).then(r => {\n            dispatch({\n              type: \"set_travelPlan\",\n              payload: {\n                travelPlan: r[0]\n              }\n            });\n            dispatch({\n              type: \"set_pois\",\n              payload: {\n                allpois: r[1]\n              }\n            });\n            history.push(\"/travelPlan/travelPlan\");\n          });\n        },\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomPlanInner, \"5EP4XtFWOOzwSy/m4HL4Qv/lq6w=\", false, function () {\n  return [useHistory];\n});\n\n_c = CustomPlanInner;\nconst MapWrapped = withScriptjs(_c2 = withGoogleMap(CustomPlanInner));\n_c3 = MapWrapped;\nexport const CustomPlan = () => {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    width: \"80%\",\n    height: \"100vh\",\n    flexDirection: \"column\",\n    mx: \"auto\",\n    my: \"2\",\n    boxShadow: \"dark-lg\",\n    children: /*#__PURE__*/_jsxDEV(MapWrapped, {\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA`,\n      loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 27\n      }, this),\n      containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }, this),\n      mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_c4 = CustomPlan;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CustomPlanInner\");\n$RefreshReg$(_c2, \"MapWrapped$withScriptjs\");\n$RefreshReg$(_c3, \"MapWrapped\");\n$RefreshReg$(_c4, \"CustomPlan\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/webapp/src/screens/TravelPlanApp/customPlan.js"],"names":["Flex","VStack","HStack","Text","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","useState","useEffect","useContext","useRef","Autocomplete","useHistory","TravelContext","Button","Heading","Image","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","MdDeleteForever","calculateAndDisplayRoute","CustomPlanInner","history","state","dispatch","p","setP","isOpen","setIsOpen","onClose","cancelRef","width","height","padding","margin","background","borderRadius","color","place","length","geometry","location","types","componentRestrictions","country","fields","map","i","index","name","console","log","filter","item","index1","lat","lng","plan","subitem","path","push","then","r","type","payload","travelPlan","allpois","MapWrapped","CustomPlan"],"mappings":"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","sourcesContent":["import { Flex,VStack,HStack,Text,} from '@chakra-ui/layout';\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\r\nimport {useState,useEffect,useContext,useRef} from \"react\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport { useHistory } from \"react-router\"\r\nimport { TravelContext } from \"../../context/TravelContext\"\r\nimport { Button, Heading,Image,AlertDialog,AlertDialogBody,AlertDialogFooter,AlertDialogHeader,AlertDialogContent,AlertDialogOverlay} from \"@chakra-ui/react\"\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\nimport { calculateAndDisplayRoute } from '../../services/TravelPlanService';\r\n\r\nexport const CustomPlanInner=()=>{\r\n  const history=useHistory()\r\n  const {state, dispatch}=useContext(TravelContext)\r\n\r\n  const [p,setP]=useState([])\r\n \r\n \r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const onClose = () => setIsOpen(false)\r\n  const cancelRef = useRef()\r\n  \r\n\r\n    \r\n    \r\n    return(\r\n        <>\r\n      <AlertDialog\r\n                isOpen={isOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n              >\r\n                <AlertDialogOverlay>\r\n                  <AlertDialogContent>\r\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                      Places error\r\n                    </AlertDialogHeader>\r\n        \r\n                    <AlertDialogBody>\r\n                      you can't add more than 24 places to your plan\r\n                    </AlertDialogBody>\r\n        \r\n                    <AlertDialogFooter>\r\n                      <Button ref={cancelRef} onClick={onClose}>\r\n                        Cancel\r\n                      </Button>\r\n                    </AlertDialogFooter>\r\n                  </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n              </AlertDialog>\r\n\r\n\r\n\r\n       <Flex width=\"100%\" alignItems=\"center\" flexDirection=\"column\" justifyContent=\"center\">\r\n                  \r\n        <Autocomplete style={{width:\"40%\" ,height:\"30px\", padding:\"5px\", margin:\"15px\",background:\"grey\", borderRadius:\"5px\", color:\"white\"}}\r\n        apiKey={\"AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA\"}\r\n\r\n        onPlaceSelected={(place) => {\r\n          if(place.length>24){\r\n              setIsOpen(true)\r\n          }\r\n\r\n\r\n\r\n          if(place.geometry.location){\r\n            // console.log(place.photos[0].getUrl())\r\n            setP(p=>[...p,place])\r\n          }\r\n          \r\n\r\n\r\n        }}\r\n\r\n        options={{\r\n            types: ['geocode' , 'establishment'],\r\n            componentRestrictions: { country: \"LK\" },\r\n            fields:[\"ALL\"]\r\n        }}\r\n        >\r\n        </Autocomplete>\r\n\r\n           \r\n      </Flex>\r\n      <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n     \r\n        {p.map((i,index)=>{\r\n          \r\n          return(\r\n            <>\r\n            <HStack p={3}>\r\n            <Heading as=\"h5\" size=\"md\">\r\n                {index+1}\r\n                {\".  \"}\r\n                {i.name}\r\n            </Heading>\r\n\r\n            <Button onClick={()=>{\r\n                  console.log(index)\r\n                  setP(p.filter((item,index1)=>{\r\n                       if(index1 !==index)  return item\r\n                  }))\r\n                 }}>\r\n                 <MdDeleteForever />\r\n            </Button>\r\n            </HStack>\r\n            </>\r\n          )\r\n         \r\n        })}\r\n\r\n\r\n            <GoogleMap\r\n                    defaultZoom={8}\r\n                    defaultCenter={{ lat: 7.291418, lng:80.636696}}\r\n                  >\r\n                {/* {plan?\r\n                <DirectionsRenderer directions={ plan[1][1] } />\r\n                :<> </>\r\n                } */}\r\n                    <Marker position={{lat:6.927079,lng:79.857750}} label={\"start\"} />\r\n                    {plan && plan[0].map((item=[],index)=>{\r\n                        return(\r\n                            <>\r\n                                {item.map((subitem,index)=>{\r\n                                    i=i+1\r\n                                    path.push(subitem.geometry.location)\r\n                                    return(\r\n                                        <>\r\n                                        <Marker position={subitem.geometry.location} label={`${i}`} />\r\n                                        \r\n                                        </>\r\n                                    )\r\n                                })}\r\n                            </>\r\n                        )\r\n                    })\r\n\r\n                    }\r\n\r\n                    <Polyline   path={path}/>\r\n\r\n      \r\n    \r\n            </GoogleMap>\r\n\r\n\r\n\r\n\r\n        {\r\n          p.length ?\r\n\r\n          <Button colorScheme=\"teal\" variant=\"outline\" onClick={\r\n           ()=>{\r\n            calculateAndDisplayRoute(p).then(r=>{\r\n             \r\n              dispatch({type:\"set_travelPlan\" , payload:{travelPlan:r[0]}})\r\n              dispatch({type:\"set_pois\" , payload:{allpois:r[1]}})\r\n              history.push(\"/travelPlan/travelPlan\")\r\n\r\n            })\r\n           }\r\n          }>\r\n          submit\r\n        </Button> :\r\n        <></>\r\n\r\n        }\r\n        </Flex>\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nconst MapWrapped = withScriptjs(withGoogleMap(CustomPlanInner));\r\n\r\nexport const CustomPlan=()=>{\r\n  return(\r\n    <Flex width=\"80%\" height=\"100vh\" flexDirection=\"column\" mx=\"auto\" my=\"2\" boxShadow=\"dark-lg\">\r\n        <MapWrapped\r\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyChMTwAb_hWwYdvcM_gSGcx84k_al-EtIA`}\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `100%` }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n        </Flex>    \r\n  )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}