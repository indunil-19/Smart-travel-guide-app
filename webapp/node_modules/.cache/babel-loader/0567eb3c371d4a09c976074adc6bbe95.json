{"ast":null,"code":"const {\n  Client\n} = require(\"@googlemaps/google-maps-services-js\");\n\nexport const DeletePOI = async (index, index1, travelPlan = [[[], []], []]) => {\n  const client = new Client({});\n  var start_location = {};\n  var end_location = {};\n  var k = 0;\n  var l = 0;\n\n  for (var i = 0; i <= index; i++) {\n    for (var j = 0; j < travelPlan[i].length; j++) {\n      var k = k + 1;\n\n      if (i == index && j == index1) {\n        l = k;\n      }\n    }\n  }\n\n  console.log(index, index1, travelPlan);\n  var travelDays = travelPlan[0].length;\n  var plan = travelPlan[0];\n\n  if (index > 0) {\n    if (index1 > 0) {\n      console.log(\"1\");\n      start_location = plan[index][index1 - 1].geometry.location; // travelPlan[0][index].pop(index1)\n    } else if (index1 == 0) {\n      console.log(\"2\");\n\n      if (plan[index - 1].length == 0) {\n        start_location = {\n          lat: 6.927079,\n          lng: 79.857750\n        };\n      } else {}\n\n      start_location = plan[index - 1][plan[index - 1].length - 1].geometry.location; // travelPlan[0][index].pop(index1)\n    }\n  } else if (index == 0) {\n    if (index1 == 0) {\n      start_location = {\n        lat: 6.927079,\n        lng: 79.857750\n      }; // travelPlan[0][index].pop(index1)\n    } else if (index1 > 0) {\n      console.log(\"4\");\n      start_location = plan[index][index1 - 1].geometry.location; // travelPlan[0][index].pop(index1)\n    }\n  }\n\n  if (index < travelDays - 1) {\n    if (index1 == plan[index].length - 1) {\n      console.log(\"5\");\n      end_location = plan[index + 1][0].geometry.location;\n      travelPlan[0][index].splice(index1, 1);\n    } else if (index1 < plan[index].length - 1) {\n      console.log(\"6\");\n      end_location = plan[index][index1 + 1].geometry.location;\n      travelPlan[0][index].splice(index1, 1);\n    }\n  } else if (index == travelDays - 1) {\n    if (index1 == plan[index].length - 1) {\n      console.log(\"7\");\n      travelPlan[0][index].splice(index1, 1);\n      travelPlan[1].pop(l - 1);\n      return travelPlan;\n    } else if (index1 < plan[index].length - 1) {\n      console.log(\"8\");\n      end_location = plan[index][index1 + 1].geometry.location;\n      travelPlan[0][index].splice(index1, 1);\n    }\n  }\n\n  return client.directions({\n    params: {\n      origin: start_location,\n      destination: end_location,\n      optimizeWaypoints: true,\n      travelMode: 'DRIVING',\n      key: \"AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY\"\n    }\n  }).then(response => {\n    const route = response.data.routes[0];\n    travelPlan[1].pop(l - 1);\n    travelPlan[1][l - 1] = route.legs[0];\n    return travelPlan;\n  }).catch(e => {\n    console.log(e);\n  });\n};\n_c = DeletePOI;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeletePOI\");","map":{"version":3,"sources":["D:/sem 5 project travel guide app/Smart-travel-guide-app/adminportal/src/services/EditPlanServices.js"],"names":["Client","require","DeletePOI","index","index1","travelPlan","client","start_location","end_location","k","l","i","j","length","console","log","travelDays","plan","geometry","location","lat","lng","splice","pop","directions","params","origin","destination","optimizeWaypoints","travelMode","key","then","response","route","data","routes","legs","catch","e"],"mappings":"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","sourcesContent":["const {Client} = require(\"@googlemaps/google-maps-services-js\");\r\n\r\n   \r\nexport const DeletePOI=async(index, index1, travelPlan=[[[],[]] ,[]])=>{\r\n    const client = new Client({});\r\n    var start_location={}\r\n    var end_location={}\r\n    var k=0\r\n    var l=0\r\n    for(var i=0; i<=index;i++){\r\n      for (var j=0; j<travelPlan[i].length;j++){\r\n        var k=k+1\r\n        if(i==index && j==index1){\r\n            l=k\r\n        }\r\n      }\r\n    } \r\n    \r\n    console.log(index,index1,travelPlan)\r\n    var travelDays=travelPlan[0].length\r\n    var plan=travelPlan[0]\r\n\r\n    if(index>0){\r\n      if(index1>0){\r\n        console.log(\"1\")\r\n        start_location=plan[index][index1-1].geometry.location\r\n        // travelPlan[0][index].pop(index1)\r\n      }\r\n      else if(index1==0){\r\n        console.log(\"2\")\r\n        if(plan[index-1].length==0){\r\n          start_location={lat:6.927079,lng:79.857750}\r\n        }\r\n        else{\r\n          \r\n        }\r\n        start_location=plan[index-1][plan[index-1].length-1].geometry.location\r\n        // travelPlan[0][index].pop(index1)\r\n      }\r\n      \r\n    }\r\n    else if(index==0){\r\n      if(index1==0){\r\n        start_location={lat:6.927079,lng:79.857750}\r\n        // travelPlan[0][index].pop(index1)\r\n\r\n      }\r\n      else if(index1>0){\r\n        console.log(\"4\")\r\n        start_location=plan[index][index1-1].geometry.location\r\n        // travelPlan[0][index].pop(index1)\r\n      }\r\n      \r\n    }\r\n\r\n\r\n    if(index<travelDays-1){\r\n      if(index1==plan[index].length-1){\r\n        console.log(\"5\")\r\n        end_location=plan[index+1][0].geometry.location\r\n        travelPlan[0][index].splice(index1,1)\r\n        \r\n      }\r\n      else if(index1<plan[index].length-1){\r\n        console.log(\"6\")\r\n        end_location=plan[index][index1+1].geometry.location\r\n        travelPlan[0][index].splice(index1,1)\r\n        \r\n      }\r\n    }\r\n    else if(index==travelDays-1){\r\n       if(index1==plan[index].length-1){\r\n\r\n        console.log(\"7\")\r\n        travelPlan[0][index].splice(index1,1)\r\n          travelPlan[1].pop(l-1)\r\n          return travelPlan\r\n       }\r\n       else if (index1<plan[index].length-1){\r\n         console.log(\"8\")\r\n          end_location=plan[index][index1+1].geometry.location\r\n          travelPlan[0][index].splice(index1,1)\r\n        \r\n       }\r\n    }\r\n    \r\n\r\n    return client\r\n      .directions({params:{\r\n          origin:start_location,\r\n          destination:end_location,\r\n          optimizeWaypoints: true,\r\n          travelMode: 'DRIVING',\r\n          key: \"AIzaSyCB9FiwGVeEmdfBAwxiQpPuz0fsDMiwPWY\",\r\n\r\n        }})\r\n        .then((response) => {\r\n          const route = response.data.routes[0];\r\n          travelPlan[1].pop(l-1)\r\n          travelPlan[1][l-1]=route.legs[0]\r\n         \r\n          return travelPlan\r\n         \r\n\r\n        })\r\n         .catch((e) =>{ \r\n           console.log(e)\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n \r\n   \r\n\r\n}"]},"metadata":{},"sourceType":"module"}